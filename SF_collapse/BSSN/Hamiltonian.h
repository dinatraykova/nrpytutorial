const REAL invdx0 = 1.0/dxx[0];
const REAL invdx1 = 1.0/dxx[1];
const REAL invdx2 = 1.0/dxx[2];
#pragma omp parallel for
for(int i2=NGHOSTS; i2<NGHOSTS+Nxx[2]; i2++) {
    const REAL xx2 = xx[2][i2];
    for(int i1=NGHOSTS; i1<NGHOSTS+Nxx[1]; i1++) {
        const REAL xx1 = xx[1][i1];
        for(int i0=NGHOSTS; i0<NGHOSTS+Nxx[0]; i0++) {
            const REAL xx0 = xx[0][i0];
            {
               /* 
                * NRPy+ Finite Difference Code Generation, Step 1 of 2: Read from main memory and compute finite difference stencils:
                */
               const double hDD00_i0m2_i1m2_i2 = in_gfs[IDX4(HDD00GF, i0-2,i1-2,i2)];
               const double hDD00_i0m1_i1m2_i2 = in_gfs[IDX4(HDD00GF, i0-1,i1-2,i2)];
               const double hDD00_i0_i1m2_i2 = in_gfs[IDX4(HDD00GF, i0,i1-2,i2)];
               const double hDD00_i0p1_i1m2_i2 = in_gfs[IDX4(HDD00GF, i0+1,i1-2,i2)];
               const double hDD00_i0p2_i1m2_i2 = in_gfs[IDX4(HDD00GF, i0+2,i1-2,i2)];
               const double hDD00_i0m2_i1m1_i2 = in_gfs[IDX4(HDD00GF, i0-2,i1-1,i2)];
               const double hDD00_i0m1_i1m1_i2 = in_gfs[IDX4(HDD00GF, i0-1,i1-1,i2)];
               const double hDD00_i0_i1m1_i2 = in_gfs[IDX4(HDD00GF, i0,i1-1,i2)];
               const double hDD00_i0p1_i1m1_i2 = in_gfs[IDX4(HDD00GF, i0+1,i1-1,i2)];
               const double hDD00_i0p2_i1m1_i2 = in_gfs[IDX4(HDD00GF, i0+2,i1-1,i2)];
               const double hDD00_i0m2_i1_i2 = in_gfs[IDX4(HDD00GF, i0-2,i1,i2)];
               const double hDD00_i0m1_i1_i2 = in_gfs[IDX4(HDD00GF, i0-1,i1,i2)];
               const double hDD00 = in_gfs[IDX4(HDD00GF, i0,i1,i2)];
               const double hDD00_i0p1_i1_i2 = in_gfs[IDX4(HDD00GF, i0+1,i1,i2)];
               const double hDD00_i0p2_i1_i2 = in_gfs[IDX4(HDD00GF, i0+2,i1,i2)];
               const double hDD00_i0m2_i1p1_i2 = in_gfs[IDX4(HDD00GF, i0-2,i1+1,i2)];
               const double hDD00_i0m1_i1p1_i2 = in_gfs[IDX4(HDD00GF, i0-1,i1+1,i2)];
               const double hDD00_i0_i1p1_i2 = in_gfs[IDX4(HDD00GF, i0,i1+1,i2)];
               const double hDD00_i0p1_i1p1_i2 = in_gfs[IDX4(HDD00GF, i0+1,i1+1,i2)];
               const double hDD00_i0p2_i1p1_i2 = in_gfs[IDX4(HDD00GF, i0+2,i1+1,i2)];
               const double hDD00_i0m2_i1p2_i2 = in_gfs[IDX4(HDD00GF, i0-2,i1+2,i2)];
               const double hDD00_i0m1_i1p2_i2 = in_gfs[IDX4(HDD00GF, i0-1,i1+2,i2)];
               const double hDD00_i0_i1p2_i2 = in_gfs[IDX4(HDD00GF, i0,i1+2,i2)];
               const double hDD00_i0p1_i1p2_i2 = in_gfs[IDX4(HDD00GF, i0+1,i1+2,i2)];
               const double hDD00_i0p2_i1p2_i2 = in_gfs[IDX4(HDD00GF, i0+2,i1+2,i2)];
               const double hDD01_i0m2_i1m2_i2 = in_gfs[IDX4(HDD01GF, i0-2,i1-2,i2)];
               const double hDD01_i0m1_i1m2_i2 = in_gfs[IDX4(HDD01GF, i0-1,i1-2,i2)];
               const double hDD01_i0_i1m2_i2 = in_gfs[IDX4(HDD01GF, i0,i1-2,i2)];
               const double hDD01_i0p1_i1m2_i2 = in_gfs[IDX4(HDD01GF, i0+1,i1-2,i2)];
               const double hDD01_i0p2_i1m2_i2 = in_gfs[IDX4(HDD01GF, i0+2,i1-2,i2)];
               const double hDD01_i0m2_i1m1_i2 = in_gfs[IDX4(HDD01GF, i0-2,i1-1,i2)];
               const double hDD01_i0m1_i1m1_i2 = in_gfs[IDX4(HDD01GF, i0-1,i1-1,i2)];
               const double hDD01_i0_i1m1_i2 = in_gfs[IDX4(HDD01GF, i0,i1-1,i2)];
               const double hDD01_i0p1_i1m1_i2 = in_gfs[IDX4(HDD01GF, i0+1,i1-1,i2)];
               const double hDD01_i0p2_i1m1_i2 = in_gfs[IDX4(HDD01GF, i0+2,i1-1,i2)];
               const double hDD01_i0m2_i1_i2 = in_gfs[IDX4(HDD01GF, i0-2,i1,i2)];
               const double hDD01_i0m1_i1_i2 = in_gfs[IDX4(HDD01GF, i0-1,i1,i2)];
               const double hDD01 = in_gfs[IDX4(HDD01GF, i0,i1,i2)];
               const double hDD01_i0p1_i1_i2 = in_gfs[IDX4(HDD01GF, i0+1,i1,i2)];
               const double hDD01_i0p2_i1_i2 = in_gfs[IDX4(HDD01GF, i0+2,i1,i2)];
               const double hDD01_i0m2_i1p1_i2 = in_gfs[IDX4(HDD01GF, i0-2,i1+1,i2)];
               const double hDD01_i0m1_i1p1_i2 = in_gfs[IDX4(HDD01GF, i0-1,i1+1,i2)];
               const double hDD01_i0_i1p1_i2 = in_gfs[IDX4(HDD01GF, i0,i1+1,i2)];
               const double hDD01_i0p1_i1p1_i2 = in_gfs[IDX4(HDD01GF, i0+1,i1+1,i2)];
               const double hDD01_i0p2_i1p1_i2 = in_gfs[IDX4(HDD01GF, i0+2,i1+1,i2)];
               const double hDD01_i0m2_i1p2_i2 = in_gfs[IDX4(HDD01GF, i0-2,i1+2,i2)];
               const double hDD01_i0m1_i1p2_i2 = in_gfs[IDX4(HDD01GF, i0-1,i1+2,i2)];
               const double hDD01_i0_i1p2_i2 = in_gfs[IDX4(HDD01GF, i0,i1+2,i2)];
               const double hDD01_i0p1_i1p2_i2 = in_gfs[IDX4(HDD01GF, i0+1,i1+2,i2)];
               const double hDD01_i0p2_i1p2_i2 = in_gfs[IDX4(HDD01GF, i0+2,i1+2,i2)];
               const double hDD02_i0m2_i1m2_i2 = in_gfs[IDX4(HDD02GF, i0-2,i1-2,i2)];
               const double hDD02_i0m1_i1m2_i2 = in_gfs[IDX4(HDD02GF, i0-1,i1-2,i2)];
               const double hDD02_i0_i1m2_i2 = in_gfs[IDX4(HDD02GF, i0,i1-2,i2)];
               const double hDD02_i0p1_i1m2_i2 = in_gfs[IDX4(HDD02GF, i0+1,i1-2,i2)];
               const double hDD02_i0p2_i1m2_i2 = in_gfs[IDX4(HDD02GF, i0+2,i1-2,i2)];
               const double hDD02_i0m2_i1m1_i2 = in_gfs[IDX4(HDD02GF, i0-2,i1-1,i2)];
               const double hDD02_i0m1_i1m1_i2 = in_gfs[IDX4(HDD02GF, i0-1,i1-1,i2)];
               const double hDD02_i0_i1m1_i2 = in_gfs[IDX4(HDD02GF, i0,i1-1,i2)];
               const double hDD02_i0p1_i1m1_i2 = in_gfs[IDX4(HDD02GF, i0+1,i1-1,i2)];
               const double hDD02_i0p2_i1m1_i2 = in_gfs[IDX4(HDD02GF, i0+2,i1-1,i2)];
               const double hDD02_i0m2_i1_i2 = in_gfs[IDX4(HDD02GF, i0-2,i1,i2)];
               const double hDD02_i0m1_i1_i2 = in_gfs[IDX4(HDD02GF, i0-1,i1,i2)];
               const double hDD02 = in_gfs[IDX4(HDD02GF, i0,i1,i2)];
               const double hDD02_i0p1_i1_i2 = in_gfs[IDX4(HDD02GF, i0+1,i1,i2)];
               const double hDD02_i0p2_i1_i2 = in_gfs[IDX4(HDD02GF, i0+2,i1,i2)];
               const double hDD02_i0m2_i1p1_i2 = in_gfs[IDX4(HDD02GF, i0-2,i1+1,i2)];
               const double hDD02_i0m1_i1p1_i2 = in_gfs[IDX4(HDD02GF, i0-1,i1+1,i2)];
               const double hDD02_i0_i1p1_i2 = in_gfs[IDX4(HDD02GF, i0,i1+1,i2)];
               const double hDD02_i0p1_i1p1_i2 = in_gfs[IDX4(HDD02GF, i0+1,i1+1,i2)];
               const double hDD02_i0p2_i1p1_i2 = in_gfs[IDX4(HDD02GF, i0+2,i1+1,i2)];
               const double hDD02_i0m2_i1p2_i2 = in_gfs[IDX4(HDD02GF, i0-2,i1+2,i2)];
               const double hDD02_i0m1_i1p2_i2 = in_gfs[IDX4(HDD02GF, i0-1,i1+2,i2)];
               const double hDD02_i0_i1p2_i2 = in_gfs[IDX4(HDD02GF, i0,i1+2,i2)];
               const double hDD02_i0p1_i1p2_i2 = in_gfs[IDX4(HDD02GF, i0+1,i1+2,i2)];
               const double hDD02_i0p2_i1p2_i2 = in_gfs[IDX4(HDD02GF, i0+2,i1+2,i2)];
               const double hDD11_i0m2_i1m2_i2 = in_gfs[IDX4(HDD11GF, i0-2,i1-2,i2)];
               const double hDD11_i0m1_i1m2_i2 = in_gfs[IDX4(HDD11GF, i0-1,i1-2,i2)];
               const double hDD11_i0_i1m2_i2 = in_gfs[IDX4(HDD11GF, i0,i1-2,i2)];
               const double hDD11_i0p1_i1m2_i2 = in_gfs[IDX4(HDD11GF, i0+1,i1-2,i2)];
               const double hDD11_i0p2_i1m2_i2 = in_gfs[IDX4(HDD11GF, i0+2,i1-2,i2)];
               const double hDD11_i0m2_i1m1_i2 = in_gfs[IDX4(HDD11GF, i0-2,i1-1,i2)];
               const double hDD11_i0m1_i1m1_i2 = in_gfs[IDX4(HDD11GF, i0-1,i1-1,i2)];
               const double hDD11_i0_i1m1_i2 = in_gfs[IDX4(HDD11GF, i0,i1-1,i2)];
               const double hDD11_i0p1_i1m1_i2 = in_gfs[IDX4(HDD11GF, i0+1,i1-1,i2)];
               const double hDD11_i0p2_i1m1_i2 = in_gfs[IDX4(HDD11GF, i0+2,i1-1,i2)];
               const double hDD11_i0m2_i1_i2 = in_gfs[IDX4(HDD11GF, i0-2,i1,i2)];
               const double hDD11_i0m1_i1_i2 = in_gfs[IDX4(HDD11GF, i0-1,i1,i2)];
               const double hDD11 = in_gfs[IDX4(HDD11GF, i0,i1,i2)];
               const double hDD11_i0p1_i1_i2 = in_gfs[IDX4(HDD11GF, i0+1,i1,i2)];
               const double hDD11_i0p2_i1_i2 = in_gfs[IDX4(HDD11GF, i0+2,i1,i2)];
               const double hDD11_i0m2_i1p1_i2 = in_gfs[IDX4(HDD11GF, i0-2,i1+1,i2)];
               const double hDD11_i0m1_i1p1_i2 = in_gfs[IDX4(HDD11GF, i0-1,i1+1,i2)];
               const double hDD11_i0_i1p1_i2 = in_gfs[IDX4(HDD11GF, i0,i1+1,i2)];
               const double hDD11_i0p1_i1p1_i2 = in_gfs[IDX4(HDD11GF, i0+1,i1+1,i2)];
               const double hDD11_i0p2_i1p1_i2 = in_gfs[IDX4(HDD11GF, i0+2,i1+1,i2)];
               const double hDD11_i0m2_i1p2_i2 = in_gfs[IDX4(HDD11GF, i0-2,i1+2,i2)];
               const double hDD11_i0m1_i1p2_i2 = in_gfs[IDX4(HDD11GF, i0-1,i1+2,i2)];
               const double hDD11_i0_i1p2_i2 = in_gfs[IDX4(HDD11GF, i0,i1+2,i2)];
               const double hDD11_i0p1_i1p2_i2 = in_gfs[IDX4(HDD11GF, i0+1,i1+2,i2)];
               const double hDD11_i0p2_i1p2_i2 = in_gfs[IDX4(HDD11GF, i0+2,i1+2,i2)];
               const double hDD12_i0m2_i1m2_i2 = in_gfs[IDX4(HDD12GF, i0-2,i1-2,i2)];
               const double hDD12_i0m1_i1m2_i2 = in_gfs[IDX4(HDD12GF, i0-1,i1-2,i2)];
               const double hDD12_i0_i1m2_i2 = in_gfs[IDX4(HDD12GF, i0,i1-2,i2)];
               const double hDD12_i0p1_i1m2_i2 = in_gfs[IDX4(HDD12GF, i0+1,i1-2,i2)];
               const double hDD12_i0p2_i1m2_i2 = in_gfs[IDX4(HDD12GF, i0+2,i1-2,i2)];
               const double hDD12_i0m2_i1m1_i2 = in_gfs[IDX4(HDD12GF, i0-2,i1-1,i2)];
               const double hDD12_i0m1_i1m1_i2 = in_gfs[IDX4(HDD12GF, i0-1,i1-1,i2)];
               const double hDD12_i0_i1m1_i2 = in_gfs[IDX4(HDD12GF, i0,i1-1,i2)];
               const double hDD12_i0p1_i1m1_i2 = in_gfs[IDX4(HDD12GF, i0+1,i1-1,i2)];
               const double hDD12_i0p2_i1m1_i2 = in_gfs[IDX4(HDD12GF, i0+2,i1-1,i2)];
               const double hDD12_i0m2_i1_i2 = in_gfs[IDX4(HDD12GF, i0-2,i1,i2)];
               const double hDD12_i0m1_i1_i2 = in_gfs[IDX4(HDD12GF, i0-1,i1,i2)];
               const double hDD12 = in_gfs[IDX4(HDD12GF, i0,i1,i2)];
               const double hDD12_i0p1_i1_i2 = in_gfs[IDX4(HDD12GF, i0+1,i1,i2)];
               const double hDD12_i0p2_i1_i2 = in_gfs[IDX4(HDD12GF, i0+2,i1,i2)];
               const double hDD12_i0m2_i1p1_i2 = in_gfs[IDX4(HDD12GF, i0-2,i1+1,i2)];
               const double hDD12_i0m1_i1p1_i2 = in_gfs[IDX4(HDD12GF, i0-1,i1+1,i2)];
               const double hDD12_i0_i1p1_i2 = in_gfs[IDX4(HDD12GF, i0,i1+1,i2)];
               const double hDD12_i0p1_i1p1_i2 = in_gfs[IDX4(HDD12GF, i0+1,i1+1,i2)];
               const double hDD12_i0p2_i1p1_i2 = in_gfs[IDX4(HDD12GF, i0+2,i1+1,i2)];
               const double hDD12_i0m2_i1p2_i2 = in_gfs[IDX4(HDD12GF, i0-2,i1+2,i2)];
               const double hDD12_i0m1_i1p2_i2 = in_gfs[IDX4(HDD12GF, i0-1,i1+2,i2)];
               const double hDD12_i0_i1p2_i2 = in_gfs[IDX4(HDD12GF, i0,i1+2,i2)];
               const double hDD12_i0p1_i1p2_i2 = in_gfs[IDX4(HDD12GF, i0+1,i1+2,i2)];
               const double hDD12_i0p2_i1p2_i2 = in_gfs[IDX4(HDD12GF, i0+2,i1+2,i2)];
               const double hDD22_i0m2_i1m2_i2 = in_gfs[IDX4(HDD22GF, i0-2,i1-2,i2)];
               const double hDD22_i0m1_i1m2_i2 = in_gfs[IDX4(HDD22GF, i0-1,i1-2,i2)];
               const double hDD22_i0_i1m2_i2 = in_gfs[IDX4(HDD22GF, i0,i1-2,i2)];
               const double hDD22_i0p1_i1m2_i2 = in_gfs[IDX4(HDD22GF, i0+1,i1-2,i2)];
               const double hDD22_i0p2_i1m2_i2 = in_gfs[IDX4(HDD22GF, i0+2,i1-2,i2)];
               const double hDD22_i0m2_i1m1_i2 = in_gfs[IDX4(HDD22GF, i0-2,i1-1,i2)];
               const double hDD22_i0m1_i1m1_i2 = in_gfs[IDX4(HDD22GF, i0-1,i1-1,i2)];
               const double hDD22_i0_i1m1_i2 = in_gfs[IDX4(HDD22GF, i0,i1-1,i2)];
               const double hDD22_i0p1_i1m1_i2 = in_gfs[IDX4(HDD22GF, i0+1,i1-1,i2)];
               const double hDD22_i0p2_i1m1_i2 = in_gfs[IDX4(HDD22GF, i0+2,i1-1,i2)];
               const double hDD22_i0m2_i1_i2 = in_gfs[IDX4(HDD22GF, i0-2,i1,i2)];
               const double hDD22_i0m1_i1_i2 = in_gfs[IDX4(HDD22GF, i0-1,i1,i2)];
               const double hDD22 = in_gfs[IDX4(HDD22GF, i0,i1,i2)];
               const double hDD22_i0p1_i1_i2 = in_gfs[IDX4(HDD22GF, i0+1,i1,i2)];
               const double hDD22_i0p2_i1_i2 = in_gfs[IDX4(HDD22GF, i0+2,i1,i2)];
               const double hDD22_i0m2_i1p1_i2 = in_gfs[IDX4(HDD22GF, i0-2,i1+1,i2)];
               const double hDD22_i0m1_i1p1_i2 = in_gfs[IDX4(HDD22GF, i0-1,i1+1,i2)];
               const double hDD22_i0_i1p1_i2 = in_gfs[IDX4(HDD22GF, i0,i1+1,i2)];
               const double hDD22_i0p1_i1p1_i2 = in_gfs[IDX4(HDD22GF, i0+1,i1+1,i2)];
               const double hDD22_i0p2_i1p1_i2 = in_gfs[IDX4(HDD22GF, i0+2,i1+1,i2)];
               const double hDD22_i0m2_i1p2_i2 = in_gfs[IDX4(HDD22GF, i0-2,i1+2,i2)];
               const double hDD22_i0m1_i1p2_i2 = in_gfs[IDX4(HDD22GF, i0-1,i1+2,i2)];
               const double hDD22_i0_i1p2_i2 = in_gfs[IDX4(HDD22GF, i0,i1+2,i2)];
               const double hDD22_i0p1_i1p2_i2 = in_gfs[IDX4(HDD22GF, i0+1,i1+2,i2)];
               const double hDD22_i0p2_i1p2_i2 = in_gfs[IDX4(HDD22GF, i0+2,i1+2,i2)];
               const double aDD00 = in_gfs[IDX4(ADD00GF, i0,i1,i2)];
               const double aDD01 = in_gfs[IDX4(ADD01GF, i0,i1,i2)];
               const double aDD02 = in_gfs[IDX4(ADD02GF, i0,i1,i2)];
               const double aDD11 = in_gfs[IDX4(ADD11GF, i0,i1,i2)];
               const double aDD12 = in_gfs[IDX4(ADD12GF, i0,i1,i2)];
               const double aDD22 = in_gfs[IDX4(ADD22GF, i0,i1,i2)];
               const double lambdaU0_i0_i1m2_i2 = in_gfs[IDX4(LAMBDAU0GF, i0,i1-2,i2)];
               const double lambdaU0_i0_i1m1_i2 = in_gfs[IDX4(LAMBDAU0GF, i0,i1-1,i2)];
               const double lambdaU0_i0m2_i1_i2 = in_gfs[IDX4(LAMBDAU0GF, i0-2,i1,i2)];
               const double lambdaU0_i0m1_i1_i2 = in_gfs[IDX4(LAMBDAU0GF, i0-1,i1,i2)];
               const double lambdaU0 = in_gfs[IDX4(LAMBDAU0GF, i0,i1,i2)];
               const double lambdaU0_i0p1_i1_i2 = in_gfs[IDX4(LAMBDAU0GF, i0+1,i1,i2)];
               const double lambdaU0_i0p2_i1_i2 = in_gfs[IDX4(LAMBDAU0GF, i0+2,i1,i2)];
               const double lambdaU0_i0_i1p1_i2 = in_gfs[IDX4(LAMBDAU0GF, i0,i1+1,i2)];
               const double lambdaU0_i0_i1p2_i2 = in_gfs[IDX4(LAMBDAU0GF, i0,i1+2,i2)];
               const double lambdaU1_i0_i1m2_i2 = in_gfs[IDX4(LAMBDAU1GF, i0,i1-2,i2)];
               const double lambdaU1_i0_i1m1_i2 = in_gfs[IDX4(LAMBDAU1GF, i0,i1-1,i2)];
               const double lambdaU1_i0m2_i1_i2 = in_gfs[IDX4(LAMBDAU1GF, i0-2,i1,i2)];
               const double lambdaU1_i0m1_i1_i2 = in_gfs[IDX4(LAMBDAU1GF, i0-1,i1,i2)];
               const double lambdaU1 = in_gfs[IDX4(LAMBDAU1GF, i0,i1,i2)];
               const double lambdaU1_i0p1_i1_i2 = in_gfs[IDX4(LAMBDAU1GF, i0+1,i1,i2)];
               const double lambdaU1_i0p2_i1_i2 = in_gfs[IDX4(LAMBDAU1GF, i0+2,i1,i2)];
               const double lambdaU1_i0_i1p1_i2 = in_gfs[IDX4(LAMBDAU1GF, i0,i1+1,i2)];
               const double lambdaU1_i0_i1p2_i2 = in_gfs[IDX4(LAMBDAU1GF, i0,i1+2,i2)];
               const double lambdaU2_i0_i1m2_i2 = in_gfs[IDX4(LAMBDAU2GF, i0,i1-2,i2)];
               const double lambdaU2_i0_i1m1_i2 = in_gfs[IDX4(LAMBDAU2GF, i0,i1-1,i2)];
               const double lambdaU2_i0m2_i1_i2 = in_gfs[IDX4(LAMBDAU2GF, i0-2,i1,i2)];
               const double lambdaU2_i0m1_i1_i2 = in_gfs[IDX4(LAMBDAU2GF, i0-1,i1,i2)];
               const double lambdaU2 = in_gfs[IDX4(LAMBDAU2GF, i0,i1,i2)];
               const double lambdaU2_i0p1_i1_i2 = in_gfs[IDX4(LAMBDAU2GF, i0+1,i1,i2)];
               const double lambdaU2_i0p2_i1_i2 = in_gfs[IDX4(LAMBDAU2GF, i0+2,i1,i2)];
               const double lambdaU2_i0_i1p1_i2 = in_gfs[IDX4(LAMBDAU2GF, i0,i1+1,i2)];
               const double lambdaU2_i0_i1p2_i2 = in_gfs[IDX4(LAMBDAU2GF, i0,i1+2,i2)];
               const double trK = in_gfs[IDX4(TRKGF, i0,i1,i2)];
               const double cf_i0m2_i1m2_i2 = in_gfs[IDX4(CFGF, i0-2,i1-2,i2)];
               const double cf_i0m1_i1m2_i2 = in_gfs[IDX4(CFGF, i0-1,i1-2,i2)];
               const double cf_i0_i1m2_i2 = in_gfs[IDX4(CFGF, i0,i1-2,i2)];
               const double cf_i0p1_i1m2_i2 = in_gfs[IDX4(CFGF, i0+1,i1-2,i2)];
               const double cf_i0p2_i1m2_i2 = in_gfs[IDX4(CFGF, i0+2,i1-2,i2)];
               const double cf_i0m2_i1m1_i2 = in_gfs[IDX4(CFGF, i0-2,i1-1,i2)];
               const double cf_i0m1_i1m1_i2 = in_gfs[IDX4(CFGF, i0-1,i1-1,i2)];
               const double cf_i0_i1m1_i2 = in_gfs[IDX4(CFGF, i0,i1-1,i2)];
               const double cf_i0p1_i1m1_i2 = in_gfs[IDX4(CFGF, i0+1,i1-1,i2)];
               const double cf_i0p2_i1m1_i2 = in_gfs[IDX4(CFGF, i0+2,i1-1,i2)];
               const double cf_i0m2_i1_i2 = in_gfs[IDX4(CFGF, i0-2,i1,i2)];
               const double cf_i0m1_i1_i2 = in_gfs[IDX4(CFGF, i0-1,i1,i2)];
               const double cf = in_gfs[IDX4(CFGF, i0,i1,i2)];
               const double cf_i0p1_i1_i2 = in_gfs[IDX4(CFGF, i0+1,i1,i2)];
               const double cf_i0p2_i1_i2 = in_gfs[IDX4(CFGF, i0+2,i1,i2)];
               const double cf_i0m2_i1p1_i2 = in_gfs[IDX4(CFGF, i0-2,i1+1,i2)];
               const double cf_i0m1_i1p1_i2 = in_gfs[IDX4(CFGF, i0-1,i1+1,i2)];
               const double cf_i0_i1p1_i2 = in_gfs[IDX4(CFGF, i0,i1+1,i2)];
               const double cf_i0p1_i1p1_i2 = in_gfs[IDX4(CFGF, i0+1,i1+1,i2)];
               const double cf_i0p2_i1p1_i2 = in_gfs[IDX4(CFGF, i0+2,i1+1,i2)];
               const double cf_i0m2_i1p2_i2 = in_gfs[IDX4(CFGF, i0-2,i1+2,i2)];
               const double cf_i0m1_i1p2_i2 = in_gfs[IDX4(CFGF, i0-1,i1+2,i2)];
               const double cf_i0_i1p2_i2 = in_gfs[IDX4(CFGF, i0,i1+2,i2)];
               const double cf_i0p1_i1p2_i2 = in_gfs[IDX4(CFGF, i0+1,i1+2,i2)];
               const double cf_i0p2_i1p2_i2 = in_gfs[IDX4(CFGF, i0+2,i1+2,i2)];
               const double uu_i0_i1m2_i2 = in_gfs[IDX4(UUGF, i0,i1-2,i2)];
               const double uu_i0_i1m1_i2 = in_gfs[IDX4(UUGF, i0,i1-1,i2)];
               const double uu_i0m2_i1_i2 = in_gfs[IDX4(UUGF, i0-2,i1,i2)];
               const double uu_i0m1_i1_i2 = in_gfs[IDX4(UUGF, i0-1,i1,i2)];
               const double uu = in_gfs[IDX4(UUGF, i0,i1,i2)];
               const double uu_i0p1_i1_i2 = in_gfs[IDX4(UUGF, i0+1,i1,i2)];
               const double uu_i0p2_i1_i2 = in_gfs[IDX4(UUGF, i0+2,i1,i2)];
               const double uu_i0_i1p1_i2 = in_gfs[IDX4(UUGF, i0,i1+1,i2)];
               const double uu_i0_i1p2_i2 = in_gfs[IDX4(UUGF, i0,i1+2,i2)];
               const double vv = in_gfs[IDX4(VVGF, i0,i1,i2)];
               const double tmpFD0 = (1.0/12.0)*cf_i0m2_i1_i2;
               const double tmpFD1 = -1.0/12.0*cf_i0p2_i1_i2;
               const double tmpFD2 = (1.0/12.0)*cf_i0_i1m2_i2;
               const double tmpFD3 = -1.0/12.0*cf_i0_i1p2_i2;
               const double tmpFD4 = pow(invdx0, 2);
               const double tmpFD5 = -5.0/2.0*cf;
               const double tmpFD6 = invdx0*invdx1;
               const double tmpFD7 = pow(invdx1, 2);
               const double tmpFD8 = (1.0/12.0)*hDD00_i0m2_i1_i2;
               const double tmpFD9 = -1.0/12.0*hDD00_i0p2_i1_i2;
               const double tmpFD10 = (1.0/12.0)*hDD00_i0_i1m2_i2;
               const double tmpFD11 = -1.0/12.0*hDD00_i0_i1p2_i2;
               const double tmpFD12 = (1.0/12.0)*hDD01_i0m2_i1_i2;
               const double tmpFD13 = -1.0/12.0*hDD01_i0p2_i1_i2;
               const double tmpFD14 = (1.0/12.0)*hDD01_i0_i1m2_i2;
               const double tmpFD15 = -1.0/12.0*hDD01_i0_i1p2_i2;
               const double tmpFD16 = (1.0/12.0)*hDD02_i0m2_i1_i2;
               const double tmpFD17 = -1.0/12.0*hDD02_i0p2_i1_i2;
               const double tmpFD18 = (1.0/12.0)*hDD02_i0_i1m2_i2;
               const double tmpFD19 = -1.0/12.0*hDD02_i0_i1p2_i2;
               const double tmpFD20 = (1.0/12.0)*hDD11_i0m2_i1_i2;
               const double tmpFD21 = -1.0/12.0*hDD11_i0p2_i1_i2;
               const double tmpFD22 = (1.0/12.0)*hDD11_i0_i1m2_i2;
               const double tmpFD23 = -1.0/12.0*hDD11_i0_i1p2_i2;
               const double tmpFD24 = (1.0/12.0)*hDD12_i0m2_i1_i2;
               const double tmpFD25 = -1.0/12.0*hDD12_i0p2_i1_i2;
               const double tmpFD26 = (1.0/12.0)*hDD12_i0_i1m2_i2;
               const double tmpFD27 = -1.0/12.0*hDD12_i0_i1p2_i2;
               const double tmpFD28 = (1.0/12.0)*hDD22_i0m2_i1_i2;
               const double tmpFD29 = -1.0/12.0*hDD22_i0p2_i1_i2;
               const double tmpFD30 = (1.0/12.0)*hDD22_i0_i1m2_i2;
               const double tmpFD31 = -1.0/12.0*hDD22_i0_i1p2_i2;
               const double tmpFD32 = -5.0/2.0*hDD00;
               const double tmpFD33 = -5.0/2.0*hDD01;
               const double tmpFD34 = -5.0/2.0*hDD02;
               const double tmpFD35 = -5.0/2.0*hDD11;
               const double tmpFD36 = -5.0/2.0*hDD12;
               const double tmpFD37 = -5.0/2.0*hDD22;
               const double cf_dD0 = invdx0*(-2.0/3.0*cf_i0m1_i1_i2 + (2.0/3.0)*cf_i0p1_i1_i2 + tmpFD0 + tmpFD1);
               const double cf_dD1 = invdx1*(-2.0/3.0*cf_i0_i1m1_i2 + (2.0/3.0)*cf_i0_i1p1_i2 + tmpFD2 + tmpFD3);
               const double cf_dDD00 = tmpFD4*((4.0/3.0)*cf_i0m1_i1_i2 + (4.0/3.0)*cf_i0p1_i1_i2 - tmpFD0 + tmpFD1 + tmpFD5);
               const double cf_dDD01 = tmpFD6*((4.0/9.0)*cf_i0m1_i1m1_i2 - 1.0/18.0*cf_i0m1_i1m2_i2 - 4.0/9.0*cf_i0m1_i1p1_i2 + (1.0/18.0)*cf_i0m1_i1p2_i2 - 1.0/18.0*cf_i0m2_i1m1_i2 + (1.0/144.0)*cf_i0m2_i1m2_i2 + (1.0/18.0)*cf_i0m2_i1p1_i2 - 1.0/144.0*cf_i0m2_i1p2_i2 - 4.0/9.0*cf_i0p1_i1m1_i2 + (1.0/18.0)*cf_i0p1_i1m2_i2 + (4.0/9.0)*cf_i0p1_i1p1_i2 - 1.0/18.0*cf_i0p1_i1p2_i2 + (1.0/18.0)*cf_i0p2_i1m1_i2 - 1.0/144.0*cf_i0p2_i1m2_i2 - 1.0/18.0*cf_i0p2_i1p1_i2 + (1.0/144.0)*cf_i0p2_i1p2_i2);
               const double cf_dDD11 = tmpFD7*((4.0/3.0)*cf_i0_i1m1_i2 + (4.0/3.0)*cf_i0_i1p1_i2 - tmpFD2 + tmpFD3 + tmpFD5);
               const double hDD_dD000 = invdx0*(-2.0/3.0*hDD00_i0m1_i1_i2 + (2.0/3.0)*hDD00_i0p1_i1_i2 + tmpFD8 + tmpFD9);
               const double hDD_dD001 = invdx1*(-2.0/3.0*hDD00_i0_i1m1_i2 + (2.0/3.0)*hDD00_i0_i1p1_i2 + tmpFD10 + tmpFD11);
               const double hDD_dD010 = invdx0*(-2.0/3.0*hDD01_i0m1_i1_i2 + (2.0/3.0)*hDD01_i0p1_i1_i2 + tmpFD12 + tmpFD13);
               const double hDD_dD011 = invdx1*(-2.0/3.0*hDD01_i0_i1m1_i2 + (2.0/3.0)*hDD01_i0_i1p1_i2 + tmpFD14 + tmpFD15);
               const double hDD_dD020 = invdx0*(-2.0/3.0*hDD02_i0m1_i1_i2 + (2.0/3.0)*hDD02_i0p1_i1_i2 + tmpFD16 + tmpFD17);
               const double hDD_dD021 = invdx1*(-2.0/3.0*hDD02_i0_i1m1_i2 + (2.0/3.0)*hDD02_i0_i1p1_i2 + tmpFD18 + tmpFD19);
               const double hDD_dD110 = invdx0*(-2.0/3.0*hDD11_i0m1_i1_i2 + (2.0/3.0)*hDD11_i0p1_i1_i2 + tmpFD20 + tmpFD21);
               const double hDD_dD111 = invdx1*(-2.0/3.0*hDD11_i0_i1m1_i2 + (2.0/3.0)*hDD11_i0_i1p1_i2 + tmpFD22 + tmpFD23);
               const double hDD_dD120 = invdx0*(-2.0/3.0*hDD12_i0m1_i1_i2 + (2.0/3.0)*hDD12_i0p1_i1_i2 + tmpFD24 + tmpFD25);
               const double hDD_dD121 = invdx1*(-2.0/3.0*hDD12_i0_i1m1_i2 + (2.0/3.0)*hDD12_i0_i1p1_i2 + tmpFD26 + tmpFD27);
               const double hDD_dD220 = invdx0*(-2.0/3.0*hDD22_i0m1_i1_i2 + (2.0/3.0)*hDD22_i0p1_i1_i2 + tmpFD28 + tmpFD29);
               const double hDD_dD221 = invdx1*(-2.0/3.0*hDD22_i0_i1m1_i2 + (2.0/3.0)*hDD22_i0_i1p1_i2 + tmpFD30 + tmpFD31);
               const double hDD_dDD0000 = tmpFD4*((4.0/3.0)*hDD00_i0m1_i1_i2 + (4.0/3.0)*hDD00_i0p1_i1_i2 + tmpFD32 - tmpFD8 + tmpFD9);
               const double hDD_dDD0001 = tmpFD6*((4.0/9.0)*hDD00_i0m1_i1m1_i2 - 1.0/18.0*hDD00_i0m1_i1m2_i2 - 4.0/9.0*hDD00_i0m1_i1p1_i2 + (1.0/18.0)*hDD00_i0m1_i1p2_i2 - 1.0/18.0*hDD00_i0m2_i1m1_i2 + (1.0/144.0)*hDD00_i0m2_i1m2_i2 + (1.0/18.0)*hDD00_i0m2_i1p1_i2 - 1.0/144.0*hDD00_i0m2_i1p2_i2 - 4.0/9.0*hDD00_i0p1_i1m1_i2 + (1.0/18.0)*hDD00_i0p1_i1m2_i2 + (4.0/9.0)*hDD00_i0p1_i1p1_i2 - 1.0/18.0*hDD00_i0p1_i1p2_i2 + (1.0/18.0)*hDD00_i0p2_i1m1_i2 - 1.0/144.0*hDD00_i0p2_i1m2_i2 - 1.0/18.0*hDD00_i0p2_i1p1_i2 + (1.0/144.0)*hDD00_i0p2_i1p2_i2);
               const double hDD_dDD0011 = tmpFD7*((4.0/3.0)*hDD00_i0_i1m1_i2 + (4.0/3.0)*hDD00_i0_i1p1_i2 - tmpFD10 + tmpFD11 + tmpFD32);
               const double hDD_dDD0100 = tmpFD4*((4.0/3.0)*hDD01_i0m1_i1_i2 + (4.0/3.0)*hDD01_i0p1_i1_i2 - tmpFD12 + tmpFD13 + tmpFD33);
               const double hDD_dDD0101 = tmpFD6*((4.0/9.0)*hDD01_i0m1_i1m1_i2 - 1.0/18.0*hDD01_i0m1_i1m2_i2 - 4.0/9.0*hDD01_i0m1_i1p1_i2 + (1.0/18.0)*hDD01_i0m1_i1p2_i2 - 1.0/18.0*hDD01_i0m2_i1m1_i2 + (1.0/144.0)*hDD01_i0m2_i1m2_i2 + (1.0/18.0)*hDD01_i0m2_i1p1_i2 - 1.0/144.0*hDD01_i0m2_i1p2_i2 - 4.0/9.0*hDD01_i0p1_i1m1_i2 + (1.0/18.0)*hDD01_i0p1_i1m2_i2 + (4.0/9.0)*hDD01_i0p1_i1p1_i2 - 1.0/18.0*hDD01_i0p1_i1p2_i2 + (1.0/18.0)*hDD01_i0p2_i1m1_i2 - 1.0/144.0*hDD01_i0p2_i1m2_i2 - 1.0/18.0*hDD01_i0p2_i1p1_i2 + (1.0/144.0)*hDD01_i0p2_i1p2_i2);
               const double hDD_dDD0111 = tmpFD7*((4.0/3.0)*hDD01_i0_i1m1_i2 + (4.0/3.0)*hDD01_i0_i1p1_i2 - tmpFD14 + tmpFD15 + tmpFD33);
               const double hDD_dDD0200 = tmpFD4*((4.0/3.0)*hDD02_i0m1_i1_i2 + (4.0/3.0)*hDD02_i0p1_i1_i2 - tmpFD16 + tmpFD17 + tmpFD34);
               const double hDD_dDD0201 = tmpFD6*((4.0/9.0)*hDD02_i0m1_i1m1_i2 - 1.0/18.0*hDD02_i0m1_i1m2_i2 - 4.0/9.0*hDD02_i0m1_i1p1_i2 + (1.0/18.0)*hDD02_i0m1_i1p2_i2 - 1.0/18.0*hDD02_i0m2_i1m1_i2 + (1.0/144.0)*hDD02_i0m2_i1m2_i2 + (1.0/18.0)*hDD02_i0m2_i1p1_i2 - 1.0/144.0*hDD02_i0m2_i1p2_i2 - 4.0/9.0*hDD02_i0p1_i1m1_i2 + (1.0/18.0)*hDD02_i0p1_i1m2_i2 + (4.0/9.0)*hDD02_i0p1_i1p1_i2 - 1.0/18.0*hDD02_i0p1_i1p2_i2 + (1.0/18.0)*hDD02_i0p2_i1m1_i2 - 1.0/144.0*hDD02_i0p2_i1m2_i2 - 1.0/18.0*hDD02_i0p2_i1p1_i2 + (1.0/144.0)*hDD02_i0p2_i1p2_i2);
               const double hDD_dDD0211 = tmpFD7*((4.0/3.0)*hDD02_i0_i1m1_i2 + (4.0/3.0)*hDD02_i0_i1p1_i2 - tmpFD18 + tmpFD19 + tmpFD34);
               const double hDD_dDD1100 = tmpFD4*((4.0/3.0)*hDD11_i0m1_i1_i2 + (4.0/3.0)*hDD11_i0p1_i1_i2 - tmpFD20 + tmpFD21 + tmpFD35);
               const double hDD_dDD1101 = tmpFD6*((4.0/9.0)*hDD11_i0m1_i1m1_i2 - 1.0/18.0*hDD11_i0m1_i1m2_i2 - 4.0/9.0*hDD11_i0m1_i1p1_i2 + (1.0/18.0)*hDD11_i0m1_i1p2_i2 - 1.0/18.0*hDD11_i0m2_i1m1_i2 + (1.0/144.0)*hDD11_i0m2_i1m2_i2 + (1.0/18.0)*hDD11_i0m2_i1p1_i2 - 1.0/144.0*hDD11_i0m2_i1p2_i2 - 4.0/9.0*hDD11_i0p1_i1m1_i2 + (1.0/18.0)*hDD11_i0p1_i1m2_i2 + (4.0/9.0)*hDD11_i0p1_i1p1_i2 - 1.0/18.0*hDD11_i0p1_i1p2_i2 + (1.0/18.0)*hDD11_i0p2_i1m1_i2 - 1.0/144.0*hDD11_i0p2_i1m2_i2 - 1.0/18.0*hDD11_i0p2_i1p1_i2 + (1.0/144.0)*hDD11_i0p2_i1p2_i2);
               const double hDD_dDD1111 = tmpFD7*((4.0/3.0)*hDD11_i0_i1m1_i2 + (4.0/3.0)*hDD11_i0_i1p1_i2 - tmpFD22 + tmpFD23 + tmpFD35);
               const double hDD_dDD1200 = tmpFD4*((4.0/3.0)*hDD12_i0m1_i1_i2 + (4.0/3.0)*hDD12_i0p1_i1_i2 - tmpFD24 + tmpFD25 + tmpFD36);
               const double hDD_dDD1201 = tmpFD6*((4.0/9.0)*hDD12_i0m1_i1m1_i2 - 1.0/18.0*hDD12_i0m1_i1m2_i2 - 4.0/9.0*hDD12_i0m1_i1p1_i2 + (1.0/18.0)*hDD12_i0m1_i1p2_i2 - 1.0/18.0*hDD12_i0m2_i1m1_i2 + (1.0/144.0)*hDD12_i0m2_i1m2_i2 + (1.0/18.0)*hDD12_i0m2_i1p1_i2 - 1.0/144.0*hDD12_i0m2_i1p2_i2 - 4.0/9.0*hDD12_i0p1_i1m1_i2 + (1.0/18.0)*hDD12_i0p1_i1m2_i2 + (4.0/9.0)*hDD12_i0p1_i1p1_i2 - 1.0/18.0*hDD12_i0p1_i1p2_i2 + (1.0/18.0)*hDD12_i0p2_i1m1_i2 - 1.0/144.0*hDD12_i0p2_i1m2_i2 - 1.0/18.0*hDD12_i0p2_i1p1_i2 + (1.0/144.0)*hDD12_i0p2_i1p2_i2);
               const double hDD_dDD1211 = tmpFD7*((4.0/3.0)*hDD12_i0_i1m1_i2 + (4.0/3.0)*hDD12_i0_i1p1_i2 - tmpFD26 + tmpFD27 + tmpFD36);
               const double hDD_dDD2200 = tmpFD4*((4.0/3.0)*hDD22_i0m1_i1_i2 + (4.0/3.0)*hDD22_i0p1_i1_i2 - tmpFD28 + tmpFD29 + tmpFD37);
               const double hDD_dDD2201 = tmpFD6*((4.0/9.0)*hDD22_i0m1_i1m1_i2 - 1.0/18.0*hDD22_i0m1_i1m2_i2 - 4.0/9.0*hDD22_i0m1_i1p1_i2 + (1.0/18.0)*hDD22_i0m1_i1p2_i2 - 1.0/18.0*hDD22_i0m2_i1m1_i2 + (1.0/144.0)*hDD22_i0m2_i1m2_i2 + (1.0/18.0)*hDD22_i0m2_i1p1_i2 - 1.0/144.0*hDD22_i0m2_i1p2_i2 - 4.0/9.0*hDD22_i0p1_i1m1_i2 + (1.0/18.0)*hDD22_i0p1_i1m2_i2 + (4.0/9.0)*hDD22_i0p1_i1p1_i2 - 1.0/18.0*hDD22_i0p1_i1p2_i2 + (1.0/18.0)*hDD22_i0p2_i1m1_i2 - 1.0/144.0*hDD22_i0p2_i1m2_i2 - 1.0/18.0*hDD22_i0p2_i1p1_i2 + (1.0/144.0)*hDD22_i0p2_i1p2_i2);
               const double hDD_dDD2211 = tmpFD7*((4.0/3.0)*hDD22_i0_i1m1_i2 + (4.0/3.0)*hDD22_i0_i1p1_i2 - tmpFD30 + tmpFD31 + tmpFD37);
               const double lambdaU_dD00 = invdx0*(-2.0/3.0*lambdaU0_i0m1_i1_i2 + (1.0/12.0)*lambdaU0_i0m2_i1_i2 + (2.0/3.0)*lambdaU0_i0p1_i1_i2 - 1.0/12.0*lambdaU0_i0p2_i1_i2);
               const double lambdaU_dD01 = invdx1*(-2.0/3.0*lambdaU0_i0_i1m1_i2 + (1.0/12.0)*lambdaU0_i0_i1m2_i2 + (2.0/3.0)*lambdaU0_i0_i1p1_i2 - 1.0/12.0*lambdaU0_i0_i1p2_i2);
               const double lambdaU_dD10 = invdx0*(-2.0/3.0*lambdaU1_i0m1_i1_i2 + (1.0/12.0)*lambdaU1_i0m2_i1_i2 + (2.0/3.0)*lambdaU1_i0p1_i1_i2 - 1.0/12.0*lambdaU1_i0p2_i1_i2);
               const double lambdaU_dD11 = invdx1*(-2.0/3.0*lambdaU1_i0_i1m1_i2 + (1.0/12.0)*lambdaU1_i0_i1m2_i2 + (2.0/3.0)*lambdaU1_i0_i1p1_i2 - 1.0/12.0*lambdaU1_i0_i1p2_i2);
               const double lambdaU_dD20 = invdx0*(-2.0/3.0*lambdaU2_i0m1_i1_i2 + (1.0/12.0)*lambdaU2_i0m2_i1_i2 + (2.0/3.0)*lambdaU2_i0p1_i1_i2 - 1.0/12.0*lambdaU2_i0p2_i1_i2);
               const double lambdaU_dD21 = invdx1*(-2.0/3.0*lambdaU2_i0_i1m1_i2 + (1.0/12.0)*lambdaU2_i0_i1m2_i2 + (2.0/3.0)*lambdaU2_i0_i1p1_i2 - 1.0/12.0*lambdaU2_i0_i1p2_i2);
               const double uu_dD0 = invdx0*(-2.0/3.0*uu_i0m1_i1_i2 + (1.0/12.0)*uu_i0m2_i1_i2 + (2.0/3.0)*uu_i0p1_i1_i2 - 1.0/12.0*uu_i0p2_i1_i2);
               const double uu_dD1 = invdx1*(-2.0/3.0*uu_i0_i1m1_i2 + (1.0/12.0)*uu_i0_i1m2_i2 + (2.0/3.0)*uu_i0_i1p1_i2 - 1.0/12.0*uu_i0_i1p2_i2);
               /* 
                * NRPy+ Finite Difference Code Generation, Step 2 of 2: Evaluate SymPy expressions and write to main memory:
                */
               const double tmp0 = pow(scalarmass, 2);
               const double tmp1 = pow(cf, 2);
               const double tmp2 = 2*hDD01;
               const double tmp3 = sin(xx1);
               const double tmp4 = pow(tmp3, 2);
               const double tmp5 = tmp4*pow(xx0, 4);
               const double tmp6 = hDD02*hDD12;
               const double tmp7 = hDD00 + 1;
               const double tmp8 = pow(hDD12, 2)*tmp5;
               const double tmp9 = pow(xx0, 2);
               const double tmp10 = hDD11*tmp9;
               const double tmp11 = tmp10 + tmp9;
               const double tmp12 = tmp4*tmp9;
               const double tmp13 = pow(hDD02, 2)*tmp12;
               const double tmp14 = hDD22*tmp12;
               const double tmp15 = tmp12 + tmp14;
               const double tmp16 = pow(hDD01, 2)*tmp9;
               const double tmp17 = tmp11*tmp7;
               const double tmp18 = -tmp11*tmp13 - tmp15*tmp16 + tmp15*tmp17 + tmp2*tmp5*tmp6 - tmp7*tmp8;
               const double tmp19 = 1.0/tmp18;
               const double tmp20 = pow(xx0, 3);
               const double tmp21 = hDD01*xx0;
               const double tmp22 = -tmp15*tmp21 + tmp20*tmp4*tmp6;
               const double tmp23 = tmp19*tmp22;
               const double tmp24 = -tmp13 + tmp15*tmp7;
               const double tmp25 = tmp19*tmp24;
               const double tmp26 = 0.5*tmp1;
               const double tmp27 = tmp11*tmp15 - tmp8;
               const double tmp28 = tmp19*tmp27;
               const double tmp29 = hDD02*tmp3;
               const double tmp30 = tmp29*tmp9;
               const double tmp31 = hDD12*tmp3;
               const double tmp32 = tmp31*tmp9;
               const double tmp33 = hDD01*tmp30 - tmp32*tmp7;
               const double tmp34 = pow(tmp33, 2);
               const double tmp35 = pow(tmp18, -2);
               const double tmp36 = aDD11*tmp9;
               const double tmp37 = tmp35*tmp36;
               const double tmp38 = tmp29*xx0;
               const double tmp39 = hDD01*tmp20*tmp31 - tmp11*tmp38;
               const double tmp40 = pow(tmp39, 2);
               const double tmp41 = aDD00*tmp35;
               const double tmp42 = -tmp16 + tmp17;
               const double tmp43 = aDD22*tmp12;
               const double tmp44 = tmp35*tmp43;
               const double tmp45 = 2*xx0;
               const double tmp46 = aDD01*tmp35;
               const double tmp47 = tmp45*tmp46;
               const double tmp48 = tmp33*tmp39;
               const double tmp49 = tmp3*tmp9;
               const double tmp50 = aDD12*tmp49;
               const double tmp51 = tmp35*tmp50;
               const double tmp52 = tmp42*tmp51;
               const double tmp53 = tmp3*tmp45;
               const double tmp54 = aDD02*tmp35;
               const double tmp55 = tmp53*tmp54;
               const double tmp56 = tmp39*tmp55;
               const double tmp57 = pow(tmp22, 2);
               const double tmp58 = tmp22*tmp33;
               const double tmp59 = tmp24*tmp33;
               const double tmp60 = 2*tmp51;
               const double tmp61 = tmp22*tmp47;
               const double tmp62 = tmp22*tmp39;
               const double tmp63 = tmp3*xx0;
               const double tmp64 = tmp54*tmp63;
               const double tmp65 = tmp42*tmp44;
               const double tmp66 = tmp46*xx0;
               const double tmp67 = tmp22*tmp42;
               const double tmp68 = tmp24*tmp39;
               const double tmp69 = tmp22*tmp37;
               const double tmp70 = tmp27*tmp66;
               const double tmp71 = tmp27*tmp41;
               const double tmp72 = tmp27*tmp64;
               const double tmp73 = 1.0/tmp1;
               const double tmp74 = pow(cf_dD1, 2);
               const double tmp75 = 2*tmp73;
               const double tmp76 = pow(cf_dD0, 2);
               const double tmp77 = tmp4*xx0;
               const double tmp78 = 2*tmp77;
               const double tmp79 = hDD22*tmp78;
               const double tmp80 = hDD_dD220*tmp12;
               const double tmp81 = tmp79 + tmp80;
               const double tmp82 = tmp78 + tmp81;
               const double tmp83 = tmp19*tmp33;
               const double tmp84 = (1.0/2.0)*tmp83;
               const double tmp85 = tmp82*tmp84;
               const double tmp86 = cos(xx1);
               const double tmp87 = hDD02*tmp86;
               const double tmp88 = tmp87*xx0;
               const double tmp89 = hDD_dD021*tmp3;
               const double tmp90 = tmp89*xx0;
               const double tmp91 = tmp31*tmp45;
               const double tmp92 = hDD_dD120*tmp49;
               const double tmp93 = tmp91 + tmp92;
               const double tmp94 = -tmp88 - tmp90 + tmp93;
               const double tmp95 = (1.0/2.0)*tmp25;
               const double tmp96 = tmp94*tmp95;
               const double tmp97 = 1.0/cf;
               const double tmp98 = (1.0/2.0)*tmp97;
               const double tmp99 = cf_dD1*tmp98;
               const double tmp100 = tmp19*tmp39;
               const double tmp101 = (1.0/2.0)*tmp100;
               const double tmp102 = tmp101*tmp82;
               const double tmp103 = (1.0/2.0)*tmp23;
               const double tmp104 = tmp103*tmp94;
               const double tmp105 = cf_dD0*tmp97;
               const double tmp106 = (1.0/2.0)*tmp105;
               const double tmp107 = 2*xx1;
               const double tmp108 = sin(tmp107);
               const double tmp109 = tmp108*tmp9;
               const double tmp110 = hDD_dD221*tmp12;
               const double tmp111 = tmp49*tmp86;
               const double tmp112 = 2*tmp111;
               const double tmp113 = hDD22*tmp112;
               const double tmp114 = tmp110 + tmp113;
               const double tmp115 = tmp109 + tmp114;
               const double tmp116 = tmp115*tmp84;
               const double tmp117 = tmp88 + tmp90;
               const double tmp118 = tmp117 - tmp91 - tmp92;
               const double tmp119 = tmp103*tmp118;
               const double tmp120 = tmp101*tmp115;
               const double tmp121 = (1.0/2.0)*tmp28;
               const double tmp122 = tmp118*tmp121;
               const double tmp123 = -1.0/2.0*tmp78 - 1.0/2.0*tmp79 - 1.0/2.0*tmp80;
               const double tmp124 = tmp123*tmp23;
               const double tmp125 = -1.0/2.0*tmp109 - 1.0/2.0*tmp110 - 1.0/2.0*tmp113;
               const double tmp126 = tmp125*tmp25;
               const double tmp127 = tmp125*tmp23;
               const double tmp128 = tmp123*tmp28;
               const double tmp129 = tmp19*tmp42;
               const double tmp130 = 2*tmp29;
               const double tmp131 = hDD_dD020*tmp3;
               const double tmp132 = tmp130 + tmp131*tmp45;
               const double tmp133 = tmp132*tmp84;
               const double tmp134 = hDD_dD000*tmp103;
               const double tmp135 = -hDD_dD001 + hDD_dD010*tmp45 + tmp2;
               const double tmp136 = tmp135*tmp95;
               const double tmp137 = tmp101*tmp132;
               const double tmp138 = hDD_dD000*tmp121;
               const double tmp139 = tmp103*tmp135;
               const double tmp140 = hDD_dD001*tmp103;
               const double tmp141 = tmp117 + tmp93;
               const double tmp142 = tmp141*tmp84;
               const double tmp143 = hDD11*tmp45;
               const double tmp144 = hDD_dD110*tmp9;
               const double tmp145 = tmp143 + tmp144;
               const double tmp146 = tmp145 + tmp45;
               const double tmp147 = tmp146*tmp95;
               const double tmp148 = hDD_dD001*tmp121;
               const double tmp149 = tmp103*tmp146;
               const double tmp150 = tmp101*tmp141;
               const double tmp151 = 2*tmp9;
               const double tmp152 = tmp151*tmp86;
               const double tmp153 = hDD_dD121*tmp49;
               const double tmp154 = hDD12*tmp152 + 2*tmp153;
               const double tmp155 = tmp154*tmp84;
               const double tmp156 = hDD_dD111*tmp9;
               const double tmp157 = tmp156*tmp95;
               const double tmp158 = hDD_dD011*tmp45 - tmp143 - tmp144 - tmp45;
               const double tmp159 = tmp103*tmp158;
               const double tmp160 = tmp103*tmp156;
               const double tmp161 = tmp101*tmp154;
               const double tmp162 = tmp121*tmp158;
               const double tmp163 = (1.0/2.0)*tmp108;
               const double tmp164 = hDD12*xx0;
               const double tmp165 = 1.0/xx0;
               const double tmp166 = lambdaU0*tmp165;
               const double tmp167 = 1.0/tmp4;
               const double tmp168 = tmp163*tmp167;
               const double tmp169 = lambdaU1*tmp165*tmp168 + tmp166;
               const double tmp170 = pow(tmp3, 3);
               const double tmp171 = hDD_dD020*tmp170;
               const double tmp172 = hDD_dD120*tmp3;
               const double tmp173 = hDD02*tmp170;
               const double tmp174 = tmp109*tmp31 + tmp151*tmp173;
               const double tmp175 = tmp165*tmp174;
               const double tmp176 = -tmp175;
               const double tmp177 = hDD22*tmp4;
               const double tmp178 = tmp165*tmp81;
               const double tmp179 = tmp173*tmp45;
               const double tmp180 = tmp131*xx0 + tmp29;
               const double tmp181 = tmp108*tmp93;
               const double tmp182 = cos(tmp107);
               const double tmp183 = tmp151*tmp31;
               const double tmp184 = tmp86*tmp9;
               const double tmp185 = hDD12*tmp184 + tmp153;
               const double tmp186 = tmp108*tmp185;
               const double tmp187 = tmp108*tmp167;
               const double tmp188 = -tmp168*tmp174;
               const double tmp189 = tmp31*xx0;
               const double tmp190 = 1.0/tmp3;
               const double tmp191 = tmp163*tmp190;
               const double tmp192 = -hDD02*tmp191*xx0 - tmp189;
               const double tmp193 = tmp117 + tmp192;
               const double tmp194 = tmp109*tmp190;
               const double tmp195 = (1.0/2.0)*hDD12;
               const double tmp196 = tmp185 - tmp194*tmp195 + tmp30;
               const double tmp197 = tmp108*tmp196;
               const double tmp198 = hDD22*tmp109;
               const double tmp199 = tmp114 - tmp198;
               const double tmp200 = tmp165*tmp199;
               const double tmp201 = 4*hDD22*tmp63*tmp86 + hDD_dD220*tmp112 + hDD_dD221*tmp78 + hDD_dDD2201*tmp12;
               const double tmp202 = hDD_dD220*tmp20;
               const double tmp203 = hDD00*tmp77 - hDD22*tmp77 + tmp163*tmp21;
               const double tmp204 = hDD01*tmp12 + tmp10*tmp163 - 1.0/2.0*tmp198;
               const double tmp205 = tmp108*tmp204;
               const double tmp206 = (1.0/2.0)*tmp129;
               const double tmp207 = -tmp200;
               const double tmp208 = tmp114*tmp165;
               const double tmp209 = hDD_dD220*tmp109;
               const double tmp210 = tmp167*tmp182;
               const double tmp211 = 1.0/tmp170;
               const double tmp212 = tmp108*tmp211*tmp86;
               const double tmp213 = -tmp210 + tmp212;
               const double tmp214 = tmp14*tmp213;
               const double tmp215 = tmp210 - tmp212;
               const double tmp216 = -tmp14*tmp215;
               const double tmp217 = tmp100*tmp123 + tmp125*tmp83;
               const double tmp218 = tmp102 + tmp104;
               const double tmp219 = tmp85 + tmp96;
               const double tmp220 = -tmp165;
               const double tmp221 = tmp206*tmp82 + tmp220 + tmp84*tmp94;
               const double tmp222 = tmp15*tmp221;
               const double tmp223 = tmp218*tmp38 + tmp219*tmp32 + tmp222;
               const double tmp224 = tmp217*tmp223;
               const double tmp225 = 3*tmp100;
               const double tmp226 = tmp221*tmp223;
               const double tmp227 = 3*tmp28;
               const double tmp228 = tmp116 + tmp119;
               const double tmp229 = tmp120 + tmp122;
               const double tmp230 = tmp101*tmp118 + tmp115*tmp206 - tmp168;
               const double tmp231 = tmp15*tmp230;
               const double tmp232 = tmp228*tmp32 + tmp229*tmp38 + tmp231;
               const double tmp233 = tmp217*tmp232;
               const double tmp234 = 3*tmp83;
               const double tmp235 = tmp223*tmp230;
               const double tmp236 = 3*tmp23;
               const double tmp237 = tmp221*tmp232;
               const double tmp238 = tmp230*tmp232;
               const double tmp239 = 3*tmp25;
               const double tmp240 = tmp15*tmp217;
               const double tmp241 = tmp124 + tmp126 + tmp163;
               const double tmp242 = tmp127 + tmp128 + tmp77;
               const double tmp243 = tmp240 + tmp241*tmp32 + tmp242*tmp38;
               const double tmp244 = 3*tmp129;
               const double tmp245 = tmp221*tmp243;
               const double tmp246 = tmp230*tmp243;
               const double tmp247 = tmp218*tmp223;
               const double tmp248 = tmp21*tmp241 + tmp217*tmp38 + tmp242*tmp7;
               const double tmp249 = tmp218*tmp248;
               const double tmp250 = tmp223*tmp229;
               const double tmp251 = tmp229*tmp248;
               const double tmp252 = tmp228*tmp232;
               const double tmp253 = tmp11*tmp241 + tmp21*tmp242 + tmp217*tmp32;
               const double tmp254 = tmp228*tmp253;
               const double tmp255 = tmp219*tmp232;
               const double tmp256 = tmp219*tmp253;
               const double tmp257 = 2*tmp242;
               const double tmp258 = 2*tmp241;
               const double tmp259 = tmp218*tmp7;
               const double tmp260 = tmp21*tmp219 + tmp221*tmp38 + tmp259;
               const double tmp261 = tmp218*tmp260;
               const double tmp262 = hDD_dD000*tmp101 + tmp132*tmp206 + tmp135*tmp84;
               const double tmp263 = tmp133 + tmp134 + tmp136;
               const double tmp264 = tmp137 + tmp138 + tmp139;
               const double tmp265 = tmp15*tmp262 + tmp263*tmp32 + tmp264*tmp38;
               const double tmp266 = tmp218*tmp265;
               const double tmp267 = tmp229*tmp260;
               const double tmp268 = tmp229*tmp265;
               const double tmp269 = tmp242*tmp260;
               const double tmp270 = tmp11*tmp219 + tmp21*tmp218 + tmp221*tmp32;
               const double tmp271 = tmp228*tmp270;
               const double tmp272 = hDD_dD001*tmp101 + tmp141*tmp206 + tmp146*tmp84;
               const double tmp273 = tmp140 + tmp142 + tmp147 + tmp220;
               const double tmp274 = tmp148 + tmp149 + tmp150;
               const double tmp275 = tmp15*tmp272 + tmp273*tmp32 + tmp274*tmp38;
               const double tmp276 = tmp228*tmp275;
               const double tmp277 = tmp219*tmp270;
               const double tmp278 = tmp219*tmp275;
               const double tmp279 = tmp21*tmp228 + tmp229*tmp7 + tmp230*tmp38;
               const double tmp280 = tmp218*tmp279;
               const double tmp281 = tmp218*tmp275;
               const double tmp282 = tmp11*tmp228;
               const double tmp283 = tmp21*tmp229 + tmp230*tmp32 + tmp282;
               const double tmp284 = tmp219*tmp283;
               const double tmp285 = tmp101*tmp158 + tmp154*tmp206 + tmp156*tmp84;
               const double tmp286 = tmp155 + tmp157 + tmp159;
               const double tmp287 = tmp160 + tmp161 + tmp162 + xx0;
               const double tmp288 = tmp15*tmp285 + tmp286*tmp32 + tmp287*tmp38;
               const double tmp289 = tmp219*tmp288;
               const double tmp290 = tmp228*tmp283;
               const double tmp291 = tmp228*tmp288;
               const double tmp292 = tmp229*tmp279;
               const double tmp293 = tmp229*tmp275;
               const double tmp294 = tmp241*tmp270;
               const double tmp295 = tmp241*tmp283;
               const double tmp296 = tmp242*tmp279;
               const double tmp297 = tmp29*tmp45;
               const double tmp298 = tmp100*tmp221 + tmp121*tmp262 + tmp206*tmp217 + tmp23*tmp272 + tmp230*tmp83 + tmp285*tmp95;
               const double tmp299 = tmp100*tmp219 + tmp121*tmp263 + tmp206*tmp241 + tmp228*tmp83 + tmp23*tmp273 + tmp286*tmp95;
               const double tmp300 = tmp100*tmp218 + tmp121*tmp264 + tmp206*tmp242 + tmp229*tmp83 + tmp23*tmp274 + tmp287*tmp95;
               const double tmp301 = 2*hDD_dD010;
               const double tmp302 = hDD_dD001 - tmp2;
               const double tmp303 = hDD_dDD0001 - tmp165*tmp302;
               const double tmp304 = tmp165*tmp29;
               const double tmp305 = tmp165*tmp180;
               const double tmp306 = 2*hDD_dD011;
               const double tmp307 = hDD_dD000*xx0;
               const double tmp308 = hDD_dD011*xx0;
               const double tmp309 = hDD00*xx0 - hDD11*xx0 + tmp308;
               const double tmp310 = tmp165*tmp309;
               const double tmp311 = tmp307 - 2*tmp310;
               const double tmp312 = hDD_dD010*xx0;
               const double tmp313 = hDD01 + tmp312;
               const double tmp314 = tmp165*tmp313;
               const double tmp315 = tmp108*tmp190;
               const double tmp316 = hDD02*tmp315;
               const double tmp317 = tmp165*tmp193;
               const double tmp318 = -2*tmp317;
               const double tmp319 = tmp165*tmp203;
               const double tmp320 = hDD_dD000*tmp77;
               const double tmp321 = -2*tmp319 + tmp320;
               const double tmp322 = tmp117*tmp165;
               const double tmp323 = tmp165*tmp192;
               const double tmp324 = -2*tmp323;
               const double tmp325 = tmp260*tmp264;
               const double tmp326 = tmp260*tmp274;
               const double tmp327 = tmp264*tmp7;
               const double tmp328 = tmp21*tmp263 + tmp262*tmp38 + tmp327;
               const double tmp329 = tmp218*tmp328;
               const double tmp330 = tmp274*tmp7;
               const double tmp331 = tmp21*tmp273 + tmp272*tmp38 + tmp330;
               const double tmp332 = tmp218*tmp331;
               const double tmp333 = tmp274*tmp328;
               const double tmp334 = tmp264*tmp331;
               const double tmp335 = tmp274*tmp331;
               const double tmp336 = tmp219*tmp279;
               const double tmp337 = tmp221*tmp248;
               const double tmp338 = tmp263*tmp270;
               const double tmp339 = 2*tmp263;
               const double tmp340 = tmp223*tmp262;
               const double tmp341 = 2*tmp262;
               const double tmp342 = tmp223*tmp272;
               const double tmp343 = tmp248*tmp272;
               const double tmp344 = tmp270*tmp273;
               const double tmp345 = tmp273*tmp279;
               const double tmp346 = tmp221*tmp260;
               const double tmp347 = tmp221*tmp265;
               const double tmp348 = tmp221*tmp279;
               const double tmp349 = tmp221*tmp275;
               const double tmp350 = tmp260*tmp272;
               const double tmp351 = tmp265*tmp272;
               const double tmp352 = tmp262*tmp275;
               const double tmp353 = tmp272*tmp279;
               const double tmp354 = tmp272*tmp275;
               const double tmp355 = tmp11*tmp263 + tmp21*tmp264 + tmp262*tmp32;
               const double tmp356 = tmp219*tmp355;
               const double tmp357 = tmp219*tmp331;
               const double tmp358 = tmp21*tmp286 + tmp285*tmp38 + tmp287*tmp7;
               const double tmp359 = tmp219*tmp358;
               const double tmp360 = tmp11*tmp273;
               const double tmp361 = tmp21*tmp274 + tmp272*tmp32 + tmp360;
               const double tmp362 = tmp219*tmp361;
               const double tmp363 = tmp273*tmp355;
               const double tmp364 = tmp273*tmp331;
               const double tmp365 = tmp263*tmp361;
               const double tmp366 = tmp273*tmp358;
               const double tmp367 = tmp273*tmp361;
               const double tmp368 = hDD01*tmp45;
               const double tmp369 = -lambdaU1 + lambdaU_dD01;
               const double tmp370 = lambdaU_dD11*tmp165 + tmp166;
               const double tmp371 = tmp165*tmp190;
               const double tmp372 = lambdaU2*tmp165;
               const double tmp373 = lambdaU_dD21*tmp371 + tmp163*tmp211*tmp372 - tmp167*tmp372*tmp86;
               const double tmp374 = tmp164*tmp315;
               const double tmp375 = hDD_dD120*tmp194;
               const double tmp376 = hDD_dDD1101*tmp9;
               const double tmp377 = tmp156 + tmp2*tmp9;
               const double tmp378 = tmp165*tmp377;
               const double tmp379 = -tmp378;
               const double tmp380 = hDD_dD110*tmp20;
               const double tmp381 = tmp145*tmp165;
               const double tmp382 = pow(tmp108, 2)*tmp195*tmp9;
               const double tmp383 = tmp211*tmp382;
               const double tmp384 = tmp163*tmp377;
               const double tmp385 = -tmp167*tmp205;
               const double tmp386 = tmp213*tmp32;
               const double tmp387 = -tmp215*tmp32;
               const double tmp388 = tmp283*tmp286;
               const double tmp389 = tmp273*tmp283;
               const double tmp390 = tmp11*tmp286;
               const double tmp391 = tmp21*tmp287 + tmp285*tmp32 + tmp390;
               const double tmp392 = tmp228*tmp391;
               const double tmp393 = tmp228*tmp361;
               const double tmp394 = tmp286*tmp361;
               const double tmp395 = tmp273*tmp391;
               const double tmp396 = tmp229*tmp270;
               const double tmp397 = tmp230*tmp253;
               const double tmp398 = tmp270*tmp274;
               const double tmp399 = tmp274*tmp279;
               const double tmp400 = 2*tmp287;
               const double tmp401 = tmp279*tmp287;
               const double tmp402 = tmp232*tmp285;
               const double tmp403 = 2*tmp285;
               const double tmp404 = tmp232*tmp272;
               const double tmp405 = tmp253*tmp272;
               const double tmp406 = tmp230*tmp270;
               const double tmp407 = tmp230*tmp275;
               const double tmp408 = tmp230*tmp283;
               const double tmp409 = tmp230*tmp288;
               const double tmp410 = tmp275*tmp285;
               const double tmp411 = tmp270*tmp272;
               const double tmp412 = tmp272*tmp283;
               const double tmp413 = tmp272*tmp288;
               const double tmp414 = tmp229*tmp355;
               const double tmp415 = tmp229*tmp331;
               const double tmp416 = tmp229*tmp358;
               const double tmp417 = tmp229*tmp361;
               const double tmp418 = tmp287*tmp331;
               const double tmp419 = tmp274*tmp355;
               const double tmp420 = tmp274*tmp358;
               const double tmp421 = tmp274*tmp361;
               const double tmp422 = tmp217*tmp248;
               const double tmp423 = tmp241*tmp279 + tmp255;
               const double tmp424 = tmp230*tmp279;
               const double tmp425 = 2*tmp404;
               const double tmp426 = tmp274*tmp275;
               const double tmp427 = tmp399 + tmp426;
               const double tmp428 = tmp228*tmp358;
               const double tmp429 = tmp273*tmp288;
               const double tmp430 = tmp389 + tmp429;
               const double tmp431 = tmp263*tmp275 + tmp357;
               const double tmp432 = tmp264*tmp265;
               const double tmp433 = tmp217*tmp279;
               const double tmp434 = tmp217*tmp260;
               const double tmp435 = tmp232*tmp262;
               const double tmp436 = tmp243*tmp262;
               const double tmp437 = tmp230*tmp260;
               const double tmp438 = 2*tmp342;
               const double tmp439 = tmp230*tmp248;
               const double tmp440 = tmp243*tmp272;
               const double tmp441 = 2*tmp440;
               const double tmp442 = tmp263*tmp283;
               const double tmp443 = tmp263*tmp288 + tmp359;
               const double tmp444 = tmp229*tmp328;
               const double tmp445 = tmp265*tmp274;
               const double tmp446 = tmp326 + tmp445;
               const double tmp447 = tmp228*tmp331;
               const double tmp448 = tmp273*tmp275;
               const double tmp449 = tmp344 + tmp448;
               const double tmp450 = tmp264*tmp279;
               const double tmp451 = tmp264*tmp275;
               const double tmp452 = tmp241*tmp358 + tmp289;
               const double tmp453 = tmp223*tmp274;
               const double tmp454 = tmp248*tmp274 + tmp453;
               const double tmp455 = tmp228*tmp279;
               const double tmp456 = tmp232*tmp273;
               const double tmp457 = tmp253*tmp273 + tmp456;
               const double tmp458 = tmp242*tmp331;
               const double tmp459 = tmp232*tmp263 + tmp336;
               const double tmp460 = tmp241*tmp331 + tmp278;
               const double tmp461 = tmp242*tmp328;
               const double tmp462 = tmp223*tmp264;
               const double tmp463 = tmp165*tmp185;
               const double tmp464 = -tmp117*tmp168 - tmp463;
               const double tmp465 = -tmp215*tmp38 + tmp464;
               const double tmp466 = tmp131*tmp9;
               const double tmp467 = tmp45*tmp86;
               const double tmp468 = tmp165*tmp196;
               const double tmp469 = -tmp468;
               const double tmp470 = -tmp168*tmp193 + tmp469;
               const double tmp471 = hDD_dD021*tmp467 + hDD_dDD0211*tmp63 - tmp38 + tmp466 + tmp470;
               const double tmp472 = (1.0/2.0)*tmp7;
               const double tmp473 = lambdaU2*tmp3;
               const double tmp474 = tmp165*tmp93;
               const double tmp475 = -tmp168*tmp180 + tmp31 - tmp474;
               const double tmp476 = hDD_dD020*xx0;
               const double tmp477 = hDD_dDD0201*tmp63 + tmp476*tmp86 + tmp87 + tmp89;
               const double tmp478 = -tmp172*xx0 - tmp191*tmp476;
               const double tmp479 = tmp163*tmp309 - tmp168*tmp203;
               const double tmp480 = tmp165*tmp204;
               const double tmp481 = -tmp480;
               const double tmp482 = (1.0/2.0)*tmp38;
               const double tmp483 = (1.0/2.0)*lambdaU_dD10;
               const double tmp484 = (1.0/2.0)*lambdaU_dD20;
               const double tmp485 = (1.0/4.0)*lambdaU2;
               const double tmp486 = -hDD01*tmp315*tmp485 + lambdaU_dD00*tmp482 - tmp101*(-hDD_dD220*tmp77 + tmp163*tmp312 - tmp319 + tmp320) - tmp101*(hDD00*tmp4 + tmp163*tmp313 + tmp177 - tmp178 + tmp321) - tmp103*(tmp318 + tmp475 + tmp477) - tmp103*(-tmp317 - tmp322 + tmp477 + tmp478) - tmp121*(hDD_dDD0200*tmp63 + tmp131 + tmp304 - tmp305) + tmp15*tmp371*tmp484 + tmp169*tmp482 + tmp189*tmp483 - tmp206*(tmp163*tmp192 + tmp163*tmp193 + tmp171*tmp9 + tmp176 - tmp179) + tmp298*(tmp223 + tmp248) + tmp299*(tmp275 + tmp279) + tmp300*(tmp260 + tmp265) - tmp472*tmp473 - tmp84*(tmp207 + tmp302*tmp77 + tmp479) - tmp84*(hDD00*tmp3*tmp467 + hDD_dD001*tmp77 + tmp163*tmp308 + tmp182*tmp21 - tmp187*tmp203 - tmp208 + tmp481);
               const double tmp487 = tmp217*tmp253;
               const double tmp488 = tmp242*tmp270 + tmp250;
               const double tmp489 = tmp275*tmp287 + tmp417;
               const double tmp490 = tmp286*tmp288;
               const double tmp491 = tmp221*tmp270;
               const double tmp492 = tmp218*tmp355;
               const double tmp493 = tmp217*tmp270;
               const double tmp494 = tmp217*tmp283;
               const double tmp495 = tmp221*tmp283;
               const double tmp496 = tmp221*tmp253;
               const double tmp497 = tmp223*tmp285;
               const double tmp498 = tmp243*tmp285;
               const double tmp499 = tmp219*tmp391;
               const double tmp500 = tmp260*tmp287;
               const double tmp501 = tmp265*tmp287 + tmp414;
               const double tmp502 = tmp270*tmp286;
               const double tmp503 = tmp275*tmp286;
               const double tmp504 = tmp218*tmp361;
               const double tmp505 = tmp242*tmp361 + tmp293;
               const double tmp506 = tmp223*tmp287 + tmp396;
               const double tmp507 = tmp241*tmp391;
               const double tmp508 = tmp232*tmp286;
               const double tmp509 = tmp242*tmp355 + tmp268;
               const double tmp510 = tmp241*tmp361;
               const double tmp511 = tmp218*tmp270;
               const double tmp512 = hDD_dD121*tmp152 + hDD_dDD1211*tmp49 + tmp117*xx0 - tmp168*tmp185 - tmp168*tmp196 + tmp172*tmp20 + tmp193*xx0 - tmp32;
               const double tmp513 = (1.0/2.0)*tmp109;
               const double tmp514 = hDD_dD011*tmp12 + hDD_dD111*tmp513 + tmp10*tmp182 + tmp111*tmp2 - tmp114*tmp168 + tmp203*xx0 + tmp385;
               const double tmp515 = (1.0/2.0)*tmp373;
               const double tmp516 = hDD12*tmp467 + hDD_dD120*tmp184 + hDD_dD121*tmp53 + hDD_dDD1201*tmp49;
               const double tmp517 = hDD_dD010*tmp12 + tmp481;
               const double tmp518 = (1.0/2.0)*tmp32;
               const double tmp519 = (1.0/2.0)*tmp21;
               const double tmp520 = -tmp101*(hDD_dD110*tmp513 - 1.0/2.0*tmp209 + tmp517) - tmp101*(hDD01*tmp77 + tmp145*tmp163 - tmp168*tmp81 + tmp313*tmp77 - 3*tmp480) - tmp103*(-1.0/2.0*tmp375 - 2*tmp463 + tmp466 + tmp469 + tmp516) - tmp103*(-tmp168*tmp93 + tmp180*xx0 + tmp38 - 3*tmp468 + tmp516) - tmp108*tmp11*tmp371*tmp485 - tmp121*(hDD_dDD1200*tmp49 + tmp172*tmp45 + 4*tmp31 - 2*tmp474) + tmp15*tmp515 + tmp169*tmp518 - tmp206*(hDD_dD120*tmp170*tmp20 + tmp163*tmp196 + tmp188 - tmp190*tmp382 + tmp192*tmp77) + tmp298*(tmp232 + tmp253) + tmp299*(tmp283 + tmp288) + tmp300*(tmp270 + tmp275) + tmp369*tmp482 + tmp370*tmp518 - tmp473*tmp519 - tmp84*(-tmp168*tmp199 - tmp168*tmp204 + tmp309*tmp77 + tmp384);
               const double tmp521 = 2*tmp415;
               const double tmp522 = tmp393 + tmp428;
               const double tmp523 = 2*tmp267;
               const double tmp524 = 2*tmp444;
               const double tmp525 = tmp228*tmp355 + tmp447;
               const double tmp526 = tmp230*tmp265;
               const double tmp527 = tmp271 + tmp455;
               const double tmp528 = tmp217*tmp275;
               const double tmp529 = tmp213*tmp38 + tmp464;
               const double tmp530 = 2*tmp362;
               const double tmp531 = tmp332 + tmp492;
               const double tmp532 = 2*tmp284;
               const double tmp533 = 2*tmp499;
               const double tmp534 = tmp218*tmp358 + tmp504;
               const double tmp535 = tmp221*tmp288;
               const double tmp536 = tmp280 + tmp511;
               const double tmp537 = tmp439 + tmp496;
               const double tmp538 = tmp279*tmp285 + tmp412;
               const double tmp539 = tmp286*tmp358;
               const double tmp540 = tmp264*tmp355;
               const double tmp541 = tmp262*tmp270 + tmp350;
               const double tmp542 = tmp264*tmp270;
               const double tmp543 = tmp287*tmp328;
               const double tmp544 = tmp264*tmp361;
               const double tmp545 = tmp262*tmp283 + tmp353;
               const double tmp546 = tmp260*tmp285 + tmp411;
               const double tmp547 = tmp286*tmp331;
               const double tmp548 = tmp263*tmp391;
               const double tmp549 = tmp424 + tmp495;
               const double tmp550 = tmp279*tmp286;
               const double tmp551 = tmp248*tmp285 + tmp405;
               const double tmp552 = tmp437 + tmp491;
               const double tmp553 = tmp253*tmp262 + tmp343;
               const double tmp554 = -tmp168*tmp192;
               const double tmp555 = -tmp297 + tmp374 + tmp554;
               const double tmp556 = hDD_dDD0101*xx0;
               const double tmp557 = lambdaU_dD00*tmp519 - tmp101*(-tmp323 + tmp478) - tmp101*(tmp324 + tmp475) - tmp103*(-hDD_dD110*xx0 + tmp307 - tmp310 + tmp556) - tmp103*(hDD00 + hDD11 + hDD_dD011 + tmp311 - tmp381 + tmp556) + tmp11*tmp165*tmp483 - tmp121*(hDD01*tmp165 + hDD_dD010 + hDD_dDD0100*xx0 - tmp314) + tmp164*tmp484 - tmp206*(tmp479 + tmp517) + tmp298*(tmp270 + tmp279) + tmp299*(tmp358 + tmp361) + tmp300*(tmp331 + tmp355) + tmp369*tmp472 + tmp370*tmp519 + tmp38*tmp515 - tmp84*(tmp470 + tmp554) - tmp95*(hDD_dD001*xx0 + hDD_dD010*tmp9 - hDD_dD111*xx0 + hDD_dDD0111*xx0 + tmp302*xx0 + tmp379);
               aux_gfs[IDX4(HGF, i0, i1, i2)] = -16.0*M_PI*(pow(fa, 2)*pot2_on*tmp0*(1.0 - cos(uu/fa)) + 0.5*pot1_on*tmp0*pow(uu, 2) + 1.0*tmp1*tmp23*uu_dD0*uu_dD1 + tmp25*tmp26*pow(uu_dD1, 2) + tmp26*tmp28*pow(uu_dD0, 2) + 0.5*pow(vv, 2)) - aDD00*(pow(tmp27, 2)*tmp41 + tmp27*tmp56 + tmp27*tmp61 + tmp37*tmp57 + tmp40*tmp44 + tmp60*tmp62) - aDD01*tmp45*(tmp22*tmp71 + tmp24*tmp69 + tmp24*tmp70 + tmp33*tmp72 + tmp44*tmp48 + tmp51*tmp58 + tmp51*tmp68 + tmp57*tmp66 + tmp62*tmp64) - aDD02*tmp53*(tmp33*tmp69 + tmp33*tmp70 + tmp39*tmp65 + tmp39*tmp71 + tmp40*tmp64 + tmp42*tmp72 + tmp48*tmp51 + tmp51*tmp67 + tmp62*tmp66) + tmp1*(-4*cf_dD0*cf_dD1*tmp23*tmp73 - 16*tmp100*(-tmp106*(-tmp102 - tmp104) - tmp99*(-tmp85 - tmp96)) + tmp100*(tmp100*(2*tmp226 + tmp434) + tmp100*(tmp277 + tmp460) + tmp100*(tmp337 + 2*tmp436) + tmp100*(tmp253*tmp263 + tmp459) + tmp100*(tmp261 + tmp266 + tmp461) + tmp100*(tmp248*tmp264 + tmp261 + tmp462) + tmp129*(2*tmp245 + tmp422) + tmp129*(tmp256 + tmp423) + tmp129*(tmp247 + tmp249 + tmp269) + tmp23*(tmp348 + 2*tmp435) + tmp23*(tmp437 + tmp438) + tmp23*(tmp442 + tmp443) + tmp23*(tmp444 + tmp446) + tmp23*(tmp447 + tmp449) + tmp23*(tmp332 + tmp450 + tmp451) + tmp25*(tmp415 + tmp427) + tmp25*(tmp424 + tmp425) + tmp25*(tmp428 + tmp430) + tmp28*(tmp338 + tmp431) + tmp28*(2*tmp340 + tmp346) + tmp28*(tmp325 + tmp329 + tmp432) + tmp486 + tmp83*(2*tmp237 + tmp433) + tmp83*(tmp267 + tmp454) + tmp83*(tmp284 + tmp452) + tmp83*(tmp439 + tmp441) + tmp83*(tmp455 + tmp457) + tmp83*(tmp280 + tmp281 + tmp458) - tmp95*(tmp465 + tmp471)) + tmp100*(tmp100*(2*tmp261 + tmp462) + tmp100*(tmp266 + 2*tmp461) + tmp100*(tmp277 + tmp459) + tmp100*(tmp241*tmp355 + tmp460) + tmp100*(tmp226 + tmp337 + tmp436) + tmp100*(tmp217*tmp265 + tmp226 + tmp434) + tmp129*(tmp247 + 2*tmp269) + tmp129*(tmp294 + tmp423) + tmp129*(tmp224 + tmp245 + tmp422) + tmp23*(2*tmp332 + tmp451) + tmp23*(tmp362 + tmp443) + tmp23*(tmp445 + tmp524) + tmp23*(tmp448 + tmp525) + tmp23*(tmp342 + tmp437 + tmp526) + tmp23*(tmp348 + tmp349 + tmp435) + tmp25*(tmp426 + tmp521) + tmp25*(tmp429 + tmp522) + tmp25*(tmp404 + tmp407 + tmp424) + tmp28*(2*tmp329 + tmp432) + tmp28*(tmp356 + tmp431) + tmp28*(tmp340 + tmp346 + tmp347) + tmp486 + tmp83*(tmp281 + 2*tmp458) + tmp83*(tmp452 + tmp510) + tmp83*(tmp453 + tmp523) + tmp83*(tmp456 + tmp527) + tmp83*(tmp235 + tmp439 + tmp440) + tmp83*(tmp237 + tmp433 + tmp528) - tmp95*(tmp471 + tmp529)) - 8*tmp129*(-tmp106*(-tmp127 - tmp128) - tmp99*(-tmp124 - tmp126)) + tmp129*(-hDD02*lambdaU2*tmp77 - lambdaU2*tmp163*tmp164 + tmp100*(2*tmp247 + tmp249) + tmp100*(2*tmp255 + tmp256) + tmp100*(tmp257*tmp265 + tmp269) + tmp100*(tmp258*tmp275 + tmp294) - tmp101*(tmp109*tmp172 + tmp151*tmp171 + tmp176) - tmp101*(-3*tmp175 + tmp179 + tmp180*tmp78 + tmp181) - tmp103*(-tmp187*tmp81 - 3*tmp200 + tmp201) - tmp103*(tmp201 + tmp207 - 2*tmp208 - tmp209) - tmp121*(hDD_dD220*tmp78 + hDD_dDD2200*tmp12 + 4*tmp177 - 2*tmp178) + tmp129*(tmp223*tmp257 + tmp242*tmp248) + tmp129*(tmp232*tmp258 + tmp241*tmp253) + tmp15*tmp169 - tmp206*(tmp163*tmp199 + tmp202*pow(tmp3, 4) + tmp203*tmp78 + tmp205) + tmp217*tmp243*tmp244 + tmp224*tmp225 + tmp225*tmp245 + tmp226*tmp227 + tmp23*(tmp267 + 2*tmp268) + tmp23*(tmp271 + 2*tmp276) + tmp23*(tmp280 + 2*tmp281) + tmp23*(tmp284 + 2*tmp289) + tmp233*tmp234 + tmp234*tmp246 + tmp235*tmp236 + tmp236*tmp237 + tmp238*tmp239 + tmp25*(tmp290 + 2*tmp291) + tmp25*(tmp292 + 2*tmp293) + tmp28*(tmp261 + 2*tmp266) + tmp28*(tmp277 + 2*tmp278) + tmp298*(2*tmp240 + tmp242*tmp297 + tmp258*tmp32) + tmp299*(tmp183*tmp228 + tmp229*tmp297 + 2*tmp231) + tmp300*(tmp183*tmp219 + tmp218*tmp297 + 2*tmp222) + tmp83*(2*tmp250 + tmp251) + tmp83*(2*tmp252 + tmp254) + tmp83*(tmp257*tmp275 + tmp296) + tmp83*(tmp258*tmp288 + tmp295) - tmp84*(tmp188 + tmp193*tmp78 + tmp197) - tmp84*(tmp117*tmp78 + 4*tmp12*tmp87 - 3.0/2.0*tmp174*tmp187 + tmp182*tmp183 + tmp186) - tmp95*(hDD22*(-2*tmp12 + tmp151*pow(tmp86, 2)) + 4*hDD_dD221*tmp111 + hDD_dDD2211*tmp12 - tmp114*tmp187 - tmp187*tmp199 + tmp202*tmp4 + tmp214 + tmp216)) - 16*tmp23*(-tmp106*(-tmp148 - tmp149 - tmp150) + tmp98*(cf_dD1*tmp105 - cf_dDD01) - tmp99*(-tmp140 - tmp142 - tmp147)) + tmp23*(tmp100*(2*tmp326 + tmp542) + tmp100*(tmp342 + tmp553) + tmp100*(tmp362 + tmp525) + tmp100*(tmp492 + tmp524) + tmp100*(tmp526 + tmp552) + tmp100*(tmp344 + tmp345 + tmp442) + tmp129*(tmp235 + tmp537) + tmp129*(tmp284 + tmp527) + tmp129*(tmp511 + tmp523) + tmp23*(2*tmp335 + tmp544) + tmp23*(tmp354 + tmp545) + tmp23*(tmp419 + 2*tmp543) + tmp23*(tmp265*tmp285 + tmp546) + tmp23*(tmp366 + tmp367 + tmp548) + tmp23*(tmp286*tmp355 + tmp367 + tmp547) + tmp25*(tmp410 + tmp538) + tmp25*(2*tmp418 + tmp421) + tmp25*(tmp394 + tmp395 + tmp539) + tmp28*(2*tmp333 + tmp540) + tmp28*(tmp351 + tmp541) + tmp28*(tmp363 + tmp364 + tmp365) + tmp557 + tmp83*(tmp398 + 2*tmp500) + tmp83*(tmp407 + tmp549) + tmp83*(tmp497 + tmp551) + tmp83*(tmp499 + tmp522) + tmp83*(tmp504 + tmp521) + tmp83*(tmp389 + tmp502 + tmp550) - tmp84*(tmp529 + tmp555)) + tmp23*(tmp100*(tmp345 + 2*tmp442) + tmp100*(tmp349 + tmp552) + tmp100*(tmp435 + tmp553) + tmp100*(tmp444 + tmp531) + tmp100*(tmp447 + tmp530) + tmp100*(tmp326 + tmp450 + tmp542) + tmp129*(tmp237 + tmp537) + tmp129*(tmp267 + tmp536) + tmp129*(tmp455 + tmp532) + tmp23*(tmp354 + tmp546) + tmp23*(tmp366 + 2*tmp548) + tmp23*(2*tmp367 + tmp547) + tmp23*(tmp262*tmp288 + tmp545) + tmp23*(tmp335 + tmp419 + tmp543) + tmp23*(tmp264*tmp358 + tmp335 + tmp544) + tmp25*(2*tmp395 + tmp539) + tmp25*(tmp413 + tmp538) + tmp25*(tmp418 + tmp420 + tmp421) + tmp28*(tmp352 + tmp541) + tmp28*(tmp364 + 2*tmp365) + tmp28*(tmp333 + tmp334 + tmp540) + tmp557 + tmp83*(2*tmp389 + tmp550) + tmp83*(tmp404 + tmp551) + tmp83*(tmp415 + tmp534) + tmp83*(tmp428 + tmp533) + tmp83*(tmp535 + tmp549) + tmp83*(tmp398 + tmp399 + tmp500) - tmp84*(tmp465 + tmp555)) - tmp25*tmp74*tmp75 - 8*tmp25*(-tmp106*(-tmp160 - tmp161 - tmp162) + tmp98*(-cf_dDD11 + tmp74*tmp97) - tmp99*(-tmp155 - tmp157 - tmp159)) + tmp25*(tmp100*(2*tmp398 + tmp399) + tmp100*(tmp404 + 2*tmp405) + tmp100*(2*tmp406 + tmp407) + tmp100*(2*tmp414 + tmp415) - tmp101*(tmp374 - tmp375) - tmp101*(-tmp167*tmp181 + 3*tmp374) - tmp103*(tmp301*tmp9 + tmp376 + tmp379) - tmp103*(hDD_dD111*tmp45 + tmp313*tmp45 + tmp368 + tmp376 - 3*tmp378) + tmp11*tmp370 - tmp121*(4*hDD11 + hDD_dD110*tmp45 + hDD_dDD1100*tmp9 - 2*tmp381) + tmp129*(tmp238 + 2*tmp397) + tmp129*(tmp292 + 2*tmp396) - tmp206*(tmp380*tmp4 + tmp384 + tmp385) + tmp21*tmp369 + tmp225*tmp389 + tmp225*tmp393 + tmp227*tmp367 + tmp23*(2*tmp412 + tmp413) + tmp23*(tmp420 + 2*tmp421) + tmp23*(tmp270*tmp403 + tmp410) + tmp23*(tmp355*tmp400 + tmp418) + tmp234*tmp388 + tmp234*tmp392 + tmp236*tmp394 + tmp236*tmp395 + tmp239*tmp286*tmp391 + tmp244*tmp290 + tmp25*(tmp283*tmp403 + tmp285*tmp288) + tmp25*(tmp287*tmp358 + tmp361*tmp400) + tmp28*(tmp335 + 2*tmp419) + tmp28*(tmp354 + 2*tmp411) + tmp298*(tmp183*tmp230 + tmp229*tmp368 + 2*tmp282) + tmp299*(tmp183*tmp285 + tmp287*tmp368 + 2*tmp390) + tmp300*(tmp183*tmp272 + tmp274*tmp368 + 2*tmp360) + tmp32*tmp373 + tmp83*(2*tmp408 + tmp409) + tmp83*(tmp416 + 2*tmp417) + tmp83*(tmp253*tmp403 + tmp402) + tmp83*(tmp270*tmp400 + tmp401) - tmp84*(-tmp167*tmp197 + tmp383) - tmp84*(-tmp167*tmp186 + tmp192*tmp45 + tmp383 + tmp386 + tmp387) - tmp95*(hDD_dDD1111*tmp9 + tmp306*tmp9 + tmp309*tmp45 + tmp380)) - tmp28*tmp75*tmp76 - 8*tmp28*(-tmp106*(-tmp137 - tmp138 - tmp139) + tmp98*(-cf_dDD00 + tmp76*tmp97) - tmp99*(-tmp133 - tmp134 - tmp136)) + tmp28*(hDD01*lambdaU_dD10 + hDD02*lambdaU_dD20 - hDD_dDD0000*tmp121 + lambdaU_dD00*tmp7 + tmp100*(2*tmp346 + tmp347) + tmp100*(tmp356 + 2*tmp357) + tmp100*(tmp248*tmp341 + tmp340) + tmp100*(tmp279*tmp339 + tmp338) - tmp101*(4*tmp304 - 2*tmp305) - tmp101*(tmp130*tmp165 - 2*tmp131) - tmp103*(-tmp301 + tmp303) - tmp103*(tmp165*tmp2 + tmp303 - 2*tmp314) + tmp129*(tmp226 + 2*tmp337) + tmp129*(tmp277 + 2*tmp336) - tmp206*(tmp163*tmp302 + tmp321) + tmp225*tmp325 + tmp225*tmp329 + tmp227*tmp264*tmp328 + tmp23*(2*tmp350 + tmp351) + tmp23*(tmp363 + 2*tmp364) + tmp23*(tmp279*tmp341 + tmp352) + tmp23*(tmp339*tmp358 + tmp365) + tmp234*tmp326 + tmp234*tmp332 + tmp236*tmp333 + tmp236*tmp334 + tmp239*tmp335 + tmp244*tmp261 + tmp25*(2*tmp353 + tmp354) + tmp25*(2*tmp366 + tmp367) + tmp28*(tmp260*tmp341 + tmp262*tmp265) + tmp28*(tmp263*tmp355 + tmp331*tmp339) + tmp298*(tmp219*tmp368 + tmp221*tmp297 + 2*tmp259) + tmp299*(tmp272*tmp297 + tmp273*tmp368 + 2*tmp330) + tmp300*(tmp262*tmp297 + tmp263*tmp368 + 2*tmp327) + tmp83*(tmp342 + 2*tmp343) + tmp83*(tmp344 + 2*tmp345) + tmp83*(2*tmp348 + tmp349) + tmp83*(2*tmp359 + tmp362) - tmp84*(tmp316 + tmp318) - tmp84*(tmp316 - 2*tmp322 + tmp324) - tmp95*(hDD_dDD0011 - tmp306 + tmp311)) - 16*tmp83*(-tmp106*(-tmp120 - tmp122) - tmp99*(-tmp116 - tmp119)) + tmp83*(tmp100*(2*tmp235 + tmp493) + tmp100*(tmp267 + tmp509) + tmp100*(tmp284 + tmp457) + tmp100*(tmp441 + tmp496) + tmp100*(tmp454 + tmp511) + tmp100*(tmp271 + tmp276 + tmp510) + tmp129*(2*tmp246 + tmp487) + tmp129*(tmp251 + tmp488) + tmp129*(tmp252 + tmp254 + tmp295) + tmp23*(tmp406 + 2*tmp497) + tmp23*(tmp425 + tmp495) + tmp23*(tmp427 + tmp504) + tmp23*(tmp430 + tmp499) + tmp23*(tmp500 + tmp501) + tmp23*(tmp393 + tmp502 + tmp503) + tmp25*(tmp401 + tmp489) + tmp25*(2*tmp402 + tmp408) + tmp25*(tmp388 + tmp392 + tmp490) + tmp28*(tmp362 + tmp449) + tmp28*(tmp438 + tmp491) + tmp28*(tmp446 + tmp492) + tmp520 + tmp83*(2*tmp238 + tmp494) + tmp83*(tmp292 + tmp505) + tmp83*(tmp397 + 2*tmp498) + tmp83*(tmp248*tmp287 + tmp506) + tmp83*(tmp290 + tmp291 + tmp507) + tmp83*(tmp253*tmp286 + tmp290 + tmp508) - tmp84*(tmp214 + tmp514) - tmp95*(tmp387 + tmp512)) + tmp83*(tmp100*(tmp276 + 2*tmp510) + tmp100*(tmp453 + tmp536) + tmp100*(tmp456 + tmp532) + tmp100*(tmp458 + tmp509) + tmp100*(tmp235 + tmp493 + tmp528) + tmp100*(tmp237 + tmp440 + tmp496) + tmp129*(tmp252 + 2*tmp295) + tmp129*(tmp296 + tmp488) + tmp129*(tmp233 + tmp246 + tmp487) + tmp23*(2*tmp393 + tmp503) + tmp23*(tmp415 + tmp501) + tmp23*(tmp426 + tmp534) + tmp23*(tmp429 + tmp533) + tmp23*(tmp404 + tmp495 + tmp535) + tmp23*(tmp406 + tmp407 + tmp497) + tmp25*(2*tmp392 + tmp490) + tmp25*(tmp416 + tmp489) + tmp25*(tmp402 + tmp408 + tmp409) + tmp28*(tmp445 + tmp531) + tmp28*(tmp448 + tmp530) + tmp28*(tmp342 + tmp349 + tmp491) + tmp520 + tmp83*(2*tmp290 + tmp508) + tmp83*(tmp291 + 2*tmp507) + tmp83*(tmp292 + tmp506) + tmp83*(tmp242*tmp358 + tmp505) + tmp83*(tmp238 + tmp397 + tmp498) + tmp83*(tmp217*tmp288 + tmp238 + tmp494) - tmp84*(tmp216 + tmp514) - tmp95*(tmp386 + tmp512))) - tmp36*(pow(tmp24, 2)*tmp37 + tmp24*tmp61 + tmp34*tmp44 + tmp41*tmp57 + tmp55*tmp58 + tmp59*tmp60) - tmp43*(2*tmp33*tmp52 + tmp34*tmp37 + tmp40*tmp41 + pow(tmp42, 2)*tmp44 + tmp42*tmp56 + tmp47*tmp48) - 2*tmp50*(tmp24*tmp52 + tmp33*tmp65 + tmp34*tmp51 + tmp37*tmp59 + tmp41*tmp62 + tmp48*tmp64 + tmp58*tmp66 + tmp64*tmp67 + tmp66*tmp68) + (2.0/3.0)*pow(trK, 2);
            }
            
            
        } // END LOOP: for(int i0=NGHOSTS; i0<NGHOSTS+Nxx[0]; i0++)
    } // END LOOP: for(int i1=NGHOSTS; i1<NGHOSTS+Nxx[1]; i1++)
} // END LOOP: for(int i2=NGHOSTS; i2<NGHOSTS+Nxx[2]; i2++)
