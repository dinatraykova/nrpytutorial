const REAL invdx0 = 1.0/dxx[0];
const REAL invdx1 = 1.0/dxx[1];
const REAL invdx2 = 1.0/dxx[2];
#pragma omp parallel for
for(int i2=NGHOSTS; i2<NGHOSTS+Nxx[2]; i2++) {
    const REAL xx2 = xx[2][i2];
    for(int i1=NGHOSTS; i1<NGHOSTS+Nxx[1]; i1++) {
        const REAL xx1 = xx[1][i1];
        for(int i0=NGHOSTS; i0<NGHOSTS+Nxx[0]; i0++) {
            const REAL xx0 = xx[0][i0];
            {
               /* 
                * NRPy+ Finite Difference Code Generation, Step 1 of 3: Read from main memory and compute finite difference stencils:
                */
               const double hDD00_i0_i1m3_i2 = in_gfs[IDX4(HDD00GF, i0,i1-3,i2)];
               const double hDD00_i0m2_i1m2_i2 = in_gfs[IDX4(HDD00GF, i0-2,i1-2,i2)];
               const double hDD00_i0m1_i1m2_i2 = in_gfs[IDX4(HDD00GF, i0-1,i1-2,i2)];
               const double hDD00_i0_i1m2_i2 = in_gfs[IDX4(HDD00GF, i0,i1-2,i2)];
               const double hDD00_i0p1_i1m2_i2 = in_gfs[IDX4(HDD00GF, i0+1,i1-2,i2)];
               const double hDD00_i0p2_i1m2_i2 = in_gfs[IDX4(HDD00GF, i0+2,i1-2,i2)];
               const double hDD00_i0m2_i1m1_i2 = in_gfs[IDX4(HDD00GF, i0-2,i1-1,i2)];
               const double hDD00_i0m1_i1m1_i2 = in_gfs[IDX4(HDD00GF, i0-1,i1-1,i2)];
               const double hDD00_i0_i1m1_i2 = in_gfs[IDX4(HDD00GF, i0,i1-1,i2)];
               const double hDD00_i0p1_i1m1_i2 = in_gfs[IDX4(HDD00GF, i0+1,i1-1,i2)];
               const double hDD00_i0p2_i1m1_i2 = in_gfs[IDX4(HDD00GF, i0+2,i1-1,i2)];
               const double hDD00_i0m3_i1_i2 = in_gfs[IDX4(HDD00GF, i0-3,i1,i2)];
               const double hDD00_i0m2_i1_i2 = in_gfs[IDX4(HDD00GF, i0-2,i1,i2)];
               const double hDD00_i0m1_i1_i2 = in_gfs[IDX4(HDD00GF, i0-1,i1,i2)];
               const double hDD00 = in_gfs[IDX4(HDD00GF, i0,i1,i2)];
               const double hDD00_i0p1_i1_i2 = in_gfs[IDX4(HDD00GF, i0+1,i1,i2)];
               const double hDD00_i0p2_i1_i2 = in_gfs[IDX4(HDD00GF, i0+2,i1,i2)];
               const double hDD00_i0p3_i1_i2 = in_gfs[IDX4(HDD00GF, i0+3,i1,i2)];
               const double hDD00_i0m2_i1p1_i2 = in_gfs[IDX4(HDD00GF, i0-2,i1+1,i2)];
               const double hDD00_i0m1_i1p1_i2 = in_gfs[IDX4(HDD00GF, i0-1,i1+1,i2)];
               const double hDD00_i0_i1p1_i2 = in_gfs[IDX4(HDD00GF, i0,i1+1,i2)];
               const double hDD00_i0p1_i1p1_i2 = in_gfs[IDX4(HDD00GF, i0+1,i1+1,i2)];
               const double hDD00_i0p2_i1p1_i2 = in_gfs[IDX4(HDD00GF, i0+2,i1+1,i2)];
               const double hDD00_i0m2_i1p2_i2 = in_gfs[IDX4(HDD00GF, i0-2,i1+2,i2)];
               const double hDD00_i0m1_i1p2_i2 = in_gfs[IDX4(HDD00GF, i0-1,i1+2,i2)];
               const double hDD00_i0_i1p2_i2 = in_gfs[IDX4(HDD00GF, i0,i1+2,i2)];
               const double hDD00_i0p1_i1p2_i2 = in_gfs[IDX4(HDD00GF, i0+1,i1+2,i2)];
               const double hDD00_i0p2_i1p2_i2 = in_gfs[IDX4(HDD00GF, i0+2,i1+2,i2)];
               const double hDD00_i0_i1p3_i2 = in_gfs[IDX4(HDD00GF, i0,i1+3,i2)];
               const double hDD01_i0_i1m3_i2 = in_gfs[IDX4(HDD01GF, i0,i1-3,i2)];
               const double hDD01_i0m2_i1m2_i2 = in_gfs[IDX4(HDD01GF, i0-2,i1-2,i2)];
               const double hDD01_i0m1_i1m2_i2 = in_gfs[IDX4(HDD01GF, i0-1,i1-2,i2)];
               const double hDD01_i0_i1m2_i2 = in_gfs[IDX4(HDD01GF, i0,i1-2,i2)];
               const double hDD01_i0p1_i1m2_i2 = in_gfs[IDX4(HDD01GF, i0+1,i1-2,i2)];
               const double hDD01_i0p2_i1m2_i2 = in_gfs[IDX4(HDD01GF, i0+2,i1-2,i2)];
               const double hDD01_i0m2_i1m1_i2 = in_gfs[IDX4(HDD01GF, i0-2,i1-1,i2)];
               const double hDD01_i0m1_i1m1_i2 = in_gfs[IDX4(HDD01GF, i0-1,i1-1,i2)];
               const double hDD01_i0_i1m1_i2 = in_gfs[IDX4(HDD01GF, i0,i1-1,i2)];
               const double hDD01_i0p1_i1m1_i2 = in_gfs[IDX4(HDD01GF, i0+1,i1-1,i2)];
               const double hDD01_i0p2_i1m1_i2 = in_gfs[IDX4(HDD01GF, i0+2,i1-1,i2)];
               const double hDD01_i0m3_i1_i2 = in_gfs[IDX4(HDD01GF, i0-3,i1,i2)];
               const double hDD01_i0m2_i1_i2 = in_gfs[IDX4(HDD01GF, i0-2,i1,i2)];
               const double hDD01_i0m1_i1_i2 = in_gfs[IDX4(HDD01GF, i0-1,i1,i2)];
               const double hDD01 = in_gfs[IDX4(HDD01GF, i0,i1,i2)];
               const double hDD01_i0p1_i1_i2 = in_gfs[IDX4(HDD01GF, i0+1,i1,i2)];
               const double hDD01_i0p2_i1_i2 = in_gfs[IDX4(HDD01GF, i0+2,i1,i2)];
               const double hDD01_i0p3_i1_i2 = in_gfs[IDX4(HDD01GF, i0+3,i1,i2)];
               const double hDD01_i0m2_i1p1_i2 = in_gfs[IDX4(HDD01GF, i0-2,i1+1,i2)];
               const double hDD01_i0m1_i1p1_i2 = in_gfs[IDX4(HDD01GF, i0-1,i1+1,i2)];
               const double hDD01_i0_i1p1_i2 = in_gfs[IDX4(HDD01GF, i0,i1+1,i2)];
               const double hDD01_i0p1_i1p1_i2 = in_gfs[IDX4(HDD01GF, i0+1,i1+1,i2)];
               const double hDD01_i0p2_i1p1_i2 = in_gfs[IDX4(HDD01GF, i0+2,i1+1,i2)];
               const double hDD01_i0m2_i1p2_i2 = in_gfs[IDX4(HDD01GF, i0-2,i1+2,i2)];
               const double hDD01_i0m1_i1p2_i2 = in_gfs[IDX4(HDD01GF, i0-1,i1+2,i2)];
               const double hDD01_i0_i1p2_i2 = in_gfs[IDX4(HDD01GF, i0,i1+2,i2)];
               const double hDD01_i0p1_i1p2_i2 = in_gfs[IDX4(HDD01GF, i0+1,i1+2,i2)];
               const double hDD01_i0p2_i1p2_i2 = in_gfs[IDX4(HDD01GF, i0+2,i1+2,i2)];
               const double hDD01_i0_i1p3_i2 = in_gfs[IDX4(HDD01GF, i0,i1+3,i2)];
               const double hDD02_i0_i1m3_i2 = in_gfs[IDX4(HDD02GF, i0,i1-3,i2)];
               const double hDD02_i0m2_i1m2_i2 = in_gfs[IDX4(HDD02GF, i0-2,i1-2,i2)];
               const double hDD02_i0m1_i1m2_i2 = in_gfs[IDX4(HDD02GF, i0-1,i1-2,i2)];
               const double hDD02_i0_i1m2_i2 = in_gfs[IDX4(HDD02GF, i0,i1-2,i2)];
               const double hDD02_i0p1_i1m2_i2 = in_gfs[IDX4(HDD02GF, i0+1,i1-2,i2)];
               const double hDD02_i0p2_i1m2_i2 = in_gfs[IDX4(HDD02GF, i0+2,i1-2,i2)];
               const double hDD02_i0m2_i1m1_i2 = in_gfs[IDX4(HDD02GF, i0-2,i1-1,i2)];
               const double hDD02_i0m1_i1m1_i2 = in_gfs[IDX4(HDD02GF, i0-1,i1-1,i2)];
               const double hDD02_i0_i1m1_i2 = in_gfs[IDX4(HDD02GF, i0,i1-1,i2)];
               const double hDD02_i0p1_i1m1_i2 = in_gfs[IDX4(HDD02GF, i0+1,i1-1,i2)];
               const double hDD02_i0p2_i1m1_i2 = in_gfs[IDX4(HDD02GF, i0+2,i1-1,i2)];
               const double hDD02_i0m3_i1_i2 = in_gfs[IDX4(HDD02GF, i0-3,i1,i2)];
               const double hDD02_i0m2_i1_i2 = in_gfs[IDX4(HDD02GF, i0-2,i1,i2)];
               const double hDD02_i0m1_i1_i2 = in_gfs[IDX4(HDD02GF, i0-1,i1,i2)];
               const double hDD02 = in_gfs[IDX4(HDD02GF, i0,i1,i2)];
               const double hDD02_i0p1_i1_i2 = in_gfs[IDX4(HDD02GF, i0+1,i1,i2)];
               const double hDD02_i0p2_i1_i2 = in_gfs[IDX4(HDD02GF, i0+2,i1,i2)];
               const double hDD02_i0p3_i1_i2 = in_gfs[IDX4(HDD02GF, i0+3,i1,i2)];
               const double hDD02_i0m2_i1p1_i2 = in_gfs[IDX4(HDD02GF, i0-2,i1+1,i2)];
               const double hDD02_i0m1_i1p1_i2 = in_gfs[IDX4(HDD02GF, i0-1,i1+1,i2)];
               const double hDD02_i0_i1p1_i2 = in_gfs[IDX4(HDD02GF, i0,i1+1,i2)];
               const double hDD02_i0p1_i1p1_i2 = in_gfs[IDX4(HDD02GF, i0+1,i1+1,i2)];
               const double hDD02_i0p2_i1p1_i2 = in_gfs[IDX4(HDD02GF, i0+2,i1+1,i2)];
               const double hDD02_i0m2_i1p2_i2 = in_gfs[IDX4(HDD02GF, i0-2,i1+2,i2)];
               const double hDD02_i0m1_i1p2_i2 = in_gfs[IDX4(HDD02GF, i0-1,i1+2,i2)];
               const double hDD02_i0_i1p2_i2 = in_gfs[IDX4(HDD02GF, i0,i1+2,i2)];
               const double hDD02_i0p1_i1p2_i2 = in_gfs[IDX4(HDD02GF, i0+1,i1+2,i2)];
               const double hDD02_i0p2_i1p2_i2 = in_gfs[IDX4(HDD02GF, i0+2,i1+2,i2)];
               const double hDD02_i0_i1p3_i2 = in_gfs[IDX4(HDD02GF, i0,i1+3,i2)];
               const double hDD11_i0_i1m3_i2 = in_gfs[IDX4(HDD11GF, i0,i1-3,i2)];
               const double hDD11_i0m2_i1m2_i2 = in_gfs[IDX4(HDD11GF, i0-2,i1-2,i2)];
               const double hDD11_i0m1_i1m2_i2 = in_gfs[IDX4(HDD11GF, i0-1,i1-2,i2)];
               const double hDD11_i0_i1m2_i2 = in_gfs[IDX4(HDD11GF, i0,i1-2,i2)];
               const double hDD11_i0p1_i1m2_i2 = in_gfs[IDX4(HDD11GF, i0+1,i1-2,i2)];
               const double hDD11_i0p2_i1m2_i2 = in_gfs[IDX4(HDD11GF, i0+2,i1-2,i2)];
               const double hDD11_i0m2_i1m1_i2 = in_gfs[IDX4(HDD11GF, i0-2,i1-1,i2)];
               const double hDD11_i0m1_i1m1_i2 = in_gfs[IDX4(HDD11GF, i0-1,i1-1,i2)];
               const double hDD11_i0_i1m1_i2 = in_gfs[IDX4(HDD11GF, i0,i1-1,i2)];
               const double hDD11_i0p1_i1m1_i2 = in_gfs[IDX4(HDD11GF, i0+1,i1-1,i2)];
               const double hDD11_i0p2_i1m1_i2 = in_gfs[IDX4(HDD11GF, i0+2,i1-1,i2)];
               const double hDD11_i0m3_i1_i2 = in_gfs[IDX4(HDD11GF, i0-3,i1,i2)];
               const double hDD11_i0m2_i1_i2 = in_gfs[IDX4(HDD11GF, i0-2,i1,i2)];
               const double hDD11_i0m1_i1_i2 = in_gfs[IDX4(HDD11GF, i0-1,i1,i2)];
               const double hDD11 = in_gfs[IDX4(HDD11GF, i0,i1,i2)];
               const double hDD11_i0p1_i1_i2 = in_gfs[IDX4(HDD11GF, i0+1,i1,i2)];
               const double hDD11_i0p2_i1_i2 = in_gfs[IDX4(HDD11GF, i0+2,i1,i2)];
               const double hDD11_i0p3_i1_i2 = in_gfs[IDX4(HDD11GF, i0+3,i1,i2)];
               const double hDD11_i0m2_i1p1_i2 = in_gfs[IDX4(HDD11GF, i0-2,i1+1,i2)];
               const double hDD11_i0m1_i1p1_i2 = in_gfs[IDX4(HDD11GF, i0-1,i1+1,i2)];
               const double hDD11_i0_i1p1_i2 = in_gfs[IDX4(HDD11GF, i0,i1+1,i2)];
               const double hDD11_i0p1_i1p1_i2 = in_gfs[IDX4(HDD11GF, i0+1,i1+1,i2)];
               const double hDD11_i0p2_i1p1_i2 = in_gfs[IDX4(HDD11GF, i0+2,i1+1,i2)];
               const double hDD11_i0m2_i1p2_i2 = in_gfs[IDX4(HDD11GF, i0-2,i1+2,i2)];
               const double hDD11_i0m1_i1p2_i2 = in_gfs[IDX4(HDD11GF, i0-1,i1+2,i2)];
               const double hDD11_i0_i1p2_i2 = in_gfs[IDX4(HDD11GF, i0,i1+2,i2)];
               const double hDD11_i0p1_i1p2_i2 = in_gfs[IDX4(HDD11GF, i0+1,i1+2,i2)];
               const double hDD11_i0p2_i1p2_i2 = in_gfs[IDX4(HDD11GF, i0+2,i1+2,i2)];
               const double hDD11_i0_i1p3_i2 = in_gfs[IDX4(HDD11GF, i0,i1+3,i2)];
               const double hDD12_i0_i1m3_i2 = in_gfs[IDX4(HDD12GF, i0,i1-3,i2)];
               const double hDD12_i0m2_i1m2_i2 = in_gfs[IDX4(HDD12GF, i0-2,i1-2,i2)];
               const double hDD12_i0m1_i1m2_i2 = in_gfs[IDX4(HDD12GF, i0-1,i1-2,i2)];
               const double hDD12_i0_i1m2_i2 = in_gfs[IDX4(HDD12GF, i0,i1-2,i2)];
               const double hDD12_i0p1_i1m2_i2 = in_gfs[IDX4(HDD12GF, i0+1,i1-2,i2)];
               const double hDD12_i0p2_i1m2_i2 = in_gfs[IDX4(HDD12GF, i0+2,i1-2,i2)];
               const double hDD12_i0m2_i1m1_i2 = in_gfs[IDX4(HDD12GF, i0-2,i1-1,i2)];
               const double hDD12_i0m1_i1m1_i2 = in_gfs[IDX4(HDD12GF, i0-1,i1-1,i2)];
               const double hDD12_i0_i1m1_i2 = in_gfs[IDX4(HDD12GF, i0,i1-1,i2)];
               const double hDD12_i0p1_i1m1_i2 = in_gfs[IDX4(HDD12GF, i0+1,i1-1,i2)];
               const double hDD12_i0p2_i1m1_i2 = in_gfs[IDX4(HDD12GF, i0+2,i1-1,i2)];
               const double hDD12_i0m3_i1_i2 = in_gfs[IDX4(HDD12GF, i0-3,i1,i2)];
               const double hDD12_i0m2_i1_i2 = in_gfs[IDX4(HDD12GF, i0-2,i1,i2)];
               const double hDD12_i0m1_i1_i2 = in_gfs[IDX4(HDD12GF, i0-1,i1,i2)];
               const double hDD12 = in_gfs[IDX4(HDD12GF, i0,i1,i2)];
               const double hDD12_i0p1_i1_i2 = in_gfs[IDX4(HDD12GF, i0+1,i1,i2)];
               const double hDD12_i0p2_i1_i2 = in_gfs[IDX4(HDD12GF, i0+2,i1,i2)];
               const double hDD12_i0p3_i1_i2 = in_gfs[IDX4(HDD12GF, i0+3,i1,i2)];
               const double hDD12_i0m2_i1p1_i2 = in_gfs[IDX4(HDD12GF, i0-2,i1+1,i2)];
               const double hDD12_i0m1_i1p1_i2 = in_gfs[IDX4(HDD12GF, i0-1,i1+1,i2)];
               const double hDD12_i0_i1p1_i2 = in_gfs[IDX4(HDD12GF, i0,i1+1,i2)];
               const double hDD12_i0p1_i1p1_i2 = in_gfs[IDX4(HDD12GF, i0+1,i1+1,i2)];
               const double hDD12_i0p2_i1p1_i2 = in_gfs[IDX4(HDD12GF, i0+2,i1+1,i2)];
               const double hDD12_i0m2_i1p2_i2 = in_gfs[IDX4(HDD12GF, i0-2,i1+2,i2)];
               const double hDD12_i0m1_i1p2_i2 = in_gfs[IDX4(HDD12GF, i0-1,i1+2,i2)];
               const double hDD12_i0_i1p2_i2 = in_gfs[IDX4(HDD12GF, i0,i1+2,i2)];
               const double hDD12_i0p1_i1p2_i2 = in_gfs[IDX4(HDD12GF, i0+1,i1+2,i2)];
               const double hDD12_i0p2_i1p2_i2 = in_gfs[IDX4(HDD12GF, i0+2,i1+2,i2)];
               const double hDD12_i0_i1p3_i2 = in_gfs[IDX4(HDD12GF, i0,i1+3,i2)];
               const double hDD22_i0_i1m3_i2 = in_gfs[IDX4(HDD22GF, i0,i1-3,i2)];
               const double hDD22_i0m2_i1m2_i2 = in_gfs[IDX4(HDD22GF, i0-2,i1-2,i2)];
               const double hDD22_i0m1_i1m2_i2 = in_gfs[IDX4(HDD22GF, i0-1,i1-2,i2)];
               const double hDD22_i0_i1m2_i2 = in_gfs[IDX4(HDD22GF, i0,i1-2,i2)];
               const double hDD22_i0p1_i1m2_i2 = in_gfs[IDX4(HDD22GF, i0+1,i1-2,i2)];
               const double hDD22_i0p2_i1m2_i2 = in_gfs[IDX4(HDD22GF, i0+2,i1-2,i2)];
               const double hDD22_i0m2_i1m1_i2 = in_gfs[IDX4(HDD22GF, i0-2,i1-1,i2)];
               const double hDD22_i0m1_i1m1_i2 = in_gfs[IDX4(HDD22GF, i0-1,i1-1,i2)];
               const double hDD22_i0_i1m1_i2 = in_gfs[IDX4(HDD22GF, i0,i1-1,i2)];
               const double hDD22_i0p1_i1m1_i2 = in_gfs[IDX4(HDD22GF, i0+1,i1-1,i2)];
               const double hDD22_i0p2_i1m1_i2 = in_gfs[IDX4(HDD22GF, i0+2,i1-1,i2)];
               const double hDD22_i0m3_i1_i2 = in_gfs[IDX4(HDD22GF, i0-3,i1,i2)];
               const double hDD22_i0m2_i1_i2 = in_gfs[IDX4(HDD22GF, i0-2,i1,i2)];
               const double hDD22_i0m1_i1_i2 = in_gfs[IDX4(HDD22GF, i0-1,i1,i2)];
               const double hDD22 = in_gfs[IDX4(HDD22GF, i0,i1,i2)];
               const double hDD22_i0p1_i1_i2 = in_gfs[IDX4(HDD22GF, i0+1,i1,i2)];
               const double hDD22_i0p2_i1_i2 = in_gfs[IDX4(HDD22GF, i0+2,i1,i2)];
               const double hDD22_i0p3_i1_i2 = in_gfs[IDX4(HDD22GF, i0+3,i1,i2)];
               const double hDD22_i0m2_i1p1_i2 = in_gfs[IDX4(HDD22GF, i0-2,i1+1,i2)];
               const double hDD22_i0m1_i1p1_i2 = in_gfs[IDX4(HDD22GF, i0-1,i1+1,i2)];
               const double hDD22_i0_i1p1_i2 = in_gfs[IDX4(HDD22GF, i0,i1+1,i2)];
               const double hDD22_i0p1_i1p1_i2 = in_gfs[IDX4(HDD22GF, i0+1,i1+1,i2)];
               const double hDD22_i0p2_i1p1_i2 = in_gfs[IDX4(HDD22GF, i0+2,i1+1,i2)];
               const double hDD22_i0m2_i1p2_i2 = in_gfs[IDX4(HDD22GF, i0-2,i1+2,i2)];
               const double hDD22_i0m1_i1p2_i2 = in_gfs[IDX4(HDD22GF, i0-1,i1+2,i2)];
               const double hDD22_i0_i1p2_i2 = in_gfs[IDX4(HDD22GF, i0,i1+2,i2)];
               const double hDD22_i0p1_i1p2_i2 = in_gfs[IDX4(HDD22GF, i0+1,i1+2,i2)];
               const double hDD22_i0p2_i1p2_i2 = in_gfs[IDX4(HDD22GF, i0+2,i1+2,i2)];
               const double hDD22_i0_i1p3_i2 = in_gfs[IDX4(HDD22GF, i0,i1+3,i2)];
               const double aDD00_i0_i1m3_i2 = in_gfs[IDX4(ADD00GF, i0,i1-3,i2)];
               const double aDD00_i0_i1m2_i2 = in_gfs[IDX4(ADD00GF, i0,i1-2,i2)];
               const double aDD00_i0_i1m1_i2 = in_gfs[IDX4(ADD00GF, i0,i1-1,i2)];
               const double aDD00_i0m3_i1_i2 = in_gfs[IDX4(ADD00GF, i0-3,i1,i2)];
               const double aDD00_i0m2_i1_i2 = in_gfs[IDX4(ADD00GF, i0-2,i1,i2)];
               const double aDD00_i0m1_i1_i2 = in_gfs[IDX4(ADD00GF, i0-1,i1,i2)];
               const double aDD00 = in_gfs[IDX4(ADD00GF, i0,i1,i2)];
               const double aDD00_i0p1_i1_i2 = in_gfs[IDX4(ADD00GF, i0+1,i1,i2)];
               const double aDD00_i0p2_i1_i2 = in_gfs[IDX4(ADD00GF, i0+2,i1,i2)];
               const double aDD00_i0p3_i1_i2 = in_gfs[IDX4(ADD00GF, i0+3,i1,i2)];
               const double aDD00_i0_i1p1_i2 = in_gfs[IDX4(ADD00GF, i0,i1+1,i2)];
               const double aDD00_i0_i1p2_i2 = in_gfs[IDX4(ADD00GF, i0,i1+2,i2)];
               const double aDD00_i0_i1p3_i2 = in_gfs[IDX4(ADD00GF, i0,i1+3,i2)];
               const double aDD01_i0_i1m3_i2 = in_gfs[IDX4(ADD01GF, i0,i1-3,i2)];
               const double aDD01_i0_i1m2_i2 = in_gfs[IDX4(ADD01GF, i0,i1-2,i2)];
               const double aDD01_i0_i1m1_i2 = in_gfs[IDX4(ADD01GF, i0,i1-1,i2)];
               const double aDD01_i0m3_i1_i2 = in_gfs[IDX4(ADD01GF, i0-3,i1,i2)];
               const double aDD01_i0m2_i1_i2 = in_gfs[IDX4(ADD01GF, i0-2,i1,i2)];
               const double aDD01_i0m1_i1_i2 = in_gfs[IDX4(ADD01GF, i0-1,i1,i2)];
               const double aDD01 = in_gfs[IDX4(ADD01GF, i0,i1,i2)];
               const double aDD01_i0p1_i1_i2 = in_gfs[IDX4(ADD01GF, i0+1,i1,i2)];
               const double aDD01_i0p2_i1_i2 = in_gfs[IDX4(ADD01GF, i0+2,i1,i2)];
               const double aDD01_i0p3_i1_i2 = in_gfs[IDX4(ADD01GF, i0+3,i1,i2)];
               const double aDD01_i0_i1p1_i2 = in_gfs[IDX4(ADD01GF, i0,i1+1,i2)];
               const double aDD01_i0_i1p2_i2 = in_gfs[IDX4(ADD01GF, i0,i1+2,i2)];
               const double aDD01_i0_i1p3_i2 = in_gfs[IDX4(ADD01GF, i0,i1+3,i2)];
               const double aDD02_i0_i1m3_i2 = in_gfs[IDX4(ADD02GF, i0,i1-3,i2)];
               const double aDD02_i0_i1m2_i2 = in_gfs[IDX4(ADD02GF, i0,i1-2,i2)];
               const double aDD02_i0_i1m1_i2 = in_gfs[IDX4(ADD02GF, i0,i1-1,i2)];
               const double aDD02_i0m3_i1_i2 = in_gfs[IDX4(ADD02GF, i0-3,i1,i2)];
               const double aDD02_i0m2_i1_i2 = in_gfs[IDX4(ADD02GF, i0-2,i1,i2)];
               const double aDD02_i0m1_i1_i2 = in_gfs[IDX4(ADD02GF, i0-1,i1,i2)];
               const double aDD02 = in_gfs[IDX4(ADD02GF, i0,i1,i2)];
               const double aDD02_i0p1_i1_i2 = in_gfs[IDX4(ADD02GF, i0+1,i1,i2)];
               const double aDD02_i0p2_i1_i2 = in_gfs[IDX4(ADD02GF, i0+2,i1,i2)];
               const double aDD02_i0p3_i1_i2 = in_gfs[IDX4(ADD02GF, i0+3,i1,i2)];
               const double aDD02_i0_i1p1_i2 = in_gfs[IDX4(ADD02GF, i0,i1+1,i2)];
               const double aDD02_i0_i1p2_i2 = in_gfs[IDX4(ADD02GF, i0,i1+2,i2)];
               const double aDD02_i0_i1p3_i2 = in_gfs[IDX4(ADD02GF, i0,i1+3,i2)];
               const double aDD11_i0_i1m3_i2 = in_gfs[IDX4(ADD11GF, i0,i1-3,i2)];
               const double aDD11_i0_i1m2_i2 = in_gfs[IDX4(ADD11GF, i0,i1-2,i2)];
               const double aDD11_i0_i1m1_i2 = in_gfs[IDX4(ADD11GF, i0,i1-1,i2)];
               const double aDD11_i0m3_i1_i2 = in_gfs[IDX4(ADD11GF, i0-3,i1,i2)];
               const double aDD11_i0m2_i1_i2 = in_gfs[IDX4(ADD11GF, i0-2,i1,i2)];
               const double aDD11_i0m1_i1_i2 = in_gfs[IDX4(ADD11GF, i0-1,i1,i2)];
               const double aDD11 = in_gfs[IDX4(ADD11GF, i0,i1,i2)];
               const double aDD11_i0p1_i1_i2 = in_gfs[IDX4(ADD11GF, i0+1,i1,i2)];
               const double aDD11_i0p2_i1_i2 = in_gfs[IDX4(ADD11GF, i0+2,i1,i2)];
               const double aDD11_i0p3_i1_i2 = in_gfs[IDX4(ADD11GF, i0+3,i1,i2)];
               const double aDD11_i0_i1p1_i2 = in_gfs[IDX4(ADD11GF, i0,i1+1,i2)];
               const double aDD11_i0_i1p2_i2 = in_gfs[IDX4(ADD11GF, i0,i1+2,i2)];
               const double aDD11_i0_i1p3_i2 = in_gfs[IDX4(ADD11GF, i0,i1+3,i2)];
               const double aDD12_i0_i1m3_i2 = in_gfs[IDX4(ADD12GF, i0,i1-3,i2)];
               const double aDD12_i0_i1m2_i2 = in_gfs[IDX4(ADD12GF, i0,i1-2,i2)];
               const double aDD12_i0_i1m1_i2 = in_gfs[IDX4(ADD12GF, i0,i1-1,i2)];
               const double aDD12_i0m3_i1_i2 = in_gfs[IDX4(ADD12GF, i0-3,i1,i2)];
               const double aDD12_i0m2_i1_i2 = in_gfs[IDX4(ADD12GF, i0-2,i1,i2)];
               const double aDD12_i0m1_i1_i2 = in_gfs[IDX4(ADD12GF, i0-1,i1,i2)];
               const double aDD12 = in_gfs[IDX4(ADD12GF, i0,i1,i2)];
               const double aDD12_i0p1_i1_i2 = in_gfs[IDX4(ADD12GF, i0+1,i1,i2)];
               const double aDD12_i0p2_i1_i2 = in_gfs[IDX4(ADD12GF, i0+2,i1,i2)];
               const double aDD12_i0p3_i1_i2 = in_gfs[IDX4(ADD12GF, i0+3,i1,i2)];
               const double aDD12_i0_i1p1_i2 = in_gfs[IDX4(ADD12GF, i0,i1+1,i2)];
               const double aDD12_i0_i1p2_i2 = in_gfs[IDX4(ADD12GF, i0,i1+2,i2)];
               const double aDD12_i0_i1p3_i2 = in_gfs[IDX4(ADD12GF, i0,i1+3,i2)];
               const double aDD22_i0_i1m3_i2 = in_gfs[IDX4(ADD22GF, i0,i1-3,i2)];
               const double aDD22_i0_i1m2_i2 = in_gfs[IDX4(ADD22GF, i0,i1-2,i2)];
               const double aDD22_i0_i1m1_i2 = in_gfs[IDX4(ADD22GF, i0,i1-1,i2)];
               const double aDD22_i0m3_i1_i2 = in_gfs[IDX4(ADD22GF, i0-3,i1,i2)];
               const double aDD22_i0m2_i1_i2 = in_gfs[IDX4(ADD22GF, i0-2,i1,i2)];
               const double aDD22_i0m1_i1_i2 = in_gfs[IDX4(ADD22GF, i0-1,i1,i2)];
               const double aDD22 = in_gfs[IDX4(ADD22GF, i0,i1,i2)];
               const double aDD22_i0p1_i1_i2 = in_gfs[IDX4(ADD22GF, i0+1,i1,i2)];
               const double aDD22_i0p2_i1_i2 = in_gfs[IDX4(ADD22GF, i0+2,i1,i2)];
               const double aDD22_i0p3_i1_i2 = in_gfs[IDX4(ADD22GF, i0+3,i1,i2)];
               const double aDD22_i0_i1p1_i2 = in_gfs[IDX4(ADD22GF, i0,i1+1,i2)];
               const double aDD22_i0_i1p2_i2 = in_gfs[IDX4(ADD22GF, i0,i1+2,i2)];
               const double aDD22_i0_i1p3_i2 = in_gfs[IDX4(ADD22GF, i0,i1+3,i2)];
               const double lambdaU0_i0_i1m3_i2 = in_gfs[IDX4(LAMBDAU0GF, i0,i1-3,i2)];
               const double lambdaU0_i0_i1m2_i2 = in_gfs[IDX4(LAMBDAU0GF, i0,i1-2,i2)];
               const double lambdaU0_i0_i1m1_i2 = in_gfs[IDX4(LAMBDAU0GF, i0,i1-1,i2)];
               const double lambdaU0_i0m3_i1_i2 = in_gfs[IDX4(LAMBDAU0GF, i0-3,i1,i2)];
               const double lambdaU0_i0m2_i1_i2 = in_gfs[IDX4(LAMBDAU0GF, i0-2,i1,i2)];
               const double lambdaU0_i0m1_i1_i2 = in_gfs[IDX4(LAMBDAU0GF, i0-1,i1,i2)];
               const double lambdaU0 = in_gfs[IDX4(LAMBDAU0GF, i0,i1,i2)];
               const double lambdaU0_i0p1_i1_i2 = in_gfs[IDX4(LAMBDAU0GF, i0+1,i1,i2)];
               const double lambdaU0_i0p2_i1_i2 = in_gfs[IDX4(LAMBDAU0GF, i0+2,i1,i2)];
               const double lambdaU0_i0p3_i1_i2 = in_gfs[IDX4(LAMBDAU0GF, i0+3,i1,i2)];
               const double lambdaU0_i0_i1p1_i2 = in_gfs[IDX4(LAMBDAU0GF, i0,i1+1,i2)];
               const double lambdaU0_i0_i1p2_i2 = in_gfs[IDX4(LAMBDAU0GF, i0,i1+2,i2)];
               const double lambdaU0_i0_i1p3_i2 = in_gfs[IDX4(LAMBDAU0GF, i0,i1+3,i2)];
               const double lambdaU1_i0_i1m3_i2 = in_gfs[IDX4(LAMBDAU1GF, i0,i1-3,i2)];
               const double lambdaU1_i0_i1m2_i2 = in_gfs[IDX4(LAMBDAU1GF, i0,i1-2,i2)];
               const double lambdaU1_i0_i1m1_i2 = in_gfs[IDX4(LAMBDAU1GF, i0,i1-1,i2)];
               const double lambdaU1_i0m3_i1_i2 = in_gfs[IDX4(LAMBDAU1GF, i0-3,i1,i2)];
               const double lambdaU1_i0m2_i1_i2 = in_gfs[IDX4(LAMBDAU1GF, i0-2,i1,i2)];
               const double lambdaU1_i0m1_i1_i2 = in_gfs[IDX4(LAMBDAU1GF, i0-1,i1,i2)];
               const double lambdaU1 = in_gfs[IDX4(LAMBDAU1GF, i0,i1,i2)];
               const double lambdaU1_i0p1_i1_i2 = in_gfs[IDX4(LAMBDAU1GF, i0+1,i1,i2)];
               const double lambdaU1_i0p2_i1_i2 = in_gfs[IDX4(LAMBDAU1GF, i0+2,i1,i2)];
               const double lambdaU1_i0p3_i1_i2 = in_gfs[IDX4(LAMBDAU1GF, i0+3,i1,i2)];
               const double lambdaU1_i0_i1p1_i2 = in_gfs[IDX4(LAMBDAU1GF, i0,i1+1,i2)];
               const double lambdaU1_i0_i1p2_i2 = in_gfs[IDX4(LAMBDAU1GF, i0,i1+2,i2)];
               const double lambdaU1_i0_i1p3_i2 = in_gfs[IDX4(LAMBDAU1GF, i0,i1+3,i2)];
               const double lambdaU2_i0_i1m3_i2 = in_gfs[IDX4(LAMBDAU2GF, i0,i1-3,i2)];
               const double lambdaU2_i0_i1m2_i2 = in_gfs[IDX4(LAMBDAU2GF, i0,i1-2,i2)];
               const double lambdaU2_i0_i1m1_i2 = in_gfs[IDX4(LAMBDAU2GF, i0,i1-1,i2)];
               const double lambdaU2_i0m3_i1_i2 = in_gfs[IDX4(LAMBDAU2GF, i0-3,i1,i2)];
               const double lambdaU2_i0m2_i1_i2 = in_gfs[IDX4(LAMBDAU2GF, i0-2,i1,i2)];
               const double lambdaU2_i0m1_i1_i2 = in_gfs[IDX4(LAMBDAU2GF, i0-1,i1,i2)];
               const double lambdaU2 = in_gfs[IDX4(LAMBDAU2GF, i0,i1,i2)];
               const double lambdaU2_i0p1_i1_i2 = in_gfs[IDX4(LAMBDAU2GF, i0+1,i1,i2)];
               const double lambdaU2_i0p2_i1_i2 = in_gfs[IDX4(LAMBDAU2GF, i0+2,i1,i2)];
               const double lambdaU2_i0p3_i1_i2 = in_gfs[IDX4(LAMBDAU2GF, i0+3,i1,i2)];
               const double lambdaU2_i0_i1p1_i2 = in_gfs[IDX4(LAMBDAU2GF, i0,i1+1,i2)];
               const double lambdaU2_i0_i1p2_i2 = in_gfs[IDX4(LAMBDAU2GF, i0,i1+2,i2)];
               const double lambdaU2_i0_i1p3_i2 = in_gfs[IDX4(LAMBDAU2GF, i0,i1+3,i2)];
               const double vetU0_i0_i1m3_i2 = in_gfs[IDX4(VETU0GF, i0,i1-3,i2)];
               const double vetU0_i0m2_i1m2_i2 = in_gfs[IDX4(VETU0GF, i0-2,i1-2,i2)];
               const double vetU0_i0m1_i1m2_i2 = in_gfs[IDX4(VETU0GF, i0-1,i1-2,i2)];
               const double vetU0_i0_i1m2_i2 = in_gfs[IDX4(VETU0GF, i0,i1-2,i2)];
               const double vetU0_i0p1_i1m2_i2 = in_gfs[IDX4(VETU0GF, i0+1,i1-2,i2)];
               const double vetU0_i0p2_i1m2_i2 = in_gfs[IDX4(VETU0GF, i0+2,i1-2,i2)];
               const double vetU0_i0m2_i1m1_i2 = in_gfs[IDX4(VETU0GF, i0-2,i1-1,i2)];
               const double vetU0_i0m1_i1m1_i2 = in_gfs[IDX4(VETU0GF, i0-1,i1-1,i2)];
               const double vetU0_i0_i1m1_i2 = in_gfs[IDX4(VETU0GF, i0,i1-1,i2)];
               const double vetU0_i0p1_i1m1_i2 = in_gfs[IDX4(VETU0GF, i0+1,i1-1,i2)];
               const double vetU0_i0p2_i1m1_i2 = in_gfs[IDX4(VETU0GF, i0+2,i1-1,i2)];
               const double vetU0_i0m3_i1_i2 = in_gfs[IDX4(VETU0GF, i0-3,i1,i2)];
               const double vetU0_i0m2_i1_i2 = in_gfs[IDX4(VETU0GF, i0-2,i1,i2)];
               const double vetU0_i0m1_i1_i2 = in_gfs[IDX4(VETU0GF, i0-1,i1,i2)];
               const double vetU0 = in_gfs[IDX4(VETU0GF, i0,i1,i2)];
               const double vetU0_i0p1_i1_i2 = in_gfs[IDX4(VETU0GF, i0+1,i1,i2)];
               const double vetU0_i0p2_i1_i2 = in_gfs[IDX4(VETU0GF, i0+2,i1,i2)];
               const double vetU0_i0p3_i1_i2 = in_gfs[IDX4(VETU0GF, i0+3,i1,i2)];
               const double vetU0_i0m2_i1p1_i2 = in_gfs[IDX4(VETU0GF, i0-2,i1+1,i2)];
               const double vetU0_i0m1_i1p1_i2 = in_gfs[IDX4(VETU0GF, i0-1,i1+1,i2)];
               const double vetU0_i0_i1p1_i2 = in_gfs[IDX4(VETU0GF, i0,i1+1,i2)];
               const double vetU0_i0p1_i1p1_i2 = in_gfs[IDX4(VETU0GF, i0+1,i1+1,i2)];
               const double vetU0_i0p2_i1p1_i2 = in_gfs[IDX4(VETU0GF, i0+2,i1+1,i2)];
               const double vetU0_i0m2_i1p2_i2 = in_gfs[IDX4(VETU0GF, i0-2,i1+2,i2)];
               const double vetU0_i0m1_i1p2_i2 = in_gfs[IDX4(VETU0GF, i0-1,i1+2,i2)];
               const double vetU0_i0_i1p2_i2 = in_gfs[IDX4(VETU0GF, i0,i1+2,i2)];
               const double vetU0_i0p1_i1p2_i2 = in_gfs[IDX4(VETU0GF, i0+1,i1+2,i2)];
               const double vetU0_i0p2_i1p2_i2 = in_gfs[IDX4(VETU0GF, i0+2,i1+2,i2)];
               const double vetU0_i0_i1p3_i2 = in_gfs[IDX4(VETU0GF, i0,i1+3,i2)];
               const double vetU1_i0_i1m3_i2 = in_gfs[IDX4(VETU1GF, i0,i1-3,i2)];
               const double vetU1_i0m2_i1m2_i2 = in_gfs[IDX4(VETU1GF, i0-2,i1-2,i2)];
               const double vetU1_i0m1_i1m2_i2 = in_gfs[IDX4(VETU1GF, i0-1,i1-2,i2)];
               const double vetU1_i0_i1m2_i2 = in_gfs[IDX4(VETU1GF, i0,i1-2,i2)];
               const double vetU1_i0p1_i1m2_i2 = in_gfs[IDX4(VETU1GF, i0+1,i1-2,i2)];
               const double vetU1_i0p2_i1m2_i2 = in_gfs[IDX4(VETU1GF, i0+2,i1-2,i2)];
               const double vetU1_i0m2_i1m1_i2 = in_gfs[IDX4(VETU1GF, i0-2,i1-1,i2)];
               const double vetU1_i0m1_i1m1_i2 = in_gfs[IDX4(VETU1GF, i0-1,i1-1,i2)];
               const double vetU1_i0_i1m1_i2 = in_gfs[IDX4(VETU1GF, i0,i1-1,i2)];
               const double vetU1_i0p1_i1m1_i2 = in_gfs[IDX4(VETU1GF, i0+1,i1-1,i2)];
               const double vetU1_i0p2_i1m1_i2 = in_gfs[IDX4(VETU1GF, i0+2,i1-1,i2)];
               const double vetU1_i0m3_i1_i2 = in_gfs[IDX4(VETU1GF, i0-3,i1,i2)];
               const double vetU1_i0m2_i1_i2 = in_gfs[IDX4(VETU1GF, i0-2,i1,i2)];
               const double vetU1_i0m1_i1_i2 = in_gfs[IDX4(VETU1GF, i0-1,i1,i2)];
               const double vetU1 = in_gfs[IDX4(VETU1GF, i0,i1,i2)];
               const double vetU1_i0p1_i1_i2 = in_gfs[IDX4(VETU1GF, i0+1,i1,i2)];
               const double vetU1_i0p2_i1_i2 = in_gfs[IDX4(VETU1GF, i0+2,i1,i2)];
               const double vetU1_i0p3_i1_i2 = in_gfs[IDX4(VETU1GF, i0+3,i1,i2)];
               const double vetU1_i0m2_i1p1_i2 = in_gfs[IDX4(VETU1GF, i0-2,i1+1,i2)];
               const double vetU1_i0m1_i1p1_i2 = in_gfs[IDX4(VETU1GF, i0-1,i1+1,i2)];
               const double vetU1_i0_i1p1_i2 = in_gfs[IDX4(VETU1GF, i0,i1+1,i2)];
               const double vetU1_i0p1_i1p1_i2 = in_gfs[IDX4(VETU1GF, i0+1,i1+1,i2)];
               const double vetU1_i0p2_i1p1_i2 = in_gfs[IDX4(VETU1GF, i0+2,i1+1,i2)];
               const double vetU1_i0m2_i1p2_i2 = in_gfs[IDX4(VETU1GF, i0-2,i1+2,i2)];
               const double vetU1_i0m1_i1p2_i2 = in_gfs[IDX4(VETU1GF, i0-1,i1+2,i2)];
               const double vetU1_i0_i1p2_i2 = in_gfs[IDX4(VETU1GF, i0,i1+2,i2)];
               const double vetU1_i0p1_i1p2_i2 = in_gfs[IDX4(VETU1GF, i0+1,i1+2,i2)];
               const double vetU1_i0p2_i1p2_i2 = in_gfs[IDX4(VETU1GF, i0+2,i1+2,i2)];
               const double vetU1_i0_i1p3_i2 = in_gfs[IDX4(VETU1GF, i0,i1+3,i2)];
               const double vetU2_i0_i1m3_i2 = in_gfs[IDX4(VETU2GF, i0,i1-3,i2)];
               const double vetU2_i0m2_i1m2_i2 = in_gfs[IDX4(VETU2GF, i0-2,i1-2,i2)];
               const double vetU2_i0m1_i1m2_i2 = in_gfs[IDX4(VETU2GF, i0-1,i1-2,i2)];
               const double vetU2_i0_i1m2_i2 = in_gfs[IDX4(VETU2GF, i0,i1-2,i2)];
               const double vetU2_i0p1_i1m2_i2 = in_gfs[IDX4(VETU2GF, i0+1,i1-2,i2)];
               const double vetU2_i0p2_i1m2_i2 = in_gfs[IDX4(VETU2GF, i0+2,i1-2,i2)];
               const double vetU2_i0m2_i1m1_i2 = in_gfs[IDX4(VETU2GF, i0-2,i1-1,i2)];
               const double vetU2_i0m1_i1m1_i2 = in_gfs[IDX4(VETU2GF, i0-1,i1-1,i2)];
               const double vetU2_i0_i1m1_i2 = in_gfs[IDX4(VETU2GF, i0,i1-1,i2)];
               const double vetU2_i0p1_i1m1_i2 = in_gfs[IDX4(VETU2GF, i0+1,i1-1,i2)];
               const double vetU2_i0p2_i1m1_i2 = in_gfs[IDX4(VETU2GF, i0+2,i1-1,i2)];
               const double vetU2_i0m3_i1_i2 = in_gfs[IDX4(VETU2GF, i0-3,i1,i2)];
               const double vetU2_i0m2_i1_i2 = in_gfs[IDX4(VETU2GF, i0-2,i1,i2)];
               const double vetU2_i0m1_i1_i2 = in_gfs[IDX4(VETU2GF, i0-1,i1,i2)];
               const double vetU2 = in_gfs[IDX4(VETU2GF, i0,i1,i2)];
               const double vetU2_i0p1_i1_i2 = in_gfs[IDX4(VETU2GF, i0+1,i1,i2)];
               const double vetU2_i0p2_i1_i2 = in_gfs[IDX4(VETU2GF, i0+2,i1,i2)];
               const double vetU2_i0p3_i1_i2 = in_gfs[IDX4(VETU2GF, i0+3,i1,i2)];
               const double vetU2_i0m2_i1p1_i2 = in_gfs[IDX4(VETU2GF, i0-2,i1+1,i2)];
               const double vetU2_i0m1_i1p1_i2 = in_gfs[IDX4(VETU2GF, i0-1,i1+1,i2)];
               const double vetU2_i0_i1p1_i2 = in_gfs[IDX4(VETU2GF, i0,i1+1,i2)];
               const double vetU2_i0p1_i1p1_i2 = in_gfs[IDX4(VETU2GF, i0+1,i1+1,i2)];
               const double vetU2_i0p2_i1p1_i2 = in_gfs[IDX4(VETU2GF, i0+2,i1+1,i2)];
               const double vetU2_i0m2_i1p2_i2 = in_gfs[IDX4(VETU2GF, i0-2,i1+2,i2)];
               const double vetU2_i0m1_i1p2_i2 = in_gfs[IDX4(VETU2GF, i0-1,i1+2,i2)];
               const double vetU2_i0_i1p2_i2 = in_gfs[IDX4(VETU2GF, i0,i1+2,i2)];
               const double vetU2_i0p1_i1p2_i2 = in_gfs[IDX4(VETU2GF, i0+1,i1+2,i2)];
               const double vetU2_i0p2_i1p2_i2 = in_gfs[IDX4(VETU2GF, i0+2,i1+2,i2)];
               const double vetU2_i0_i1p3_i2 = in_gfs[IDX4(VETU2GF, i0,i1+3,i2)];
               const double betU0_i0_i1m3_i2 = in_gfs[IDX4(BETU0GF, i0,i1-3,i2)];
               const double betU0_i0_i1m2_i2 = in_gfs[IDX4(BETU0GF, i0,i1-2,i2)];
               const double betU0_i0_i1m1_i2 = in_gfs[IDX4(BETU0GF, i0,i1-1,i2)];
               const double betU0_i0m3_i1_i2 = in_gfs[IDX4(BETU0GF, i0-3,i1,i2)];
               const double betU0_i0m2_i1_i2 = in_gfs[IDX4(BETU0GF, i0-2,i1,i2)];
               const double betU0_i0m1_i1_i2 = in_gfs[IDX4(BETU0GF, i0-1,i1,i2)];
               const double betU0 = in_gfs[IDX4(BETU0GF, i0,i1,i2)];
               const double betU0_i0p1_i1_i2 = in_gfs[IDX4(BETU0GF, i0+1,i1,i2)];
               const double betU0_i0p2_i1_i2 = in_gfs[IDX4(BETU0GF, i0+2,i1,i2)];
               const double betU0_i0p3_i1_i2 = in_gfs[IDX4(BETU0GF, i0+3,i1,i2)];
               const double betU0_i0_i1p1_i2 = in_gfs[IDX4(BETU0GF, i0,i1+1,i2)];
               const double betU0_i0_i1p2_i2 = in_gfs[IDX4(BETU0GF, i0,i1+2,i2)];
               const double betU0_i0_i1p3_i2 = in_gfs[IDX4(BETU0GF, i0,i1+3,i2)];
               const double betU1_i0_i1m3_i2 = in_gfs[IDX4(BETU1GF, i0,i1-3,i2)];
               const double betU1_i0_i1m2_i2 = in_gfs[IDX4(BETU1GF, i0,i1-2,i2)];
               const double betU1_i0_i1m1_i2 = in_gfs[IDX4(BETU1GF, i0,i1-1,i2)];
               const double betU1_i0m3_i1_i2 = in_gfs[IDX4(BETU1GF, i0-3,i1,i2)];
               const double betU1_i0m2_i1_i2 = in_gfs[IDX4(BETU1GF, i0-2,i1,i2)];
               const double betU1_i0m1_i1_i2 = in_gfs[IDX4(BETU1GF, i0-1,i1,i2)];
               const double betU1 = in_gfs[IDX4(BETU1GF, i0,i1,i2)];
               const double betU1_i0p1_i1_i2 = in_gfs[IDX4(BETU1GF, i0+1,i1,i2)];
               const double betU1_i0p2_i1_i2 = in_gfs[IDX4(BETU1GF, i0+2,i1,i2)];
               const double betU1_i0p3_i1_i2 = in_gfs[IDX4(BETU1GF, i0+3,i1,i2)];
               const double betU1_i0_i1p1_i2 = in_gfs[IDX4(BETU1GF, i0,i1+1,i2)];
               const double betU1_i0_i1p2_i2 = in_gfs[IDX4(BETU1GF, i0,i1+2,i2)];
               const double betU1_i0_i1p3_i2 = in_gfs[IDX4(BETU1GF, i0,i1+3,i2)];
               const double betU2_i0_i1m3_i2 = in_gfs[IDX4(BETU2GF, i0,i1-3,i2)];
               const double betU2_i0_i1m2_i2 = in_gfs[IDX4(BETU2GF, i0,i1-2,i2)];
               const double betU2_i0_i1m1_i2 = in_gfs[IDX4(BETU2GF, i0,i1-1,i2)];
               const double betU2_i0m3_i1_i2 = in_gfs[IDX4(BETU2GF, i0-3,i1,i2)];
               const double betU2_i0m2_i1_i2 = in_gfs[IDX4(BETU2GF, i0-2,i1,i2)];
               const double betU2_i0m1_i1_i2 = in_gfs[IDX4(BETU2GF, i0-1,i1,i2)];
               const double betU2 = in_gfs[IDX4(BETU2GF, i0,i1,i2)];
               const double betU2_i0p1_i1_i2 = in_gfs[IDX4(BETU2GF, i0+1,i1,i2)];
               const double betU2_i0p2_i1_i2 = in_gfs[IDX4(BETU2GF, i0+2,i1,i2)];
               const double betU2_i0p3_i1_i2 = in_gfs[IDX4(BETU2GF, i0+3,i1,i2)];
               const double betU2_i0_i1p1_i2 = in_gfs[IDX4(BETU2GF, i0,i1+1,i2)];
               const double betU2_i0_i1p2_i2 = in_gfs[IDX4(BETU2GF, i0,i1+2,i2)];
               const double betU2_i0_i1p3_i2 = in_gfs[IDX4(BETU2GF, i0,i1+3,i2)];
               const double trK_i0_i1m3_i2 = in_gfs[IDX4(TRKGF, i0,i1-3,i2)];
               const double trK_i0_i1m2_i2 = in_gfs[IDX4(TRKGF, i0,i1-2,i2)];
               const double trK_i0_i1m1_i2 = in_gfs[IDX4(TRKGF, i0,i1-1,i2)];
               const double trK_i0m3_i1_i2 = in_gfs[IDX4(TRKGF, i0-3,i1,i2)];
               const double trK_i0m2_i1_i2 = in_gfs[IDX4(TRKGF, i0-2,i1,i2)];
               const double trK_i0m1_i1_i2 = in_gfs[IDX4(TRKGF, i0-1,i1,i2)];
               const double trK = in_gfs[IDX4(TRKGF, i0,i1,i2)];
               const double trK_i0p1_i1_i2 = in_gfs[IDX4(TRKGF, i0+1,i1,i2)];
               const double trK_i0p2_i1_i2 = in_gfs[IDX4(TRKGF, i0+2,i1,i2)];
               const double trK_i0p3_i1_i2 = in_gfs[IDX4(TRKGF, i0+3,i1,i2)];
               const double trK_i0_i1p1_i2 = in_gfs[IDX4(TRKGF, i0,i1+1,i2)];
               const double trK_i0_i1p2_i2 = in_gfs[IDX4(TRKGF, i0,i1+2,i2)];
               const double trK_i0_i1p3_i2 = in_gfs[IDX4(TRKGF, i0,i1+3,i2)];
               const double cf_i0_i1m3_i2 = in_gfs[IDX4(CFGF, i0,i1-3,i2)];
               const double cf_i0m2_i1m2_i2 = in_gfs[IDX4(CFGF, i0-2,i1-2,i2)];
               const double cf_i0m1_i1m2_i2 = in_gfs[IDX4(CFGF, i0-1,i1-2,i2)];
               const double cf_i0_i1m2_i2 = in_gfs[IDX4(CFGF, i0,i1-2,i2)];
               const double cf_i0p1_i1m2_i2 = in_gfs[IDX4(CFGF, i0+1,i1-2,i2)];
               const double cf_i0p2_i1m2_i2 = in_gfs[IDX4(CFGF, i0+2,i1-2,i2)];
               const double cf_i0m2_i1m1_i2 = in_gfs[IDX4(CFGF, i0-2,i1-1,i2)];
               const double cf_i0m1_i1m1_i2 = in_gfs[IDX4(CFGF, i0-1,i1-1,i2)];
               const double cf_i0_i1m1_i2 = in_gfs[IDX4(CFGF, i0,i1-1,i2)];
               const double cf_i0p1_i1m1_i2 = in_gfs[IDX4(CFGF, i0+1,i1-1,i2)];
               const double cf_i0p2_i1m1_i2 = in_gfs[IDX4(CFGF, i0+2,i1-1,i2)];
               const double cf_i0m3_i1_i2 = in_gfs[IDX4(CFGF, i0-3,i1,i2)];
               const double cf_i0m2_i1_i2 = in_gfs[IDX4(CFGF, i0-2,i1,i2)];
               const double cf_i0m1_i1_i2 = in_gfs[IDX4(CFGF, i0-1,i1,i2)];
               const double cf = in_gfs[IDX4(CFGF, i0,i1,i2)];
               const double cf_i0p1_i1_i2 = in_gfs[IDX4(CFGF, i0+1,i1,i2)];
               const double cf_i0p2_i1_i2 = in_gfs[IDX4(CFGF, i0+2,i1,i2)];
               const double cf_i0p3_i1_i2 = in_gfs[IDX4(CFGF, i0+3,i1,i2)];
               const double cf_i0m2_i1p1_i2 = in_gfs[IDX4(CFGF, i0-2,i1+1,i2)];
               const double cf_i0m1_i1p1_i2 = in_gfs[IDX4(CFGF, i0-1,i1+1,i2)];
               const double cf_i0_i1p1_i2 = in_gfs[IDX4(CFGF, i0,i1+1,i2)];
               const double cf_i0p1_i1p1_i2 = in_gfs[IDX4(CFGF, i0+1,i1+1,i2)];
               const double cf_i0p2_i1p1_i2 = in_gfs[IDX4(CFGF, i0+2,i1+1,i2)];
               const double cf_i0m2_i1p2_i2 = in_gfs[IDX4(CFGF, i0-2,i1+2,i2)];
               const double cf_i0m1_i1p2_i2 = in_gfs[IDX4(CFGF, i0-1,i1+2,i2)];
               const double cf_i0_i1p2_i2 = in_gfs[IDX4(CFGF, i0,i1+2,i2)];
               const double cf_i0p1_i1p2_i2 = in_gfs[IDX4(CFGF, i0+1,i1+2,i2)];
               const double cf_i0p2_i1p2_i2 = in_gfs[IDX4(CFGF, i0+2,i1+2,i2)];
               const double cf_i0_i1p3_i2 = in_gfs[IDX4(CFGF, i0,i1+3,i2)];
               const double alpha_i0_i1m3_i2 = in_gfs[IDX4(ALPHAGF, i0,i1-3,i2)];
               const double alpha_i0m2_i1m2_i2 = in_gfs[IDX4(ALPHAGF, i0-2,i1-2,i2)];
               const double alpha_i0m1_i1m2_i2 = in_gfs[IDX4(ALPHAGF, i0-1,i1-2,i2)];
               const double alpha_i0_i1m2_i2 = in_gfs[IDX4(ALPHAGF, i0,i1-2,i2)];
               const double alpha_i0p1_i1m2_i2 = in_gfs[IDX4(ALPHAGF, i0+1,i1-2,i2)];
               const double alpha_i0p2_i1m2_i2 = in_gfs[IDX4(ALPHAGF, i0+2,i1-2,i2)];
               const double alpha_i0m2_i1m1_i2 = in_gfs[IDX4(ALPHAGF, i0-2,i1-1,i2)];
               const double alpha_i0m1_i1m1_i2 = in_gfs[IDX4(ALPHAGF, i0-1,i1-1,i2)];
               const double alpha_i0_i1m1_i2 = in_gfs[IDX4(ALPHAGF, i0,i1-1,i2)];
               const double alpha_i0p1_i1m1_i2 = in_gfs[IDX4(ALPHAGF, i0+1,i1-1,i2)];
               const double alpha_i0p2_i1m1_i2 = in_gfs[IDX4(ALPHAGF, i0+2,i1-1,i2)];
               const double alpha_i0m3_i1_i2 = in_gfs[IDX4(ALPHAGF, i0-3,i1,i2)];
               const double alpha_i0m2_i1_i2 = in_gfs[IDX4(ALPHAGF, i0-2,i1,i2)];
               const double alpha_i0m1_i1_i2 = in_gfs[IDX4(ALPHAGF, i0-1,i1,i2)];
               const double alpha = in_gfs[IDX4(ALPHAGF, i0,i1,i2)];
               const double alpha_i0p1_i1_i2 = in_gfs[IDX4(ALPHAGF, i0+1,i1,i2)];
               const double alpha_i0p2_i1_i2 = in_gfs[IDX4(ALPHAGF, i0+2,i1,i2)];
               const double alpha_i0p3_i1_i2 = in_gfs[IDX4(ALPHAGF, i0+3,i1,i2)];
               const double alpha_i0m2_i1p1_i2 = in_gfs[IDX4(ALPHAGF, i0-2,i1+1,i2)];
               const double alpha_i0m1_i1p1_i2 = in_gfs[IDX4(ALPHAGF, i0-1,i1+1,i2)];
               const double alpha_i0_i1p1_i2 = in_gfs[IDX4(ALPHAGF, i0,i1+1,i2)];
               const double alpha_i0p1_i1p1_i2 = in_gfs[IDX4(ALPHAGF, i0+1,i1+1,i2)];
               const double alpha_i0p2_i1p1_i2 = in_gfs[IDX4(ALPHAGF, i0+2,i1+1,i2)];
               const double alpha_i0m2_i1p2_i2 = in_gfs[IDX4(ALPHAGF, i0-2,i1+2,i2)];
               const double alpha_i0m1_i1p2_i2 = in_gfs[IDX4(ALPHAGF, i0-1,i1+2,i2)];
               const double alpha_i0_i1p2_i2 = in_gfs[IDX4(ALPHAGF, i0,i1+2,i2)];
               const double alpha_i0p1_i1p2_i2 = in_gfs[IDX4(ALPHAGF, i0+1,i1+2,i2)];
               const double alpha_i0p2_i1p2_i2 = in_gfs[IDX4(ALPHAGF, i0+2,i1+2,i2)];
               const double alpha_i0_i1p3_i2 = in_gfs[IDX4(ALPHAGF, i0,i1+3,i2)];
               const double uu_i0_i1m3_i2 = in_gfs[IDX4(UUGF, i0,i1-3,i2)];
               const double uu_i0m2_i1m2_i2 = in_gfs[IDX4(UUGF, i0-2,i1-2,i2)];
               const double uu_i0m1_i1m2_i2 = in_gfs[IDX4(UUGF, i0-1,i1-2,i2)];
               const double uu_i0_i1m2_i2 = in_gfs[IDX4(UUGF, i0,i1-2,i2)];
               const double uu_i0p1_i1m2_i2 = in_gfs[IDX4(UUGF, i0+1,i1-2,i2)];
               const double uu_i0p2_i1m2_i2 = in_gfs[IDX4(UUGF, i0+2,i1-2,i2)];
               const double uu_i0m2_i1m1_i2 = in_gfs[IDX4(UUGF, i0-2,i1-1,i2)];
               const double uu_i0m1_i1m1_i2 = in_gfs[IDX4(UUGF, i0-1,i1-1,i2)];
               const double uu_i0_i1m1_i2 = in_gfs[IDX4(UUGF, i0,i1-1,i2)];
               const double uu_i0p1_i1m1_i2 = in_gfs[IDX4(UUGF, i0+1,i1-1,i2)];
               const double uu_i0p2_i1m1_i2 = in_gfs[IDX4(UUGF, i0+2,i1-1,i2)];
               const double uu_i0m3_i1_i2 = in_gfs[IDX4(UUGF, i0-3,i1,i2)];
               const double uu_i0m2_i1_i2 = in_gfs[IDX4(UUGF, i0-2,i1,i2)];
               const double uu_i0m1_i1_i2 = in_gfs[IDX4(UUGF, i0-1,i1,i2)];
               const double uu = in_gfs[IDX4(UUGF, i0,i1,i2)];
               const double uu_i0p1_i1_i2 = in_gfs[IDX4(UUGF, i0+1,i1,i2)];
               const double uu_i0p2_i1_i2 = in_gfs[IDX4(UUGF, i0+2,i1,i2)];
               const double uu_i0p3_i1_i2 = in_gfs[IDX4(UUGF, i0+3,i1,i2)];
               const double uu_i0m2_i1p1_i2 = in_gfs[IDX4(UUGF, i0-2,i1+1,i2)];
               const double uu_i0m1_i1p1_i2 = in_gfs[IDX4(UUGF, i0-1,i1+1,i2)];
               const double uu_i0_i1p1_i2 = in_gfs[IDX4(UUGF, i0,i1+1,i2)];
               const double uu_i0p1_i1p1_i2 = in_gfs[IDX4(UUGF, i0+1,i1+1,i2)];
               const double uu_i0p2_i1p1_i2 = in_gfs[IDX4(UUGF, i0+2,i1+1,i2)];
               const double uu_i0m2_i1p2_i2 = in_gfs[IDX4(UUGF, i0-2,i1+2,i2)];
               const double uu_i0m1_i1p2_i2 = in_gfs[IDX4(UUGF, i0-1,i1+2,i2)];
               const double uu_i0_i1p2_i2 = in_gfs[IDX4(UUGF, i0,i1+2,i2)];
               const double uu_i0p1_i1p2_i2 = in_gfs[IDX4(UUGF, i0+1,i1+2,i2)];
               const double uu_i0p2_i1p2_i2 = in_gfs[IDX4(UUGF, i0+2,i1+2,i2)];
               const double uu_i0_i1p3_i2 = in_gfs[IDX4(UUGF, i0,i1+3,i2)];
               const double vv_i0_i1m2_i2 = in_gfs[IDX4(VVGF, i0,i1-2,i2)];
               const double vv_i0_i1m1_i2 = in_gfs[IDX4(VVGF, i0,i1-1,i2)];
               const double vv_i0m2_i1_i2 = in_gfs[IDX4(VVGF, i0-2,i1,i2)];
               const double vv_i0m1_i1_i2 = in_gfs[IDX4(VVGF, i0-1,i1,i2)];
               const double vv = in_gfs[IDX4(VVGF, i0,i1,i2)];
               const double vv_i0p1_i1_i2 = in_gfs[IDX4(VVGF, i0+1,i1,i2)];
               const double vv_i0p2_i1_i2 = in_gfs[IDX4(VVGF, i0+2,i1,i2)];
               const double vv_i0_i1p1_i2 = in_gfs[IDX4(VVGF, i0,i1+1,i2)];
               const double vv_i0_i1p2_i2 = in_gfs[IDX4(VVGF, i0,i1+2,i2)];
               const double tmpFD0 = (5.0/6.0)*aDD00;
               const double tmpFD1 = (5.0/6.0)*aDD01;
               const double tmpFD2 = (5.0/6.0)*aDD02;
               const double tmpFD3 = (5.0/6.0)*aDD11;
               const double tmpFD4 = (5.0/6.0)*aDD12;
               const double tmpFD5 = (5.0/6.0)*aDD22;
               const double tmpFD6 = -tmpFD0;
               const double tmpFD7 = -tmpFD1;
               const double tmpFD8 = -tmpFD2;
               const double tmpFD9 = -tmpFD3;
               const double tmpFD10 = -tmpFD4;
               const double tmpFD11 = -tmpFD5;
               const double tmpFD12 = (1.0/12.0)*alpha_i0m2_i1_i2;
               const double tmpFD13 = -1.0/12.0*alpha_i0p2_i1_i2;
               const double tmpFD14 = (1.0/12.0)*alpha_i0_i1m2_i2;
               const double tmpFD15 = -1.0/12.0*alpha_i0_i1p2_i2;
               const double tmpFD16 = pow(invdx0, 2);
               const double tmpFD17 = -5.0/2.0*alpha;
               const double tmpFD18 = invdx0*invdx1;
               const double tmpFD19 = pow(invdx1, 2);
               const double tmpFD20 = (5.0/6.0)*alpha;
               const double tmpFD21 = -tmpFD20;
               const double tmpFD22 = (5.0/6.0)*betU0;
               const double tmpFD23 = (5.0/6.0)*betU1;
               const double tmpFD24 = (5.0/6.0)*betU2;
               const double tmpFD25 = -tmpFD22;
               const double tmpFD26 = -tmpFD23;
               const double tmpFD27 = -tmpFD24;
               const double tmpFD28 = (1.0/12.0)*cf_i0m2_i1_i2;
               const double tmpFD29 = -1.0/12.0*cf_i0p2_i1_i2;
               const double tmpFD30 = (1.0/12.0)*cf_i0_i1m2_i2;
               const double tmpFD31 = -1.0/12.0*cf_i0_i1p2_i2;
               const double tmpFD32 = -5.0/2.0*cf;
               const double tmpFD33 = (5.0/6.0)*cf;
               const double tmpFD34 = -tmpFD33;
               const double tmpFD35 = (1.0/12.0)*hDD00_i0m2_i1_i2;
               const double tmpFD36 = -1.0/12.0*hDD00_i0p2_i1_i2;
               const double tmpFD37 = (1.0/12.0)*hDD00_i0_i1m2_i2;
               const double tmpFD38 = -1.0/12.0*hDD00_i0_i1p2_i2;
               const double tmpFD39 = (1.0/12.0)*hDD01_i0m2_i1_i2;
               const double tmpFD40 = -1.0/12.0*hDD01_i0p2_i1_i2;
               const double tmpFD41 = (1.0/12.0)*hDD01_i0_i1m2_i2;
               const double tmpFD42 = -1.0/12.0*hDD01_i0_i1p2_i2;
               const double tmpFD43 = (1.0/12.0)*hDD02_i0m2_i1_i2;
               const double tmpFD44 = -1.0/12.0*hDD02_i0p2_i1_i2;
               const double tmpFD45 = (1.0/12.0)*hDD02_i0_i1m2_i2;
               const double tmpFD46 = -1.0/12.0*hDD02_i0_i1p2_i2;
               const double tmpFD47 = (1.0/12.0)*hDD11_i0m2_i1_i2;
               const double tmpFD48 = -1.0/12.0*hDD11_i0p2_i1_i2;
               const double tmpFD49 = (1.0/12.0)*hDD11_i0_i1m2_i2;
               const double tmpFD50 = -1.0/12.0*hDD11_i0_i1p2_i2;
               const double tmpFD51 = (1.0/12.0)*hDD12_i0m2_i1_i2;
               const double tmpFD52 = -1.0/12.0*hDD12_i0p2_i1_i2;
               const double tmpFD53 = (1.0/12.0)*hDD12_i0_i1m2_i2;
               const double tmpFD54 = -1.0/12.0*hDD12_i0_i1p2_i2;
               const double tmpFD55 = (1.0/12.0)*hDD22_i0m2_i1_i2;
               const double tmpFD56 = -1.0/12.0*hDD22_i0p2_i1_i2;
               const double tmpFD57 = (1.0/12.0)*hDD22_i0_i1m2_i2;
               const double tmpFD58 = -1.0/12.0*hDD22_i0_i1p2_i2;
               const double tmpFD59 = -5.0/2.0*hDD00;
               const double tmpFD60 = -5.0/2.0*hDD01;
               const double tmpFD61 = -5.0/2.0*hDD02;
               const double tmpFD62 = -5.0/2.0*hDD11;
               const double tmpFD63 = -5.0/2.0*hDD12;
               const double tmpFD64 = -5.0/2.0*hDD22;
               const double tmpFD65 = (5.0/6.0)*hDD00;
               const double tmpFD66 = (5.0/6.0)*hDD01;
               const double tmpFD67 = (5.0/6.0)*hDD02;
               const double tmpFD68 = (5.0/6.0)*hDD11;
               const double tmpFD69 = (5.0/6.0)*hDD12;
               const double tmpFD70 = (5.0/6.0)*hDD22;
               const double tmpFD71 = -tmpFD65;
               const double tmpFD72 = -tmpFD66;
               const double tmpFD73 = -tmpFD67;
               const double tmpFD74 = -tmpFD68;
               const double tmpFD75 = -tmpFD69;
               const double tmpFD76 = -tmpFD70;
               const double tmpFD77 = (5.0/6.0)*lambdaU0;
               const double tmpFD78 = (5.0/6.0)*lambdaU1;
               const double tmpFD79 = (5.0/6.0)*lambdaU2;
               const double tmpFD80 = -tmpFD77;
               const double tmpFD81 = -tmpFD78;
               const double tmpFD82 = -tmpFD79;
               const double tmpFD83 = (5.0/6.0)*trK;
               const double tmpFD84 = -tmpFD83;
               const double tmpFD85 = (1.0/12.0)*uu_i0m2_i1_i2;
               const double tmpFD86 = -1.0/12.0*uu_i0p2_i1_i2;
               const double tmpFD87 = (1.0/12.0)*uu_i0_i1m2_i2;
               const double tmpFD88 = -1.0/12.0*uu_i0_i1p2_i2;
               const double tmpFD89 = -5.0/2.0*uu;
               const double tmpFD90 = (5.0/6.0)*uu;
               const double tmpFD91 = -tmpFD90;
               const double tmpFD92 = (1.0/12.0)*vetU0_i0m2_i1_i2;
               const double tmpFD93 = -1.0/12.0*vetU0_i0p2_i1_i2;
               const double tmpFD94 = (1.0/12.0)*vetU0_i0_i1m2_i2;
               const double tmpFD95 = -1.0/12.0*vetU0_i0_i1p2_i2;
               const double tmpFD96 = (1.0/12.0)*vetU1_i0m2_i1_i2;
               const double tmpFD97 = -1.0/12.0*vetU1_i0p2_i1_i2;
               const double tmpFD98 = (1.0/12.0)*vetU1_i0_i1m2_i2;
               const double tmpFD99 = -1.0/12.0*vetU1_i0_i1p2_i2;
               const double tmpFD100 = (1.0/12.0)*vetU2_i0m2_i1_i2;
               const double tmpFD101 = -1.0/12.0*vetU2_i0p2_i1_i2;
               const double tmpFD102 = (1.0/12.0)*vetU2_i0_i1m2_i2;
               const double tmpFD103 = -1.0/12.0*vetU2_i0_i1p2_i2;
               const double tmpFD104 = -5.0/2.0*vetU0;
               const double tmpFD105 = -5.0/2.0*vetU1;
               const double tmpFD106 = -5.0/2.0*vetU2;
               const double tmpFD107 = (5.0/6.0)*vetU0;
               const double tmpFD108 = (5.0/6.0)*vetU1;
               const double tmpFD109 = (5.0/6.0)*vetU2;
               const double tmpFD110 = -tmpFD107;
               const double tmpFD111 = -tmpFD108;
               const double tmpFD112 = -tmpFD109;
               const double UpwindAlgInputaDD_ddnD000 = invdx0*(-3.0/2.0*aDD00_i0m1_i1_i2 + (1.0/2.0)*aDD00_i0m2_i1_i2 - 1.0/12.0*aDD00_i0m3_i1_i2 + (1.0/4.0)*aDD00_i0p1_i1_i2 + tmpFD0);
               const double UpwindAlgInputaDD_ddnD001 = invdx1*(-3.0/2.0*aDD00_i0_i1m1_i2 + (1.0/2.0)*aDD00_i0_i1m2_i2 - 1.0/12.0*aDD00_i0_i1m3_i2 + (1.0/4.0)*aDD00_i0_i1p1_i2 + tmpFD0);
               const double UpwindAlgInputaDD_ddnD010 = invdx0*(-3.0/2.0*aDD01_i0m1_i1_i2 + (1.0/2.0)*aDD01_i0m2_i1_i2 - 1.0/12.0*aDD01_i0m3_i1_i2 + (1.0/4.0)*aDD01_i0p1_i1_i2 + tmpFD1);
               const double UpwindAlgInputaDD_ddnD011 = invdx1*(-3.0/2.0*aDD01_i0_i1m1_i2 + (1.0/2.0)*aDD01_i0_i1m2_i2 - 1.0/12.0*aDD01_i0_i1m3_i2 + (1.0/4.0)*aDD01_i0_i1p1_i2 + tmpFD1);
               const double UpwindAlgInputaDD_ddnD020 = invdx0*(-3.0/2.0*aDD02_i0m1_i1_i2 + (1.0/2.0)*aDD02_i0m2_i1_i2 - 1.0/12.0*aDD02_i0m3_i1_i2 + (1.0/4.0)*aDD02_i0p1_i1_i2 + tmpFD2);
               const double UpwindAlgInputaDD_ddnD021 = invdx1*(-3.0/2.0*aDD02_i0_i1m1_i2 + (1.0/2.0)*aDD02_i0_i1m2_i2 - 1.0/12.0*aDD02_i0_i1m3_i2 + (1.0/4.0)*aDD02_i0_i1p1_i2 + tmpFD2);
               const double UpwindAlgInputaDD_ddnD110 = invdx0*(-3.0/2.0*aDD11_i0m1_i1_i2 + (1.0/2.0)*aDD11_i0m2_i1_i2 - 1.0/12.0*aDD11_i0m3_i1_i2 + (1.0/4.0)*aDD11_i0p1_i1_i2 + tmpFD3);
               const double UpwindAlgInputaDD_ddnD111 = invdx1*(-3.0/2.0*aDD11_i0_i1m1_i2 + (1.0/2.0)*aDD11_i0_i1m2_i2 - 1.0/12.0*aDD11_i0_i1m3_i2 + (1.0/4.0)*aDD11_i0_i1p1_i2 + tmpFD3);
               const double UpwindAlgInputaDD_ddnD120 = invdx0*(-3.0/2.0*aDD12_i0m1_i1_i2 + (1.0/2.0)*aDD12_i0m2_i1_i2 - 1.0/12.0*aDD12_i0m3_i1_i2 + (1.0/4.0)*aDD12_i0p1_i1_i2 + tmpFD4);
               const double UpwindAlgInputaDD_ddnD121 = invdx1*(-3.0/2.0*aDD12_i0_i1m1_i2 + (1.0/2.0)*aDD12_i0_i1m2_i2 - 1.0/12.0*aDD12_i0_i1m3_i2 + (1.0/4.0)*aDD12_i0_i1p1_i2 + tmpFD4);
               const double UpwindAlgInputaDD_ddnD220 = invdx0*(-3.0/2.0*aDD22_i0m1_i1_i2 + (1.0/2.0)*aDD22_i0m2_i1_i2 - 1.0/12.0*aDD22_i0m3_i1_i2 + (1.0/4.0)*aDD22_i0p1_i1_i2 + tmpFD5);
               const double UpwindAlgInputaDD_ddnD221 = invdx1*(-3.0/2.0*aDD22_i0_i1m1_i2 + (1.0/2.0)*aDD22_i0_i1m2_i2 - 1.0/12.0*aDD22_i0_i1m3_i2 + (1.0/4.0)*aDD22_i0_i1p1_i2 + tmpFD5);
               const double UpwindAlgInputaDD_dupD000 = invdx0*(-1.0/4.0*aDD00_i0m1_i1_i2 + (3.0/2.0)*aDD00_i0p1_i1_i2 - 1.0/2.0*aDD00_i0p2_i1_i2 + (1.0/12.0)*aDD00_i0p3_i1_i2 + tmpFD6);
               const double UpwindAlgInputaDD_dupD001 = invdx1*(-1.0/4.0*aDD00_i0_i1m1_i2 + (3.0/2.0)*aDD00_i0_i1p1_i2 - 1.0/2.0*aDD00_i0_i1p2_i2 + (1.0/12.0)*aDD00_i0_i1p3_i2 + tmpFD6);
               const double UpwindAlgInputaDD_dupD010 = invdx0*(-1.0/4.0*aDD01_i0m1_i1_i2 + (3.0/2.0)*aDD01_i0p1_i1_i2 - 1.0/2.0*aDD01_i0p2_i1_i2 + (1.0/12.0)*aDD01_i0p3_i1_i2 + tmpFD7);
               const double UpwindAlgInputaDD_dupD011 = invdx1*(-1.0/4.0*aDD01_i0_i1m1_i2 + (3.0/2.0)*aDD01_i0_i1p1_i2 - 1.0/2.0*aDD01_i0_i1p2_i2 + (1.0/12.0)*aDD01_i0_i1p3_i2 + tmpFD7);
               const double UpwindAlgInputaDD_dupD020 = invdx0*(-1.0/4.0*aDD02_i0m1_i1_i2 + (3.0/2.0)*aDD02_i0p1_i1_i2 - 1.0/2.0*aDD02_i0p2_i1_i2 + (1.0/12.0)*aDD02_i0p3_i1_i2 + tmpFD8);
               const double UpwindAlgInputaDD_dupD021 = invdx1*(-1.0/4.0*aDD02_i0_i1m1_i2 + (3.0/2.0)*aDD02_i0_i1p1_i2 - 1.0/2.0*aDD02_i0_i1p2_i2 + (1.0/12.0)*aDD02_i0_i1p3_i2 + tmpFD8);
               const double UpwindAlgInputaDD_dupD110 = invdx0*(-1.0/4.0*aDD11_i0m1_i1_i2 + (3.0/2.0)*aDD11_i0p1_i1_i2 - 1.0/2.0*aDD11_i0p2_i1_i2 + (1.0/12.0)*aDD11_i0p3_i1_i2 + tmpFD9);
               const double UpwindAlgInputaDD_dupD111 = invdx1*(-1.0/4.0*aDD11_i0_i1m1_i2 + (3.0/2.0)*aDD11_i0_i1p1_i2 - 1.0/2.0*aDD11_i0_i1p2_i2 + (1.0/12.0)*aDD11_i0_i1p3_i2 + tmpFD9);
               const double UpwindAlgInputaDD_dupD120 = invdx0*(-1.0/4.0*aDD12_i0m1_i1_i2 + (3.0/2.0)*aDD12_i0p1_i1_i2 - 1.0/2.0*aDD12_i0p2_i1_i2 + (1.0/12.0)*aDD12_i0p3_i1_i2 + tmpFD10);
               const double UpwindAlgInputaDD_dupD121 = invdx1*(-1.0/4.0*aDD12_i0_i1m1_i2 + (3.0/2.0)*aDD12_i0_i1p1_i2 - 1.0/2.0*aDD12_i0_i1p2_i2 + (1.0/12.0)*aDD12_i0_i1p3_i2 + tmpFD10);
               const double UpwindAlgInputaDD_dupD220 = invdx0*(-1.0/4.0*aDD22_i0m1_i1_i2 + (3.0/2.0)*aDD22_i0p1_i1_i2 - 1.0/2.0*aDD22_i0p2_i1_i2 + (1.0/12.0)*aDD22_i0p3_i1_i2 + tmpFD11);
               const double UpwindAlgInputaDD_dupD221 = invdx1*(-1.0/4.0*aDD22_i0_i1m1_i2 + (3.0/2.0)*aDD22_i0_i1p1_i2 - 1.0/2.0*aDD22_i0_i1p2_i2 + (1.0/12.0)*aDD22_i0_i1p3_i2 + tmpFD11);
               const double alpha_dD0 = invdx0*(-2.0/3.0*alpha_i0m1_i1_i2 + (2.0/3.0)*alpha_i0p1_i1_i2 + tmpFD12 + tmpFD13);
               const double alpha_dD1 = invdx1*(-2.0/3.0*alpha_i0_i1m1_i2 + (2.0/3.0)*alpha_i0_i1p1_i2 + tmpFD14 + tmpFD15);
               const double alpha_dDD00 = tmpFD16*((4.0/3.0)*alpha_i0m1_i1_i2 + (4.0/3.0)*alpha_i0p1_i1_i2 - tmpFD12 + tmpFD13 + tmpFD17);
               const double alpha_dDD01 = tmpFD18*((4.0/9.0)*alpha_i0m1_i1m1_i2 - 1.0/18.0*alpha_i0m1_i1m2_i2 - 4.0/9.0*alpha_i0m1_i1p1_i2 + (1.0/18.0)*alpha_i0m1_i1p2_i2 - 1.0/18.0*alpha_i0m2_i1m1_i2 + (1.0/144.0)*alpha_i0m2_i1m2_i2 + (1.0/18.0)*alpha_i0m2_i1p1_i2 - 1.0/144.0*alpha_i0m2_i1p2_i2 - 4.0/9.0*alpha_i0p1_i1m1_i2 + (1.0/18.0)*alpha_i0p1_i1m2_i2 + (4.0/9.0)*alpha_i0p1_i1p1_i2 - 1.0/18.0*alpha_i0p1_i1p2_i2 + (1.0/18.0)*alpha_i0p2_i1m1_i2 - 1.0/144.0*alpha_i0p2_i1m2_i2 - 1.0/18.0*alpha_i0p2_i1p1_i2 + (1.0/144.0)*alpha_i0p2_i1p2_i2);
               const double alpha_dDD11 = tmpFD19*((4.0/3.0)*alpha_i0_i1m1_i2 + (4.0/3.0)*alpha_i0_i1p1_i2 - tmpFD14 + tmpFD15 + tmpFD17);
               const double UpwindAlgInputalpha_ddnD0 = invdx0*(-3.0/2.0*alpha_i0m1_i1_i2 + (1.0/2.0)*alpha_i0m2_i1_i2 - 1.0/12.0*alpha_i0m3_i1_i2 + (1.0/4.0)*alpha_i0p1_i1_i2 + tmpFD20);
               const double UpwindAlgInputalpha_ddnD1 = invdx1*(-3.0/2.0*alpha_i0_i1m1_i2 + (1.0/2.0)*alpha_i0_i1m2_i2 - 1.0/12.0*alpha_i0_i1m3_i2 + (1.0/4.0)*alpha_i0_i1p1_i2 + tmpFD20);
               const double UpwindAlgInputalpha_dupD0 = invdx0*(-1.0/4.0*alpha_i0m1_i1_i2 + (3.0/2.0)*alpha_i0p1_i1_i2 - 1.0/2.0*alpha_i0p2_i1_i2 + (1.0/12.0)*alpha_i0p3_i1_i2 + tmpFD21);
               const double UpwindAlgInputalpha_dupD1 = invdx1*(-1.0/4.0*alpha_i0_i1m1_i2 + (3.0/2.0)*alpha_i0_i1p1_i2 - 1.0/2.0*alpha_i0_i1p2_i2 + (1.0/12.0)*alpha_i0_i1p3_i2 + tmpFD21);
               const double UpwindAlgInputbetU_ddnD00 = invdx0*(-3.0/2.0*betU0_i0m1_i1_i2 + (1.0/2.0)*betU0_i0m2_i1_i2 - 1.0/12.0*betU0_i0m3_i1_i2 + (1.0/4.0)*betU0_i0p1_i1_i2 + tmpFD22);
               const double UpwindAlgInputbetU_ddnD01 = invdx1*(-3.0/2.0*betU0_i0_i1m1_i2 + (1.0/2.0)*betU0_i0_i1m2_i2 - 1.0/12.0*betU0_i0_i1m3_i2 + (1.0/4.0)*betU0_i0_i1p1_i2 + tmpFD22);
               const double UpwindAlgInputbetU_ddnD10 = invdx0*(-3.0/2.0*betU1_i0m1_i1_i2 + (1.0/2.0)*betU1_i0m2_i1_i2 - 1.0/12.0*betU1_i0m3_i1_i2 + (1.0/4.0)*betU1_i0p1_i1_i2 + tmpFD23);
               const double UpwindAlgInputbetU_ddnD11 = invdx1*(-3.0/2.0*betU1_i0_i1m1_i2 + (1.0/2.0)*betU1_i0_i1m2_i2 - 1.0/12.0*betU1_i0_i1m3_i2 + (1.0/4.0)*betU1_i0_i1p1_i2 + tmpFD23);
               const double UpwindAlgInputbetU_ddnD20 = invdx0*(-3.0/2.0*betU2_i0m1_i1_i2 + (1.0/2.0)*betU2_i0m2_i1_i2 - 1.0/12.0*betU2_i0m3_i1_i2 + (1.0/4.0)*betU2_i0p1_i1_i2 + tmpFD24);
               const double UpwindAlgInputbetU_ddnD21 = invdx1*(-3.0/2.0*betU2_i0_i1m1_i2 + (1.0/2.0)*betU2_i0_i1m2_i2 - 1.0/12.0*betU2_i0_i1m3_i2 + (1.0/4.0)*betU2_i0_i1p1_i2 + tmpFD24);
               const double UpwindAlgInputbetU_dupD00 = invdx0*(-1.0/4.0*betU0_i0m1_i1_i2 + (3.0/2.0)*betU0_i0p1_i1_i2 - 1.0/2.0*betU0_i0p2_i1_i2 + (1.0/12.0)*betU0_i0p3_i1_i2 + tmpFD25);
               const double UpwindAlgInputbetU_dupD01 = invdx1*(-1.0/4.0*betU0_i0_i1m1_i2 + (3.0/2.0)*betU0_i0_i1p1_i2 - 1.0/2.0*betU0_i0_i1p2_i2 + (1.0/12.0)*betU0_i0_i1p3_i2 + tmpFD25);
               const double UpwindAlgInputbetU_dupD10 = invdx0*(-1.0/4.0*betU1_i0m1_i1_i2 + (3.0/2.0)*betU1_i0p1_i1_i2 - 1.0/2.0*betU1_i0p2_i1_i2 + (1.0/12.0)*betU1_i0p3_i1_i2 + tmpFD26);
               const double UpwindAlgInputbetU_dupD11 = invdx1*(-1.0/4.0*betU1_i0_i1m1_i2 + (3.0/2.0)*betU1_i0_i1p1_i2 - 1.0/2.0*betU1_i0_i1p2_i2 + (1.0/12.0)*betU1_i0_i1p3_i2 + tmpFD26);
               const double UpwindAlgInputbetU_dupD20 = invdx0*(-1.0/4.0*betU2_i0m1_i1_i2 + (3.0/2.0)*betU2_i0p1_i1_i2 - 1.0/2.0*betU2_i0p2_i1_i2 + (1.0/12.0)*betU2_i0p3_i1_i2 + tmpFD27);
               const double UpwindAlgInputbetU_dupD21 = invdx1*(-1.0/4.0*betU2_i0_i1m1_i2 + (3.0/2.0)*betU2_i0_i1p1_i2 - 1.0/2.0*betU2_i0_i1p2_i2 + (1.0/12.0)*betU2_i0_i1p3_i2 + tmpFD27);
               const double cf_dD0 = invdx0*(-2.0/3.0*cf_i0m1_i1_i2 + (2.0/3.0)*cf_i0p1_i1_i2 + tmpFD28 + tmpFD29);
               const double cf_dD1 = invdx1*(-2.0/3.0*cf_i0_i1m1_i2 + (2.0/3.0)*cf_i0_i1p1_i2 + tmpFD30 + tmpFD31);
               const double cf_dDD00 = tmpFD16*((4.0/3.0)*cf_i0m1_i1_i2 + (4.0/3.0)*cf_i0p1_i1_i2 - tmpFD28 + tmpFD29 + tmpFD32);
               const double cf_dDD01 = tmpFD18*((4.0/9.0)*cf_i0m1_i1m1_i2 - 1.0/18.0*cf_i0m1_i1m2_i2 - 4.0/9.0*cf_i0m1_i1p1_i2 + (1.0/18.0)*cf_i0m1_i1p2_i2 - 1.0/18.0*cf_i0m2_i1m1_i2 + (1.0/144.0)*cf_i0m2_i1m2_i2 + (1.0/18.0)*cf_i0m2_i1p1_i2 - 1.0/144.0*cf_i0m2_i1p2_i2 - 4.0/9.0*cf_i0p1_i1m1_i2 + (1.0/18.0)*cf_i0p1_i1m2_i2 + (4.0/9.0)*cf_i0p1_i1p1_i2 - 1.0/18.0*cf_i0p1_i1p2_i2 + (1.0/18.0)*cf_i0p2_i1m1_i2 - 1.0/144.0*cf_i0p2_i1m2_i2 - 1.0/18.0*cf_i0p2_i1p1_i2 + (1.0/144.0)*cf_i0p2_i1p2_i2);
               const double cf_dDD11 = tmpFD19*((4.0/3.0)*cf_i0_i1m1_i2 + (4.0/3.0)*cf_i0_i1p1_i2 - tmpFD30 + tmpFD31 + tmpFD32);
               const double UpwindAlgInputcf_ddnD0 = invdx0*(-3.0/2.0*cf_i0m1_i1_i2 + (1.0/2.0)*cf_i0m2_i1_i2 - 1.0/12.0*cf_i0m3_i1_i2 + (1.0/4.0)*cf_i0p1_i1_i2 + tmpFD33);
               const double UpwindAlgInputcf_ddnD1 = invdx1*(-3.0/2.0*cf_i0_i1m1_i2 + (1.0/2.0)*cf_i0_i1m2_i2 - 1.0/12.0*cf_i0_i1m3_i2 + (1.0/4.0)*cf_i0_i1p1_i2 + tmpFD33);
               const double UpwindAlgInputcf_dupD0 = invdx0*(-1.0/4.0*cf_i0m1_i1_i2 + (3.0/2.0)*cf_i0p1_i1_i2 - 1.0/2.0*cf_i0p2_i1_i2 + (1.0/12.0)*cf_i0p3_i1_i2 + tmpFD34);
               const double UpwindAlgInputcf_dupD1 = invdx1*(-1.0/4.0*cf_i0_i1m1_i2 + (3.0/2.0)*cf_i0_i1p1_i2 - 1.0/2.0*cf_i0_i1p2_i2 + (1.0/12.0)*cf_i0_i1p3_i2 + tmpFD34);
               const double hDD_dD000 = invdx0*(-2.0/3.0*hDD00_i0m1_i1_i2 + (2.0/3.0)*hDD00_i0p1_i1_i2 + tmpFD35 + tmpFD36);
               const double hDD_dD001 = invdx1*(-2.0/3.0*hDD00_i0_i1m1_i2 + (2.0/3.0)*hDD00_i0_i1p1_i2 + tmpFD37 + tmpFD38);
               const double hDD_dD010 = invdx0*(-2.0/3.0*hDD01_i0m1_i1_i2 + (2.0/3.0)*hDD01_i0p1_i1_i2 + tmpFD39 + tmpFD40);
               const double hDD_dD011 = invdx1*(-2.0/3.0*hDD01_i0_i1m1_i2 + (2.0/3.0)*hDD01_i0_i1p1_i2 + tmpFD41 + tmpFD42);
               const double hDD_dD020 = invdx0*(-2.0/3.0*hDD02_i0m1_i1_i2 + (2.0/3.0)*hDD02_i0p1_i1_i2 + tmpFD43 + tmpFD44);
               const double hDD_dD021 = invdx1*(-2.0/3.0*hDD02_i0_i1m1_i2 + (2.0/3.0)*hDD02_i0_i1p1_i2 + tmpFD45 + tmpFD46);
               const double hDD_dD110 = invdx0*(-2.0/3.0*hDD11_i0m1_i1_i2 + (2.0/3.0)*hDD11_i0p1_i1_i2 + tmpFD47 + tmpFD48);
               const double hDD_dD111 = invdx1*(-2.0/3.0*hDD11_i0_i1m1_i2 + (2.0/3.0)*hDD11_i0_i1p1_i2 + tmpFD49 + tmpFD50);
               const double hDD_dD120 = invdx0*(-2.0/3.0*hDD12_i0m1_i1_i2 + (2.0/3.0)*hDD12_i0p1_i1_i2 + tmpFD51 + tmpFD52);
               const double hDD_dD121 = invdx1*(-2.0/3.0*hDD12_i0_i1m1_i2 + (2.0/3.0)*hDD12_i0_i1p1_i2 + tmpFD53 + tmpFD54);
               const double hDD_dD220 = invdx0*(-2.0/3.0*hDD22_i0m1_i1_i2 + (2.0/3.0)*hDD22_i0p1_i1_i2 + tmpFD55 + tmpFD56);
               const double hDD_dD221 = invdx1*(-2.0/3.0*hDD22_i0_i1m1_i2 + (2.0/3.0)*hDD22_i0_i1p1_i2 + tmpFD57 + tmpFD58);
               const double hDD_dDD0000 = tmpFD16*((4.0/3.0)*hDD00_i0m1_i1_i2 + (4.0/3.0)*hDD00_i0p1_i1_i2 - tmpFD35 + tmpFD36 + tmpFD59);
               const double hDD_dDD0001 = tmpFD18*((4.0/9.0)*hDD00_i0m1_i1m1_i2 - 1.0/18.0*hDD00_i0m1_i1m2_i2 - 4.0/9.0*hDD00_i0m1_i1p1_i2 + (1.0/18.0)*hDD00_i0m1_i1p2_i2 - 1.0/18.0*hDD00_i0m2_i1m1_i2 + (1.0/144.0)*hDD00_i0m2_i1m2_i2 + (1.0/18.0)*hDD00_i0m2_i1p1_i2 - 1.0/144.0*hDD00_i0m2_i1p2_i2 - 4.0/9.0*hDD00_i0p1_i1m1_i2 + (1.0/18.0)*hDD00_i0p1_i1m2_i2 + (4.0/9.0)*hDD00_i0p1_i1p1_i2 - 1.0/18.0*hDD00_i0p1_i1p2_i2 + (1.0/18.0)*hDD00_i0p2_i1m1_i2 - 1.0/144.0*hDD00_i0p2_i1m2_i2 - 1.0/18.0*hDD00_i0p2_i1p1_i2 + (1.0/144.0)*hDD00_i0p2_i1p2_i2);
               const double hDD_dDD0011 = tmpFD19*((4.0/3.0)*hDD00_i0_i1m1_i2 + (4.0/3.0)*hDD00_i0_i1p1_i2 - tmpFD37 + tmpFD38 + tmpFD59);
               const double hDD_dDD0100 = tmpFD16*((4.0/3.0)*hDD01_i0m1_i1_i2 + (4.0/3.0)*hDD01_i0p1_i1_i2 - tmpFD39 + tmpFD40 + tmpFD60);
               const double hDD_dDD0101 = tmpFD18*((4.0/9.0)*hDD01_i0m1_i1m1_i2 - 1.0/18.0*hDD01_i0m1_i1m2_i2 - 4.0/9.0*hDD01_i0m1_i1p1_i2 + (1.0/18.0)*hDD01_i0m1_i1p2_i2 - 1.0/18.0*hDD01_i0m2_i1m1_i2 + (1.0/144.0)*hDD01_i0m2_i1m2_i2 + (1.0/18.0)*hDD01_i0m2_i1p1_i2 - 1.0/144.0*hDD01_i0m2_i1p2_i2 - 4.0/9.0*hDD01_i0p1_i1m1_i2 + (1.0/18.0)*hDD01_i0p1_i1m2_i2 + (4.0/9.0)*hDD01_i0p1_i1p1_i2 - 1.0/18.0*hDD01_i0p1_i1p2_i2 + (1.0/18.0)*hDD01_i0p2_i1m1_i2 - 1.0/144.0*hDD01_i0p2_i1m2_i2 - 1.0/18.0*hDD01_i0p2_i1p1_i2 + (1.0/144.0)*hDD01_i0p2_i1p2_i2);
               const double hDD_dDD0111 = tmpFD19*((4.0/3.0)*hDD01_i0_i1m1_i2 + (4.0/3.0)*hDD01_i0_i1p1_i2 - tmpFD41 + tmpFD42 + tmpFD60);
               const double hDD_dDD0200 = tmpFD16*((4.0/3.0)*hDD02_i0m1_i1_i2 + (4.0/3.0)*hDD02_i0p1_i1_i2 - tmpFD43 + tmpFD44 + tmpFD61);
               const double hDD_dDD0201 = tmpFD18*((4.0/9.0)*hDD02_i0m1_i1m1_i2 - 1.0/18.0*hDD02_i0m1_i1m2_i2 - 4.0/9.0*hDD02_i0m1_i1p1_i2 + (1.0/18.0)*hDD02_i0m1_i1p2_i2 - 1.0/18.0*hDD02_i0m2_i1m1_i2 + (1.0/144.0)*hDD02_i0m2_i1m2_i2 + (1.0/18.0)*hDD02_i0m2_i1p1_i2 - 1.0/144.0*hDD02_i0m2_i1p2_i2 - 4.0/9.0*hDD02_i0p1_i1m1_i2 + (1.0/18.0)*hDD02_i0p1_i1m2_i2 + (4.0/9.0)*hDD02_i0p1_i1p1_i2 - 1.0/18.0*hDD02_i0p1_i1p2_i2 + (1.0/18.0)*hDD02_i0p2_i1m1_i2 - 1.0/144.0*hDD02_i0p2_i1m2_i2 - 1.0/18.0*hDD02_i0p2_i1p1_i2 + (1.0/144.0)*hDD02_i0p2_i1p2_i2);
               const double hDD_dDD0211 = tmpFD19*((4.0/3.0)*hDD02_i0_i1m1_i2 + (4.0/3.0)*hDD02_i0_i1p1_i2 - tmpFD45 + tmpFD46 + tmpFD61);
               const double hDD_dDD1100 = tmpFD16*((4.0/3.0)*hDD11_i0m1_i1_i2 + (4.0/3.0)*hDD11_i0p1_i1_i2 - tmpFD47 + tmpFD48 + tmpFD62);
               const double hDD_dDD1101 = tmpFD18*((4.0/9.0)*hDD11_i0m1_i1m1_i2 - 1.0/18.0*hDD11_i0m1_i1m2_i2 - 4.0/9.0*hDD11_i0m1_i1p1_i2 + (1.0/18.0)*hDD11_i0m1_i1p2_i2 - 1.0/18.0*hDD11_i0m2_i1m1_i2 + (1.0/144.0)*hDD11_i0m2_i1m2_i2 + (1.0/18.0)*hDD11_i0m2_i1p1_i2 - 1.0/144.0*hDD11_i0m2_i1p2_i2 - 4.0/9.0*hDD11_i0p1_i1m1_i2 + (1.0/18.0)*hDD11_i0p1_i1m2_i2 + (4.0/9.0)*hDD11_i0p1_i1p1_i2 - 1.0/18.0*hDD11_i0p1_i1p2_i2 + (1.0/18.0)*hDD11_i0p2_i1m1_i2 - 1.0/144.0*hDD11_i0p2_i1m2_i2 - 1.0/18.0*hDD11_i0p2_i1p1_i2 + (1.0/144.0)*hDD11_i0p2_i1p2_i2);
               const double hDD_dDD1111 = tmpFD19*((4.0/3.0)*hDD11_i0_i1m1_i2 + (4.0/3.0)*hDD11_i0_i1p1_i2 - tmpFD49 + tmpFD50 + tmpFD62);
               const double hDD_dDD1200 = tmpFD16*((4.0/3.0)*hDD12_i0m1_i1_i2 + (4.0/3.0)*hDD12_i0p1_i1_i2 - tmpFD51 + tmpFD52 + tmpFD63);
               const double hDD_dDD1201 = tmpFD18*((4.0/9.0)*hDD12_i0m1_i1m1_i2 - 1.0/18.0*hDD12_i0m1_i1m2_i2 - 4.0/9.0*hDD12_i0m1_i1p1_i2 + (1.0/18.0)*hDD12_i0m1_i1p2_i2 - 1.0/18.0*hDD12_i0m2_i1m1_i2 + (1.0/144.0)*hDD12_i0m2_i1m2_i2 + (1.0/18.0)*hDD12_i0m2_i1p1_i2 - 1.0/144.0*hDD12_i0m2_i1p2_i2 - 4.0/9.0*hDD12_i0p1_i1m1_i2 + (1.0/18.0)*hDD12_i0p1_i1m2_i2 + (4.0/9.0)*hDD12_i0p1_i1p1_i2 - 1.0/18.0*hDD12_i0p1_i1p2_i2 + (1.0/18.0)*hDD12_i0p2_i1m1_i2 - 1.0/144.0*hDD12_i0p2_i1m2_i2 - 1.0/18.0*hDD12_i0p2_i1p1_i2 + (1.0/144.0)*hDD12_i0p2_i1p2_i2);
               const double hDD_dDD1211 = tmpFD19*((4.0/3.0)*hDD12_i0_i1m1_i2 + (4.0/3.0)*hDD12_i0_i1p1_i2 - tmpFD53 + tmpFD54 + tmpFD63);
               const double hDD_dDD2200 = tmpFD16*((4.0/3.0)*hDD22_i0m1_i1_i2 + (4.0/3.0)*hDD22_i0p1_i1_i2 - tmpFD55 + tmpFD56 + tmpFD64);
               const double hDD_dDD2201 = tmpFD18*((4.0/9.0)*hDD22_i0m1_i1m1_i2 - 1.0/18.0*hDD22_i0m1_i1m2_i2 - 4.0/9.0*hDD22_i0m1_i1p1_i2 + (1.0/18.0)*hDD22_i0m1_i1p2_i2 - 1.0/18.0*hDD22_i0m2_i1m1_i2 + (1.0/144.0)*hDD22_i0m2_i1m2_i2 + (1.0/18.0)*hDD22_i0m2_i1p1_i2 - 1.0/144.0*hDD22_i0m2_i1p2_i2 - 4.0/9.0*hDD22_i0p1_i1m1_i2 + (1.0/18.0)*hDD22_i0p1_i1m2_i2 + (4.0/9.0)*hDD22_i0p1_i1p1_i2 - 1.0/18.0*hDD22_i0p1_i1p2_i2 + (1.0/18.0)*hDD22_i0p2_i1m1_i2 - 1.0/144.0*hDD22_i0p2_i1m2_i2 - 1.0/18.0*hDD22_i0p2_i1p1_i2 + (1.0/144.0)*hDD22_i0p2_i1p2_i2);
               const double hDD_dDD2211 = tmpFD19*((4.0/3.0)*hDD22_i0_i1m1_i2 + (4.0/3.0)*hDD22_i0_i1p1_i2 - tmpFD57 + tmpFD58 + tmpFD64);
               const double UpwindAlgInputhDD_ddnD000 = invdx0*(-3.0/2.0*hDD00_i0m1_i1_i2 + (1.0/2.0)*hDD00_i0m2_i1_i2 - 1.0/12.0*hDD00_i0m3_i1_i2 + (1.0/4.0)*hDD00_i0p1_i1_i2 + tmpFD65);
               const double UpwindAlgInputhDD_ddnD001 = invdx1*(-3.0/2.0*hDD00_i0_i1m1_i2 + (1.0/2.0)*hDD00_i0_i1m2_i2 - 1.0/12.0*hDD00_i0_i1m3_i2 + (1.0/4.0)*hDD00_i0_i1p1_i2 + tmpFD65);
               const double UpwindAlgInputhDD_ddnD010 = invdx0*(-3.0/2.0*hDD01_i0m1_i1_i2 + (1.0/2.0)*hDD01_i0m2_i1_i2 - 1.0/12.0*hDD01_i0m3_i1_i2 + (1.0/4.0)*hDD01_i0p1_i1_i2 + tmpFD66);
               const double UpwindAlgInputhDD_ddnD011 = invdx1*(-3.0/2.0*hDD01_i0_i1m1_i2 + (1.0/2.0)*hDD01_i0_i1m2_i2 - 1.0/12.0*hDD01_i0_i1m3_i2 + (1.0/4.0)*hDD01_i0_i1p1_i2 + tmpFD66);
               const double UpwindAlgInputhDD_ddnD020 = invdx0*(-3.0/2.0*hDD02_i0m1_i1_i2 + (1.0/2.0)*hDD02_i0m2_i1_i2 - 1.0/12.0*hDD02_i0m3_i1_i2 + (1.0/4.0)*hDD02_i0p1_i1_i2 + tmpFD67);
               const double UpwindAlgInputhDD_ddnD021 = invdx1*(-3.0/2.0*hDD02_i0_i1m1_i2 + (1.0/2.0)*hDD02_i0_i1m2_i2 - 1.0/12.0*hDD02_i0_i1m3_i2 + (1.0/4.0)*hDD02_i0_i1p1_i2 + tmpFD67);
               const double UpwindAlgInputhDD_ddnD110 = invdx0*(-3.0/2.0*hDD11_i0m1_i1_i2 + (1.0/2.0)*hDD11_i0m2_i1_i2 - 1.0/12.0*hDD11_i0m3_i1_i2 + (1.0/4.0)*hDD11_i0p1_i1_i2 + tmpFD68);
               const double UpwindAlgInputhDD_ddnD111 = invdx1*(-3.0/2.0*hDD11_i0_i1m1_i2 + (1.0/2.0)*hDD11_i0_i1m2_i2 - 1.0/12.0*hDD11_i0_i1m3_i2 + (1.0/4.0)*hDD11_i0_i1p1_i2 + tmpFD68);
               const double UpwindAlgInputhDD_ddnD120 = invdx0*(-3.0/2.0*hDD12_i0m1_i1_i2 + (1.0/2.0)*hDD12_i0m2_i1_i2 - 1.0/12.0*hDD12_i0m3_i1_i2 + (1.0/4.0)*hDD12_i0p1_i1_i2 + tmpFD69);
               const double UpwindAlgInputhDD_ddnD121 = invdx1*(-3.0/2.0*hDD12_i0_i1m1_i2 + (1.0/2.0)*hDD12_i0_i1m2_i2 - 1.0/12.0*hDD12_i0_i1m3_i2 + (1.0/4.0)*hDD12_i0_i1p1_i2 + tmpFD69);
               const double UpwindAlgInputhDD_ddnD220 = invdx0*(-3.0/2.0*hDD22_i0m1_i1_i2 + (1.0/2.0)*hDD22_i0m2_i1_i2 - 1.0/12.0*hDD22_i0m3_i1_i2 + (1.0/4.0)*hDD22_i0p1_i1_i2 + tmpFD70);
               const double UpwindAlgInputhDD_ddnD221 = invdx1*(-3.0/2.0*hDD22_i0_i1m1_i2 + (1.0/2.0)*hDD22_i0_i1m2_i2 - 1.0/12.0*hDD22_i0_i1m3_i2 + (1.0/4.0)*hDD22_i0_i1p1_i2 + tmpFD70);
               const double UpwindAlgInputhDD_dupD000 = invdx0*(-1.0/4.0*hDD00_i0m1_i1_i2 + (3.0/2.0)*hDD00_i0p1_i1_i2 - 1.0/2.0*hDD00_i0p2_i1_i2 + (1.0/12.0)*hDD00_i0p3_i1_i2 + tmpFD71);
               const double UpwindAlgInputhDD_dupD001 = invdx1*(-1.0/4.0*hDD00_i0_i1m1_i2 + (3.0/2.0)*hDD00_i0_i1p1_i2 - 1.0/2.0*hDD00_i0_i1p2_i2 + (1.0/12.0)*hDD00_i0_i1p3_i2 + tmpFD71);
               const double UpwindAlgInputhDD_dupD010 = invdx0*(-1.0/4.0*hDD01_i0m1_i1_i2 + (3.0/2.0)*hDD01_i0p1_i1_i2 - 1.0/2.0*hDD01_i0p2_i1_i2 + (1.0/12.0)*hDD01_i0p3_i1_i2 + tmpFD72);
               const double UpwindAlgInputhDD_dupD011 = invdx1*(-1.0/4.0*hDD01_i0_i1m1_i2 + (3.0/2.0)*hDD01_i0_i1p1_i2 - 1.0/2.0*hDD01_i0_i1p2_i2 + (1.0/12.0)*hDD01_i0_i1p3_i2 + tmpFD72);
               const double UpwindAlgInputhDD_dupD020 = invdx0*(-1.0/4.0*hDD02_i0m1_i1_i2 + (3.0/2.0)*hDD02_i0p1_i1_i2 - 1.0/2.0*hDD02_i0p2_i1_i2 + (1.0/12.0)*hDD02_i0p3_i1_i2 + tmpFD73);
               const double UpwindAlgInputhDD_dupD021 = invdx1*(-1.0/4.0*hDD02_i0_i1m1_i2 + (3.0/2.0)*hDD02_i0_i1p1_i2 - 1.0/2.0*hDD02_i0_i1p2_i2 + (1.0/12.0)*hDD02_i0_i1p3_i2 + tmpFD73);
               const double UpwindAlgInputhDD_dupD110 = invdx0*(-1.0/4.0*hDD11_i0m1_i1_i2 + (3.0/2.0)*hDD11_i0p1_i1_i2 - 1.0/2.0*hDD11_i0p2_i1_i2 + (1.0/12.0)*hDD11_i0p3_i1_i2 + tmpFD74);
               const double UpwindAlgInputhDD_dupD111 = invdx1*(-1.0/4.0*hDD11_i0_i1m1_i2 + (3.0/2.0)*hDD11_i0_i1p1_i2 - 1.0/2.0*hDD11_i0_i1p2_i2 + (1.0/12.0)*hDD11_i0_i1p3_i2 + tmpFD74);
               const double UpwindAlgInputhDD_dupD120 = invdx0*(-1.0/4.0*hDD12_i0m1_i1_i2 + (3.0/2.0)*hDD12_i0p1_i1_i2 - 1.0/2.0*hDD12_i0p2_i1_i2 + (1.0/12.0)*hDD12_i0p3_i1_i2 + tmpFD75);
               const double UpwindAlgInputhDD_dupD121 = invdx1*(-1.0/4.0*hDD12_i0_i1m1_i2 + (3.0/2.0)*hDD12_i0_i1p1_i2 - 1.0/2.0*hDD12_i0_i1p2_i2 + (1.0/12.0)*hDD12_i0_i1p3_i2 + tmpFD75);
               const double UpwindAlgInputhDD_dupD220 = invdx0*(-1.0/4.0*hDD22_i0m1_i1_i2 + (3.0/2.0)*hDD22_i0p1_i1_i2 - 1.0/2.0*hDD22_i0p2_i1_i2 + (1.0/12.0)*hDD22_i0p3_i1_i2 + tmpFD76);
               const double UpwindAlgInputhDD_dupD221 = invdx1*(-1.0/4.0*hDD22_i0_i1m1_i2 + (3.0/2.0)*hDD22_i0_i1p1_i2 - 1.0/2.0*hDD22_i0_i1p2_i2 + (1.0/12.0)*hDD22_i0_i1p3_i2 + tmpFD76);
               const double lambdaU_dD00 = invdx0*(-2.0/3.0*lambdaU0_i0m1_i1_i2 + (1.0/12.0)*lambdaU0_i0m2_i1_i2 + (2.0/3.0)*lambdaU0_i0p1_i1_i2 - 1.0/12.0*lambdaU0_i0p2_i1_i2);
               const double lambdaU_dD01 = invdx1*(-2.0/3.0*lambdaU0_i0_i1m1_i2 + (1.0/12.0)*lambdaU0_i0_i1m2_i2 + (2.0/3.0)*lambdaU0_i0_i1p1_i2 - 1.0/12.0*lambdaU0_i0_i1p2_i2);
               const double lambdaU_dD10 = invdx0*(-2.0/3.0*lambdaU1_i0m1_i1_i2 + (1.0/12.0)*lambdaU1_i0m2_i1_i2 + (2.0/3.0)*lambdaU1_i0p1_i1_i2 - 1.0/12.0*lambdaU1_i0p2_i1_i2);
               const double lambdaU_dD11 = invdx1*(-2.0/3.0*lambdaU1_i0_i1m1_i2 + (1.0/12.0)*lambdaU1_i0_i1m2_i2 + (2.0/3.0)*lambdaU1_i0_i1p1_i2 - 1.0/12.0*lambdaU1_i0_i1p2_i2);
               const double lambdaU_dD20 = invdx0*(-2.0/3.0*lambdaU2_i0m1_i1_i2 + (1.0/12.0)*lambdaU2_i0m2_i1_i2 + (2.0/3.0)*lambdaU2_i0p1_i1_i2 - 1.0/12.0*lambdaU2_i0p2_i1_i2);
               const double lambdaU_dD21 = invdx1*(-2.0/3.0*lambdaU2_i0_i1m1_i2 + (1.0/12.0)*lambdaU2_i0_i1m2_i2 + (2.0/3.0)*lambdaU2_i0_i1p1_i2 - 1.0/12.0*lambdaU2_i0_i1p2_i2);
               const double UpwindAlgInputlambdaU_ddnD00 = invdx0*(-3.0/2.0*lambdaU0_i0m1_i1_i2 + (1.0/2.0)*lambdaU0_i0m2_i1_i2 - 1.0/12.0*lambdaU0_i0m3_i1_i2 + (1.0/4.0)*lambdaU0_i0p1_i1_i2 + tmpFD77);
               const double UpwindAlgInputlambdaU_ddnD01 = invdx1*(-3.0/2.0*lambdaU0_i0_i1m1_i2 + (1.0/2.0)*lambdaU0_i0_i1m2_i2 - 1.0/12.0*lambdaU0_i0_i1m3_i2 + (1.0/4.0)*lambdaU0_i0_i1p1_i2 + tmpFD77);
               const double UpwindAlgInputlambdaU_ddnD10 = invdx0*(-3.0/2.0*lambdaU1_i0m1_i1_i2 + (1.0/2.0)*lambdaU1_i0m2_i1_i2 - 1.0/12.0*lambdaU1_i0m3_i1_i2 + (1.0/4.0)*lambdaU1_i0p1_i1_i2 + tmpFD78);
               const double UpwindAlgInputlambdaU_ddnD11 = invdx1*(-3.0/2.0*lambdaU1_i0_i1m1_i2 + (1.0/2.0)*lambdaU1_i0_i1m2_i2 - 1.0/12.0*lambdaU1_i0_i1m3_i2 + (1.0/4.0)*lambdaU1_i0_i1p1_i2 + tmpFD78);
               const double UpwindAlgInputlambdaU_ddnD20 = invdx0*(-3.0/2.0*lambdaU2_i0m1_i1_i2 + (1.0/2.0)*lambdaU2_i0m2_i1_i2 - 1.0/12.0*lambdaU2_i0m3_i1_i2 + (1.0/4.0)*lambdaU2_i0p1_i1_i2 + tmpFD79);
               const double UpwindAlgInputlambdaU_ddnD21 = invdx1*(-3.0/2.0*lambdaU2_i0_i1m1_i2 + (1.0/2.0)*lambdaU2_i0_i1m2_i2 - 1.0/12.0*lambdaU2_i0_i1m3_i2 + (1.0/4.0)*lambdaU2_i0_i1p1_i2 + tmpFD79);
               const double UpwindAlgInputlambdaU_dupD00 = invdx0*(-1.0/4.0*lambdaU0_i0m1_i1_i2 + (3.0/2.0)*lambdaU0_i0p1_i1_i2 - 1.0/2.0*lambdaU0_i0p2_i1_i2 + (1.0/12.0)*lambdaU0_i0p3_i1_i2 + tmpFD80);
               const double UpwindAlgInputlambdaU_dupD01 = invdx1*(-1.0/4.0*lambdaU0_i0_i1m1_i2 + (3.0/2.0)*lambdaU0_i0_i1p1_i2 - 1.0/2.0*lambdaU0_i0_i1p2_i2 + (1.0/12.0)*lambdaU0_i0_i1p3_i2 + tmpFD80);
               const double UpwindAlgInputlambdaU_dupD10 = invdx0*(-1.0/4.0*lambdaU1_i0m1_i1_i2 + (3.0/2.0)*lambdaU1_i0p1_i1_i2 - 1.0/2.0*lambdaU1_i0p2_i1_i2 + (1.0/12.0)*lambdaU1_i0p3_i1_i2 + tmpFD81);
               const double UpwindAlgInputlambdaU_dupD11 = invdx1*(-1.0/4.0*lambdaU1_i0_i1m1_i2 + (3.0/2.0)*lambdaU1_i0_i1p1_i2 - 1.0/2.0*lambdaU1_i0_i1p2_i2 + (1.0/12.0)*lambdaU1_i0_i1p3_i2 + tmpFD81);
               const double UpwindAlgInputlambdaU_dupD20 = invdx0*(-1.0/4.0*lambdaU2_i0m1_i1_i2 + (3.0/2.0)*lambdaU2_i0p1_i1_i2 - 1.0/2.0*lambdaU2_i0p2_i1_i2 + (1.0/12.0)*lambdaU2_i0p3_i1_i2 + tmpFD82);
               const double UpwindAlgInputlambdaU_dupD21 = invdx1*(-1.0/4.0*lambdaU2_i0_i1m1_i2 + (3.0/2.0)*lambdaU2_i0_i1p1_i2 - 1.0/2.0*lambdaU2_i0_i1p2_i2 + (1.0/12.0)*lambdaU2_i0_i1p3_i2 + tmpFD82);
               const double trK_dD0 = invdx0*(-2.0/3.0*trK_i0m1_i1_i2 + (1.0/12.0)*trK_i0m2_i1_i2 + (2.0/3.0)*trK_i0p1_i1_i2 - 1.0/12.0*trK_i0p2_i1_i2);
               const double trK_dD1 = invdx1*(-2.0/3.0*trK_i0_i1m1_i2 + (1.0/12.0)*trK_i0_i1m2_i2 + (2.0/3.0)*trK_i0_i1p1_i2 - 1.0/12.0*trK_i0_i1p2_i2);
               const double UpwindAlgInputtrK_ddnD0 = invdx0*(tmpFD83 - 3.0/2.0*trK_i0m1_i1_i2 + (1.0/2.0)*trK_i0m2_i1_i2 - 1.0/12.0*trK_i0m3_i1_i2 + (1.0/4.0)*trK_i0p1_i1_i2);
               const double UpwindAlgInputtrK_ddnD1 = invdx1*(tmpFD83 - 3.0/2.0*trK_i0_i1m1_i2 + (1.0/2.0)*trK_i0_i1m2_i2 - 1.0/12.0*trK_i0_i1m3_i2 + (1.0/4.0)*trK_i0_i1p1_i2);
               const double UpwindAlgInputtrK_dupD0 = invdx0*(tmpFD84 - 1.0/4.0*trK_i0m1_i1_i2 + (3.0/2.0)*trK_i0p1_i1_i2 - 1.0/2.0*trK_i0p2_i1_i2 + (1.0/12.0)*trK_i0p3_i1_i2);
               const double UpwindAlgInputtrK_dupD1 = invdx1*(tmpFD84 - 1.0/4.0*trK_i0_i1m1_i2 + (3.0/2.0)*trK_i0_i1p1_i2 - 1.0/2.0*trK_i0_i1p2_i2 + (1.0/12.0)*trK_i0_i1p3_i2);
               const double uu_dD0 = invdx0*(tmpFD85 + tmpFD86 - 2.0/3.0*uu_i0m1_i1_i2 + (2.0/3.0)*uu_i0p1_i1_i2);
               const double uu_dD1 = invdx1*(tmpFD87 + tmpFD88 - 2.0/3.0*uu_i0_i1m1_i2 + (2.0/3.0)*uu_i0_i1p1_i2);
               const double uu_dDD00 = tmpFD16*(-tmpFD85 + tmpFD86 + tmpFD89 + (4.0/3.0)*uu_i0m1_i1_i2 + (4.0/3.0)*uu_i0p1_i1_i2);
               const double uu_dDD01 = tmpFD18*((4.0/9.0)*uu_i0m1_i1m1_i2 - 1.0/18.0*uu_i0m1_i1m2_i2 - 4.0/9.0*uu_i0m1_i1p1_i2 + (1.0/18.0)*uu_i0m1_i1p2_i2 - 1.0/18.0*uu_i0m2_i1m1_i2 + (1.0/144.0)*uu_i0m2_i1m2_i2 + (1.0/18.0)*uu_i0m2_i1p1_i2 - 1.0/144.0*uu_i0m2_i1p2_i2 - 4.0/9.0*uu_i0p1_i1m1_i2 + (1.0/18.0)*uu_i0p1_i1m2_i2 + (4.0/9.0)*uu_i0p1_i1p1_i2 - 1.0/18.0*uu_i0p1_i1p2_i2 + (1.0/18.0)*uu_i0p2_i1m1_i2 - 1.0/144.0*uu_i0p2_i1m2_i2 - 1.0/18.0*uu_i0p2_i1p1_i2 + (1.0/144.0)*uu_i0p2_i1p2_i2);
               const double uu_dDD11 = tmpFD19*(-tmpFD87 + tmpFD88 + tmpFD89 + (4.0/3.0)*uu_i0_i1m1_i2 + (4.0/3.0)*uu_i0_i1p1_i2);
               const double UpwindAlgInputuu_ddnD0 = invdx0*(tmpFD90 - 3.0/2.0*uu_i0m1_i1_i2 + (1.0/2.0)*uu_i0m2_i1_i2 - 1.0/12.0*uu_i0m3_i1_i2 + (1.0/4.0)*uu_i0p1_i1_i2);
               const double UpwindAlgInputuu_ddnD1 = invdx1*(tmpFD90 - 3.0/2.0*uu_i0_i1m1_i2 + (1.0/2.0)*uu_i0_i1m2_i2 - 1.0/12.0*uu_i0_i1m3_i2 + (1.0/4.0)*uu_i0_i1p1_i2);
               const double UpwindAlgInputuu_dupD0 = invdx0*(tmpFD91 - 1.0/4.0*uu_i0m1_i1_i2 + (3.0/2.0)*uu_i0p1_i1_i2 - 1.0/2.0*uu_i0p2_i1_i2 + (1.0/12.0)*uu_i0p3_i1_i2);
               const double UpwindAlgInputuu_dupD1 = invdx1*(tmpFD91 - 1.0/4.0*uu_i0_i1m1_i2 + (3.0/2.0)*uu_i0_i1p1_i2 - 1.0/2.0*uu_i0_i1p2_i2 + (1.0/12.0)*uu_i0_i1p3_i2);
               const double vetU_dD00 = invdx0*(tmpFD92 + tmpFD93 - 2.0/3.0*vetU0_i0m1_i1_i2 + (2.0/3.0)*vetU0_i0p1_i1_i2);
               const double vetU_dD01 = invdx1*(tmpFD94 + tmpFD95 - 2.0/3.0*vetU0_i0_i1m1_i2 + (2.0/3.0)*vetU0_i0_i1p1_i2);
               const double vetU_dD10 = invdx0*(tmpFD96 + tmpFD97 - 2.0/3.0*vetU1_i0m1_i1_i2 + (2.0/3.0)*vetU1_i0p1_i1_i2);
               const double vetU_dD11 = invdx1*(tmpFD98 + tmpFD99 - 2.0/3.0*vetU1_i0_i1m1_i2 + (2.0/3.0)*vetU1_i0_i1p1_i2);
               const double vetU_dD20 = invdx0*(tmpFD100 + tmpFD101 - 2.0/3.0*vetU2_i0m1_i1_i2 + (2.0/3.0)*vetU2_i0p1_i1_i2);
               const double vetU_dD21 = invdx1*(tmpFD102 + tmpFD103 - 2.0/3.0*vetU2_i0_i1m1_i2 + (2.0/3.0)*vetU2_i0_i1p1_i2);
               const double vetU_dDD000 = tmpFD16*(tmpFD104 - tmpFD92 + tmpFD93 + (4.0/3.0)*vetU0_i0m1_i1_i2 + (4.0/3.0)*vetU0_i0p1_i1_i2);
               const double vetU_dDD001 = tmpFD18*((4.0/9.0)*vetU0_i0m1_i1m1_i2 - 1.0/18.0*vetU0_i0m1_i1m2_i2 - 4.0/9.0*vetU0_i0m1_i1p1_i2 + (1.0/18.0)*vetU0_i0m1_i1p2_i2 - 1.0/18.0*vetU0_i0m2_i1m1_i2 + (1.0/144.0)*vetU0_i0m2_i1m2_i2 + (1.0/18.0)*vetU0_i0m2_i1p1_i2 - 1.0/144.0*vetU0_i0m2_i1p2_i2 - 4.0/9.0*vetU0_i0p1_i1m1_i2 + (1.0/18.0)*vetU0_i0p1_i1m2_i2 + (4.0/9.0)*vetU0_i0p1_i1p1_i2 - 1.0/18.0*vetU0_i0p1_i1p2_i2 + (1.0/18.0)*vetU0_i0p2_i1m1_i2 - 1.0/144.0*vetU0_i0p2_i1m2_i2 - 1.0/18.0*vetU0_i0p2_i1p1_i2 + (1.0/144.0)*vetU0_i0p2_i1p2_i2);
               const double vetU_dDD011 = tmpFD19*(tmpFD104 - tmpFD94 + tmpFD95 + (4.0/3.0)*vetU0_i0_i1m1_i2 + (4.0/3.0)*vetU0_i0_i1p1_i2);
               const double vetU_dDD100 = tmpFD16*(tmpFD105 - tmpFD96 + tmpFD97 + (4.0/3.0)*vetU1_i0m1_i1_i2 + (4.0/3.0)*vetU1_i0p1_i1_i2);
               const double vetU_dDD101 = tmpFD18*((4.0/9.0)*vetU1_i0m1_i1m1_i2 - 1.0/18.0*vetU1_i0m1_i1m2_i2 - 4.0/9.0*vetU1_i0m1_i1p1_i2 + (1.0/18.0)*vetU1_i0m1_i1p2_i2 - 1.0/18.0*vetU1_i0m2_i1m1_i2 + (1.0/144.0)*vetU1_i0m2_i1m2_i2 + (1.0/18.0)*vetU1_i0m2_i1p1_i2 - 1.0/144.0*vetU1_i0m2_i1p2_i2 - 4.0/9.0*vetU1_i0p1_i1m1_i2 + (1.0/18.0)*vetU1_i0p1_i1m2_i2 + (4.0/9.0)*vetU1_i0p1_i1p1_i2 - 1.0/18.0*vetU1_i0p1_i1p2_i2 + (1.0/18.0)*vetU1_i0p2_i1m1_i2 - 1.0/144.0*vetU1_i0p2_i1m2_i2 - 1.0/18.0*vetU1_i0p2_i1p1_i2 + (1.0/144.0)*vetU1_i0p2_i1p2_i2);
               const double vetU_dDD111 = tmpFD19*(tmpFD105 - tmpFD98 + tmpFD99 + (4.0/3.0)*vetU1_i0_i1m1_i2 + (4.0/3.0)*vetU1_i0_i1p1_i2);
               const double vetU_dDD200 = tmpFD16*(-tmpFD100 + tmpFD101 + tmpFD106 + (4.0/3.0)*vetU2_i0m1_i1_i2 + (4.0/3.0)*vetU2_i0p1_i1_i2);
               const double vetU_dDD201 = tmpFD18*((4.0/9.0)*vetU2_i0m1_i1m1_i2 - 1.0/18.0*vetU2_i0m1_i1m2_i2 - 4.0/9.0*vetU2_i0m1_i1p1_i2 + (1.0/18.0)*vetU2_i0m1_i1p2_i2 - 1.0/18.0*vetU2_i0m2_i1m1_i2 + (1.0/144.0)*vetU2_i0m2_i1m2_i2 + (1.0/18.0)*vetU2_i0m2_i1p1_i2 - 1.0/144.0*vetU2_i0m2_i1p2_i2 - 4.0/9.0*vetU2_i0p1_i1m1_i2 + (1.0/18.0)*vetU2_i0p1_i1m2_i2 + (4.0/9.0)*vetU2_i0p1_i1p1_i2 - 1.0/18.0*vetU2_i0p1_i1p2_i2 + (1.0/18.0)*vetU2_i0p2_i1m1_i2 - 1.0/144.0*vetU2_i0p2_i1m2_i2 - 1.0/18.0*vetU2_i0p2_i1p1_i2 + (1.0/144.0)*vetU2_i0p2_i1p2_i2);
               const double vetU_dDD211 = tmpFD19*(-tmpFD102 + tmpFD103 + tmpFD106 + (4.0/3.0)*vetU2_i0_i1m1_i2 + (4.0/3.0)*vetU2_i0_i1p1_i2);
               const double UpwindAlgInputvetU_ddnD00 = invdx0*(tmpFD107 - 3.0/2.0*vetU0_i0m1_i1_i2 + (1.0/2.0)*vetU0_i0m2_i1_i2 - 1.0/12.0*vetU0_i0m3_i1_i2 + (1.0/4.0)*vetU0_i0p1_i1_i2);
               const double UpwindAlgInputvetU_ddnD01 = invdx1*(tmpFD107 - 3.0/2.0*vetU0_i0_i1m1_i2 + (1.0/2.0)*vetU0_i0_i1m2_i2 - 1.0/12.0*vetU0_i0_i1m3_i2 + (1.0/4.0)*vetU0_i0_i1p1_i2);
               const double UpwindAlgInputvetU_ddnD10 = invdx0*(tmpFD108 - 3.0/2.0*vetU1_i0m1_i1_i2 + (1.0/2.0)*vetU1_i0m2_i1_i2 - 1.0/12.0*vetU1_i0m3_i1_i2 + (1.0/4.0)*vetU1_i0p1_i1_i2);
               const double UpwindAlgInputvetU_ddnD11 = invdx1*(tmpFD108 - 3.0/2.0*vetU1_i0_i1m1_i2 + (1.0/2.0)*vetU1_i0_i1m2_i2 - 1.0/12.0*vetU1_i0_i1m3_i2 + (1.0/4.0)*vetU1_i0_i1p1_i2);
               const double UpwindAlgInputvetU_ddnD20 = invdx0*(tmpFD109 - 3.0/2.0*vetU2_i0m1_i1_i2 + (1.0/2.0)*vetU2_i0m2_i1_i2 - 1.0/12.0*vetU2_i0m3_i1_i2 + (1.0/4.0)*vetU2_i0p1_i1_i2);
               const double UpwindAlgInputvetU_ddnD21 = invdx1*(tmpFD109 - 3.0/2.0*vetU2_i0_i1m1_i2 + (1.0/2.0)*vetU2_i0_i1m2_i2 - 1.0/12.0*vetU2_i0_i1m3_i2 + (1.0/4.0)*vetU2_i0_i1p1_i2);
               const double UpwindAlgInputvetU_dupD00 = invdx0*(tmpFD110 - 1.0/4.0*vetU0_i0m1_i1_i2 + (3.0/2.0)*vetU0_i0p1_i1_i2 - 1.0/2.0*vetU0_i0p2_i1_i2 + (1.0/12.0)*vetU0_i0p3_i1_i2);
               const double UpwindAlgInputvetU_dupD01 = invdx1*(tmpFD110 - 1.0/4.0*vetU0_i0_i1m1_i2 + (3.0/2.0)*vetU0_i0_i1p1_i2 - 1.0/2.0*vetU0_i0_i1p2_i2 + (1.0/12.0)*vetU0_i0_i1p3_i2);
               const double UpwindAlgInputvetU_dupD10 = invdx0*(tmpFD111 - 1.0/4.0*vetU1_i0m1_i1_i2 + (3.0/2.0)*vetU1_i0p1_i1_i2 - 1.0/2.0*vetU1_i0p2_i1_i2 + (1.0/12.0)*vetU1_i0p3_i1_i2);
               const double UpwindAlgInputvetU_dupD11 = invdx1*(tmpFD111 - 1.0/4.0*vetU1_i0_i1m1_i2 + (3.0/2.0)*vetU1_i0_i1p1_i2 - 1.0/2.0*vetU1_i0_i1p2_i2 + (1.0/12.0)*vetU1_i0_i1p3_i2);
               const double UpwindAlgInputvetU_dupD20 = invdx0*(tmpFD112 - 1.0/4.0*vetU2_i0m1_i1_i2 + (3.0/2.0)*vetU2_i0p1_i1_i2 - 1.0/2.0*vetU2_i0p2_i1_i2 + (1.0/12.0)*vetU2_i0p3_i1_i2);
               const double UpwindAlgInputvetU_dupD21 = invdx1*(tmpFD112 - 1.0/4.0*vetU2_i0_i1m1_i2 + (3.0/2.0)*vetU2_i0_i1p1_i2 - 1.0/2.0*vetU2_i0_i1p2_i2 + (1.0/12.0)*vetU2_i0_i1p3_i2);
               const double vv_dD0 = invdx0*(-2.0/3.0*vv_i0m1_i1_i2 + (1.0/12.0)*vv_i0m2_i1_i2 + (2.0/3.0)*vv_i0p1_i1_i2 - 1.0/12.0*vv_i0p2_i1_i2);
               const double vv_dD1 = invdx1*(-2.0/3.0*vv_i0_i1m1_i2 + (1.0/12.0)*vv_i0_i1m2_i2 + (2.0/3.0)*vv_i0_i1p1_i2 - 1.0/12.0*vv_i0_i1p2_i2);
               const double UpwindControlVectorU0 = vetU0;
               const double UpwindControlVectorU1 = vetU1/xx0;
               /* 
                * NRPy+ Finite Difference Code Generation, Step 2 of 3: Implement upwinding algorithm:
                */
               const double UpWind0 = UPWIND_ALG(UpwindControlVectorU0);
               const double UpWind1 = UPWIND_ALG(UpwindControlVectorU1);
               const double aDD_dupD000 = UpWind0*(-UpwindAlgInputaDD_ddnD000 + UpwindAlgInputaDD_dupD000) + UpwindAlgInputaDD_ddnD000;
               const double aDD_dupD001 = UpWind1*(-UpwindAlgInputaDD_ddnD001 + UpwindAlgInputaDD_dupD001) + UpwindAlgInputaDD_ddnD001;
               const double aDD_dupD010 = UpWind0*(-UpwindAlgInputaDD_ddnD010 + UpwindAlgInputaDD_dupD010) + UpwindAlgInputaDD_ddnD010;
               const double aDD_dupD011 = UpWind1*(-UpwindAlgInputaDD_ddnD011 + UpwindAlgInputaDD_dupD011) + UpwindAlgInputaDD_ddnD011;
               const double aDD_dupD020 = UpWind0*(-UpwindAlgInputaDD_ddnD020 + UpwindAlgInputaDD_dupD020) + UpwindAlgInputaDD_ddnD020;
               const double aDD_dupD021 = UpWind1*(-UpwindAlgInputaDD_ddnD021 + UpwindAlgInputaDD_dupD021) + UpwindAlgInputaDD_ddnD021;
               const double aDD_dupD110 = UpWind0*(-UpwindAlgInputaDD_ddnD110 + UpwindAlgInputaDD_dupD110) + UpwindAlgInputaDD_ddnD110;
               const double aDD_dupD111 = UpWind1*(-UpwindAlgInputaDD_ddnD111 + UpwindAlgInputaDD_dupD111) + UpwindAlgInputaDD_ddnD111;
               const double aDD_dupD120 = UpWind0*(-UpwindAlgInputaDD_ddnD120 + UpwindAlgInputaDD_dupD120) + UpwindAlgInputaDD_ddnD120;
               const double aDD_dupD121 = UpWind1*(-UpwindAlgInputaDD_ddnD121 + UpwindAlgInputaDD_dupD121) + UpwindAlgInputaDD_ddnD121;
               const double aDD_dupD220 = UpWind0*(-UpwindAlgInputaDD_ddnD220 + UpwindAlgInputaDD_dupD220) + UpwindAlgInputaDD_ddnD220;
               const double aDD_dupD221 = UpWind1*(-UpwindAlgInputaDD_ddnD221 + UpwindAlgInputaDD_dupD221) + UpwindAlgInputaDD_ddnD221;
               const double alpha_dupD0 = UpWind0*(-UpwindAlgInputalpha_ddnD0 + UpwindAlgInputalpha_dupD0) + UpwindAlgInputalpha_ddnD0;
               const double alpha_dupD1 = UpWind1*(-UpwindAlgInputalpha_ddnD1 + UpwindAlgInputalpha_dupD1) + UpwindAlgInputalpha_ddnD1;
               const double betU_dupD00 = UpWind0*(-UpwindAlgInputbetU_ddnD00 + UpwindAlgInputbetU_dupD00) + UpwindAlgInputbetU_ddnD00;
               const double betU_dupD01 = UpWind1*(-UpwindAlgInputbetU_ddnD01 + UpwindAlgInputbetU_dupD01) + UpwindAlgInputbetU_ddnD01;
               const double betU_dupD10 = UpWind0*(-UpwindAlgInputbetU_ddnD10 + UpwindAlgInputbetU_dupD10) + UpwindAlgInputbetU_ddnD10;
               const double betU_dupD11 = UpWind1*(-UpwindAlgInputbetU_ddnD11 + UpwindAlgInputbetU_dupD11) + UpwindAlgInputbetU_ddnD11;
               const double betU_dupD20 = UpWind0*(-UpwindAlgInputbetU_ddnD20 + UpwindAlgInputbetU_dupD20) + UpwindAlgInputbetU_ddnD20;
               const double betU_dupD21 = UpWind1*(-UpwindAlgInputbetU_ddnD21 + UpwindAlgInputbetU_dupD21) + UpwindAlgInputbetU_ddnD21;
               const double cf_dupD0 = UpWind0*(-UpwindAlgInputcf_ddnD0 + UpwindAlgInputcf_dupD0) + UpwindAlgInputcf_ddnD0;
               const double cf_dupD1 = UpWind1*(-UpwindAlgInputcf_ddnD1 + UpwindAlgInputcf_dupD1) + UpwindAlgInputcf_ddnD1;
               const double hDD_dupD000 = UpWind0*(-UpwindAlgInputhDD_ddnD000 + UpwindAlgInputhDD_dupD000) + UpwindAlgInputhDD_ddnD000;
               const double hDD_dupD001 = UpWind1*(-UpwindAlgInputhDD_ddnD001 + UpwindAlgInputhDD_dupD001) + UpwindAlgInputhDD_ddnD001;
               const double hDD_dupD010 = UpWind0*(-UpwindAlgInputhDD_ddnD010 + UpwindAlgInputhDD_dupD010) + UpwindAlgInputhDD_ddnD010;
               const double hDD_dupD011 = UpWind1*(-UpwindAlgInputhDD_ddnD011 + UpwindAlgInputhDD_dupD011) + UpwindAlgInputhDD_ddnD011;
               const double hDD_dupD020 = UpWind0*(-UpwindAlgInputhDD_ddnD020 + UpwindAlgInputhDD_dupD020) + UpwindAlgInputhDD_ddnD020;
               const double hDD_dupD021 = UpWind1*(-UpwindAlgInputhDD_ddnD021 + UpwindAlgInputhDD_dupD021) + UpwindAlgInputhDD_ddnD021;
               const double hDD_dupD110 = UpWind0*(-UpwindAlgInputhDD_ddnD110 + UpwindAlgInputhDD_dupD110) + UpwindAlgInputhDD_ddnD110;
               const double hDD_dupD111 = UpWind1*(-UpwindAlgInputhDD_ddnD111 + UpwindAlgInputhDD_dupD111) + UpwindAlgInputhDD_ddnD111;
               const double hDD_dupD120 = UpWind0*(-UpwindAlgInputhDD_ddnD120 + UpwindAlgInputhDD_dupD120) + UpwindAlgInputhDD_ddnD120;
               const double hDD_dupD121 = UpWind1*(-UpwindAlgInputhDD_ddnD121 + UpwindAlgInputhDD_dupD121) + UpwindAlgInputhDD_ddnD121;
               const double hDD_dupD220 = UpWind0*(-UpwindAlgInputhDD_ddnD220 + UpwindAlgInputhDD_dupD220) + UpwindAlgInputhDD_ddnD220;
               const double hDD_dupD221 = UpWind1*(-UpwindAlgInputhDD_ddnD221 + UpwindAlgInputhDD_dupD221) + UpwindAlgInputhDD_ddnD221;
               const double lambdaU_dupD00 = UpWind0*(-UpwindAlgInputlambdaU_ddnD00 + UpwindAlgInputlambdaU_dupD00) + UpwindAlgInputlambdaU_ddnD00;
               const double lambdaU_dupD01 = UpWind1*(-UpwindAlgInputlambdaU_ddnD01 + UpwindAlgInputlambdaU_dupD01) + UpwindAlgInputlambdaU_ddnD01;
               const double lambdaU_dupD10 = UpWind0*(-UpwindAlgInputlambdaU_ddnD10 + UpwindAlgInputlambdaU_dupD10) + UpwindAlgInputlambdaU_ddnD10;
               const double lambdaU_dupD11 = UpWind1*(-UpwindAlgInputlambdaU_ddnD11 + UpwindAlgInputlambdaU_dupD11) + UpwindAlgInputlambdaU_ddnD11;
               const double lambdaU_dupD20 = UpWind0*(-UpwindAlgInputlambdaU_ddnD20 + UpwindAlgInputlambdaU_dupD20) + UpwindAlgInputlambdaU_ddnD20;
               const double lambdaU_dupD21 = UpWind1*(-UpwindAlgInputlambdaU_ddnD21 + UpwindAlgInputlambdaU_dupD21) + UpwindAlgInputlambdaU_ddnD21;
               const double trK_dupD0 = UpWind0*(-UpwindAlgInputtrK_ddnD0 + UpwindAlgInputtrK_dupD0) + UpwindAlgInputtrK_ddnD0;
               const double trK_dupD1 = UpWind1*(-UpwindAlgInputtrK_ddnD1 + UpwindAlgInputtrK_dupD1) + UpwindAlgInputtrK_ddnD1;
               const double uu_dupD0 = UpWind0*(-UpwindAlgInputuu_ddnD0 + UpwindAlgInputuu_dupD0) + UpwindAlgInputuu_ddnD0;
               const double uu_dupD1 = UpWind1*(-UpwindAlgInputuu_ddnD1 + UpwindAlgInputuu_dupD1) + UpwindAlgInputuu_ddnD1;
               const double vetU_dupD00 = UpWind0*(-UpwindAlgInputvetU_ddnD00 + UpwindAlgInputvetU_dupD00) + UpwindAlgInputvetU_ddnD00;
               const double vetU_dupD01 = UpWind1*(-UpwindAlgInputvetU_ddnD01 + UpwindAlgInputvetU_dupD01) + UpwindAlgInputvetU_ddnD01;
               const double vetU_dupD10 = UpWind0*(-UpwindAlgInputvetU_ddnD10 + UpwindAlgInputvetU_dupD10) + UpwindAlgInputvetU_ddnD10;
               const double vetU_dupD11 = UpWind1*(-UpwindAlgInputvetU_ddnD11 + UpwindAlgInputvetU_dupD11) + UpwindAlgInputvetU_ddnD11;
               const double vetU_dupD20 = UpWind0*(-UpwindAlgInputvetU_ddnD20 + UpwindAlgInputvetU_dupD20) + UpwindAlgInputvetU_ddnD20;
               const double vetU_dupD21 = UpWind1*(-UpwindAlgInputvetU_ddnD21 + UpwindAlgInputvetU_dupD21) + UpwindAlgInputvetU_ddnD21;
               /* 
                * NRPy+ Finite Difference Code Generation, Step 3 of 3: Evaluate SymPy expressions and write to main memory:
                */
               const double tmp0 = 2*vetU_dD00;
               const double tmp1 = alpha*trK;
               const double tmp2 = 1.0/xx0;
               const double tmp3 = tmp2*vetU1;
               const double tmp4 = pow(xx0, 2);
               const double tmp5 = 1.0/tmp4;
               const double tmp6 = tmp5*vetU1;
               const double tmp7 = -tmp6;
               const double tmp8 = tmp2*vetU_dD10 + tmp7;
               const double tmp9 = 2*xx0;
               const double tmp10 = aDD01*tmp9;
               const double tmp11 = sin(xx1);
               const double tmp12 = 1.0/tmp11;
               const double tmp13 = tmp12*tmp2;
               const double tmp14 = tmp12*tmp5;
               const double tmp15 = -tmp14*vetU2;
               const double tmp16 = tmp13*vetU_dD20 + tmp15;
               const double tmp17 = aDD02*tmp11;
               const double tmp18 = tmp17*tmp9;
               const double tmp19 = tmp2*vetU_dD11;
               const double tmp20 = 2*tmp2;
               const double tmp21 = tmp20*vetU0;
               const double tmp22 = cos(xx1);
               const double tmp23 = tmp22*vetU1;
               const double tmp24 = tmp13*tmp23;
               const double tmp25 = tmp19 + tmp21 + tmp24 + vetU_dD00;
               const double tmp26 = (2.0/3.0)*tmp25;
               const double tmp27 = 2*hDD01;
               const double tmp28 = pow(tmp11, 2);
               const double tmp29 = pow(xx0, 4);
               const double tmp30 = tmp28*tmp29;
               const double tmp31 = hDD02*hDD12;
               const double tmp32 = hDD00 + 1;
               const double tmp33 = pow(hDD12, 2)*tmp30;
               const double tmp34 = hDD11*tmp4;
               const double tmp35 = tmp34 + tmp4;
               const double tmp36 = tmp28*tmp4;
               const double tmp37 = pow(hDD02, 2)*tmp36;
               const double tmp38 = hDD22*tmp36;
               const double tmp39 = tmp36 + tmp38;
               const double tmp40 = pow(hDD01, 2)*tmp4;
               const double tmp41 = tmp32*tmp39;
               const double tmp42 = tmp27*tmp30*tmp31 - tmp32*tmp33 - tmp35*tmp37 + tmp35*tmp41 - tmp39*tmp40;
               const double tmp43 = 1.0/tmp42;
               const double tmp44 = hDD02*tmp11;
               const double tmp45 = tmp4*tmp44;
               const double tmp46 = hDD12*tmp11;
               const double tmp47 = tmp4*tmp46;
               const double tmp48 = hDD01*tmp45 - tmp32*tmp47;
               const double tmp49 = tmp43*tmp48;
               const double tmp50 = aDD01*xx0;
               const double tmp51 = pow(xx0, 3);
               const double tmp52 = tmp44*xx0;
               const double tmp53 = hDD01*tmp46*tmp51 - tmp35*tmp52;
               const double tmp54 = tmp43*tmp53;
               const double tmp55 = tmp32*tmp35 - tmp40;
               const double tmp56 = tmp43*tmp55;
               const double tmp57 = tmp17*xx0;
               const double tmp58 = alpha*tmp18;
               const double tmp59 = tmp28*tmp51;
               const double tmp60 = hDD01*xx0;
               const double tmp61 = tmp31*tmp59 - tmp39*tmp60;
               const double tmp62 = tmp43*tmp61;
               const double tmp63 = -tmp37 + tmp41;
               const double tmp64 = tmp43*tmp63;
               const double tmp65 = alpha*tmp10;
               const double tmp66 = tmp54*tmp57;
               const double tmp67 = tmp50*tmp62;
               const double tmp68 = -tmp33 + tmp35*tmp39;
               const double tmp69 = tmp43*tmp68;
               const double tmp70 = aDD00*tmp69;
               const double tmp71 = 2*alpha;
               const double tmp72 = aDD00*tmp71;
               const double tmp73 = pow(uu_dD0, 2);
               const double tmp74 = pow(cf, 2);
               const double tmp75 = 1.0/tmp74;
               const double tmp76 = pow(scalarmass, 2);
               const double tmp77 = pot1_on*tmp76;
               const double tmp78 = tmp77*pow(uu, 2);
               const double tmp79 = uu/fa;
               const double tmp80 = pot2_on*tmp76;
               const double tmp81 = pow(fa, 2)*tmp80*(1.0 - cos(tmp79));
               const double tmp82 = tmp75*(0.5*tmp78 + tmp81);
               const double tmp83 = tmp32*tmp75;
               const double tmp84 = pow(vv, 2);
               const double tmp85 = uu_dD0*uu_dD1;
               const double tmp86 = 2*tmp62;
               const double tmp87 = pow(uu_dD1, 2);
               const double tmp88 = tmp64*tmp74;
               const double tmp89 = tmp87*tmp88;
               const double tmp90 = tmp69*tmp74;
               const double tmp91 = tmp73*tmp90;
               const double tmp92 = -0.5*tmp74*tmp85*tmp86 + 0.5*tmp84 - 0.5*tmp89 - 0.5*tmp91;
               const double tmp93 = tmp62*tmp74;
               const double tmp94 = -1.5*tmp78 - 3.0*tmp81 + 1.5*tmp84 - 1.0*tmp85*tmp93 - 0.5*tmp89 - 0.5*tmp91;
               const double tmp95 = (1.0/3.0)*tmp94;
               const double tmp96 = 8*M_PI*alpha*tmp74;
               const double tmp97 = tmp28*tmp9;
               const double tmp98 = hDD22*tmp28;
               const double tmp99 = tmp9*tmp98;
               const double tmp100 = hDD_dD220*tmp36;
               const double tmp101 = -tmp100 - tmp97 - tmp99;
               const double tmp102 = (1.0/2.0)*tmp62;
               const double tmp103 = tmp101*tmp102;
               const double tmp104 = 2*xx1;
               const double tmp105 = sin(tmp104);
               const double tmp106 = tmp105*tmp4;
               const double tmp107 = hDD_dD221*tmp36;
               const double tmp108 = tmp11*tmp4;
               const double tmp109 = tmp108*tmp22;
               const double tmp110 = 2*tmp109;
               const double tmp111 = hDD22*tmp110;
               const double tmp112 = -tmp106 - tmp107 - tmp111;
               const double tmp113 = (1.0/2.0)*tmp64;
               const double tmp114 = tmp112*tmp113;
               const double tmp115 = -tmp103 - tmp114;
               const double tmp116 = alpha_dD1*tmp115;
               const double tmp117 = tmp102*tmp112;
               const double tmp118 = (1.0/2.0)*tmp69;
               const double tmp119 = tmp101*tmp118;
               const double tmp120 = -tmp117 - tmp119;
               const double tmp121 = alpha_dD0*tmp120;
               const double tmp122 = 1.0/cf;
               const double tmp123 = (1.0/2.0)*tmp122;
               const double tmp124 = cf_dD1*tmp123;
               const double tmp125 = cf_dD0*tmp123;
               const double tmp126 = tmp28*xx0;
               const double tmp127 = hDD12*xx0;
               const double tmp128 = (1.0/2.0)*tmp105;
               const double tmp129 = lambdaU2*tmp128;
               const double tmp130 = lambdaU0*tmp2;
               const double tmp131 = 1.0/tmp28;
               const double tmp132 = tmp128*tmp131;
               const double tmp133 = lambdaU1*tmp2;
               const double tmp134 = tmp130 + tmp132*tmp133;
               const double tmp135 = pow(tmp11, 3);
               const double tmp136 = tmp135*tmp4;
               const double tmp137 = hDD_dD020*tmp136;
               const double tmp138 = hDD_dD120*tmp11;
               const double tmp139 = 2*hDD02*tmp136 + tmp106*tmp46;
               const double tmp140 = tmp139*tmp2;
               const double tmp141 = -tmp140;
               const double tmp142 = (1.0/2.0)*tmp54;
               const double tmp143 = tmp100 + tmp99;
               const double tmp144 = tmp143*tmp2;
               const double tmp145 = hDD02*tmp135*tmp9;
               const double tmp146 = hDD_dD020*tmp11;
               const double tmp147 = tmp146*xx0 + tmp44;
               const double tmp148 = tmp46*tmp9;
               const double tmp149 = hDD_dD120*tmp108;
               const double tmp150 = tmp148 + tmp149;
               const double tmp151 = tmp105*tmp150;
               const double tmp152 = hDD02*tmp22;
               const double tmp153 = cos(tmp104);
               const double tmp154 = 2*tmp47;
               const double tmp155 = tmp152*xx0;
               const double tmp156 = hDD_dD021*tmp11;
               const double tmp157 = tmp156*xx0;
               const double tmp158 = tmp155 + tmp157;
               const double tmp159 = tmp22*tmp4;
               const double tmp160 = hDD12*tmp159;
               const double tmp161 = hDD_dD121*tmp108;
               const double tmp162 = tmp160 + tmp161;
               const double tmp163 = tmp105*tmp162;
               const double tmp164 = tmp105*tmp131;
               const double tmp165 = (1.0/2.0)*tmp49;
               const double tmp166 = -tmp132*tmp139;
               const double tmp167 = tmp46*xx0;
               const double tmp168 = tmp12*tmp128*xx0;
               const double tmp169 = -hDD02*tmp168 - tmp167;
               const double tmp170 = tmp158 + tmp169;
               const double tmp171 = tmp106*tmp12;
               const double tmp172 = (1.0/2.0)*hDD12;
               const double tmp173 = tmp162 - tmp171*tmp172 + tmp45;
               const double tmp174 = tmp105*tmp173;
               const double tmp175 = hDD22*tmp106;
               const double tmp176 = tmp107 + tmp111;
               const double tmp177 = -tmp175 + tmp176;
               const double tmp178 = tmp177*tmp2;
               const double tmp179 = tmp11*xx0;
               const double tmp180 = 4*tmp22;
               const double tmp181 = hDD22*tmp179*tmp180 + hDD_dD220*tmp110 + hDD_dD221*tmp97 + hDD_dDD2201*tmp36;
               const double tmp182 = pow(tmp11, 4);
               const double tmp183 = hDD_dD220*tmp51;
               const double tmp184 = hDD00*tmp126 - hDD22*tmp126 + tmp128*tmp60;
               const double tmp185 = hDD01*tmp36 + tmp128*tmp34 - 1.0/2.0*tmp175;
               const double tmp186 = tmp105*tmp185;
               const double tmp187 = (1.0/2.0)*tmp56;
               const double tmp188 = -tmp178;
               const double tmp189 = tmp176*tmp2;
               const double tmp190 = hDD_dD220*tmp106;
               const double tmp191 = 2*tmp36;
               const double tmp192 = 2*pow(tmp22, 2);
               const double tmp193 = tmp131*tmp153;
               const double tmp194 = 1.0/tmp135;
               const double tmp195 = tmp105*tmp194*tmp22;
               const double tmp196 = -tmp193 + tmp195;
               const double tmp197 = tmp196*tmp38;
               const double tmp198 = tmp193 - tmp195;
               const double tmp199 = -tmp198*tmp38;
               const double tmp200 = tmp101*tmp142 + tmp112*tmp165;
               const double tmp201 = (1.0/2.0)*tmp143 + (1.0/2.0)*tmp97;
               const double tmp202 = tmp201*tmp54;
               const double tmp203 = (1.0/2.0)*tmp150 - 1.0/2.0*tmp155 - 1.0/2.0*tmp157;
               const double tmp204 = tmp203*tmp62;
               const double tmp205 = tmp202 + tmp204;
               const double tmp206 = tmp201*tmp49;
               const double tmp207 = tmp203*tmp64;
               const double tmp208 = tmp206 + tmp207;
               const double tmp209 = tmp208*tmp47;
               const double tmp210 = -tmp2;
               const double tmp211 = tmp201*tmp56 + tmp203*tmp49;
               const double tmp212 = tmp210 + tmp211;
               const double tmp213 = tmp212*tmp39;
               const double tmp214 = tmp205*tmp52 + tmp209 + tmp213;
               const double tmp215 = tmp200*tmp214;
               const double tmp216 = 3*tmp54;
               const double tmp217 = tmp212*tmp214;
               const double tmp218 = 3*tmp69;
               const double tmp219 = tmp106 + tmp176;
               const double tmp220 = tmp165*tmp219;
               const double tmp221 = -tmp148 - tmp149 + tmp158;
               const double tmp222 = tmp102*tmp221;
               const double tmp223 = tmp220 + tmp222;
               const double tmp224 = tmp223*tmp47;
               const double tmp225 = tmp142*tmp219;
               const double tmp226 = tmp118*tmp221;
               const double tmp227 = tmp225 + tmp226;
               const double tmp228 = tmp142*tmp221 + tmp187*tmp219;
               const double tmp229 = -tmp132 + tmp228;
               const double tmp230 = tmp229*tmp39;
               const double tmp231 = tmp224 + tmp227*tmp52 + tmp230;
               const double tmp232 = tmp200*tmp231;
               const double tmp233 = 3*tmp49;
               const double tmp234 = tmp214*tmp229;
               const double tmp235 = 3*tmp62;
               const double tmp236 = tmp212*tmp231;
               const double tmp237 = tmp229*tmp231;
               const double tmp238 = 3*tmp64;
               const double tmp239 = tmp200*tmp39;
               const double tmp240 = tmp103 + tmp114;
               const double tmp241 = tmp128 + tmp240;
               const double tmp242 = tmp117 + tmp119;
               const double tmp243 = tmp126 + tmp242;
               const double tmp244 = tmp239 + tmp241*tmp47 + tmp243*tmp52;
               const double tmp245 = 3*tmp56;
               const double tmp246 = tmp212*tmp244;
               const double tmp247 = tmp229*tmp244;
               const double tmp248 = tmp205*tmp214;
               const double tmp249 = tmp200*tmp52 + tmp241*tmp60 + tmp243*tmp32;
               const double tmp250 = tmp205*tmp249;
               const double tmp251 = tmp214*tmp227;
               const double tmp252 = tmp227*tmp249;
               const double tmp253 = tmp223*tmp231;
               const double tmp254 = tmp200*tmp47 + tmp241*tmp35 + tmp243*tmp60;
               const double tmp255 = tmp223*tmp254;
               const double tmp256 = tmp208*tmp231;
               const double tmp257 = tmp208*tmp254;
               const double tmp258 = 2*tmp243;
               const double tmp259 = 2*tmp241;
               const double tmp260 = tmp205*tmp32;
               const double tmp261 = tmp208*tmp60 + tmp212*tmp52 + tmp260;
               const double tmp262 = tmp205*tmp261;
               const double tmp263 = -hDD_dD001 + hDD_dD010*tmp9 + tmp27;
               const double tmp264 = 2*tmp44;
               const double tmp265 = tmp146*tmp9 + tmp264;
               const double tmp266 = hDD_dD000*tmp142 + tmp165*tmp263 + tmp187*tmp265;
               const double tmp267 = tmp165*tmp265;
               const double tmp268 = hDD_dD000*tmp102;
               const double tmp269 = tmp113*tmp263;
               const double tmp270 = tmp267 + tmp268 + tmp269;
               const double tmp271 = tmp142*tmp265;
               const double tmp272 = hDD_dD000*tmp118;
               const double tmp273 = tmp102*tmp263;
               const double tmp274 = tmp271 + tmp272 + tmp273;
               const double tmp275 = tmp266*tmp39 + tmp270*tmp47 + tmp274*tmp52;
               const double tmp276 = tmp205*tmp275;
               const double tmp277 = tmp227*tmp261;
               const double tmp278 = tmp227*tmp275;
               const double tmp279 = tmp243*tmp261;
               const double tmp280 = tmp205*tmp60 + tmp208*tmp35 + tmp212*tmp47;
               const double tmp281 = tmp223*tmp280;
               const double tmp282 = hDD11*tmp9;
               const double tmp283 = hDD_dD110*tmp4;
               const double tmp284 = tmp282 + tmp283;
               const double tmp285 = tmp284 + tmp9;
               const double tmp286 = tmp150 + tmp158;
               const double tmp287 = hDD_dD001*tmp142 + tmp165*tmp285 + tmp187*tmp286;
               const double tmp288 = hDD_dD001*tmp102;
               const double tmp289 = tmp165*tmp286;
               const double tmp290 = tmp113*tmp285;
               const double tmp291 = tmp288 + tmp289 + tmp290;
               const double tmp292 = tmp210 + tmp291;
               const double tmp293 = hDD_dD001*tmp118;
               const double tmp294 = tmp102*tmp285;
               const double tmp295 = tmp142*tmp286;
               const double tmp296 = tmp293 + tmp294 + tmp295;
               const double tmp297 = tmp287*tmp39 + tmp292*tmp47 + tmp296*tmp52;
               const double tmp298 = tmp223*tmp297;
               const double tmp299 = tmp208*tmp280;
               const double tmp300 = tmp208*tmp297;
               const double tmp301 = tmp223*tmp60 + tmp227*tmp32 + tmp229*tmp52;
               const double tmp302 = tmp205*tmp301;
               const double tmp303 = tmp205*tmp297;
               const double tmp304 = tmp223*tmp35;
               const double tmp305 = tmp229*tmp47;
               const double tmp306 = tmp227*tmp60 + tmp304 + tmp305;
               const double tmp307 = tmp208*tmp306;
               const double tmp308 = hDD_dD111*tmp4;
               const double tmp309 = 2*tmp160 + 2*tmp161;
               const double tmp310 = hDD_dD011*tmp9 - tmp282 - tmp283 - tmp9;
               const double tmp311 = tmp142*tmp310 + tmp165*tmp308 + tmp187*tmp309;
               const double tmp312 = tmp165*tmp309;
               const double tmp313 = tmp113*tmp308;
               const double tmp314 = tmp102*tmp310;
               const double tmp315 = tmp312 + tmp313 + tmp314;
               const double tmp316 = tmp102*tmp308;
               const double tmp317 = tmp142*tmp309;
               const double tmp318 = tmp118*tmp310;
               const double tmp319 = tmp316 + tmp317 + tmp318;
               const double tmp320 = tmp319 + xx0;
               const double tmp321 = tmp311*tmp39 + tmp315*tmp47 + tmp320*tmp52;
               const double tmp322 = tmp208*tmp321;
               const double tmp323 = tmp223*tmp306;
               const double tmp324 = tmp223*tmp321;
               const double tmp325 = tmp227*tmp301;
               const double tmp326 = tmp227*tmp297;
               const double tmp327 = tmp241*tmp280;
               const double tmp328 = tmp241*tmp306;
               const double tmp329 = tmp243*tmp301;
               const double tmp330 = tmp44*tmp9;
               const double tmp331 = tmp212*tmp54;
               const double tmp332 = tmp229*tmp49;
               const double tmp333 = tmp287*tmp62;
               const double tmp334 = tmp113*tmp311 + tmp118*tmp266 + tmp187*tmp200 + tmp331 + tmp332 + tmp333;
               const double tmp335 = tmp223*tmp49;
               const double tmp336 = tmp208*tmp54;
               const double tmp337 = tmp292*tmp62;
               const double tmp338 = tmp113*tmp315 + tmp118*tmp270 + tmp187*tmp241 + tmp335 + tmp336 + tmp337;
               const double tmp339 = tmp205*tmp54;
               const double tmp340 = tmp227*tmp49;
               const double tmp341 = tmp296*tmp62;
               const double tmp342 = tmp113*tmp320 + tmp118*tmp274 + tmp187*tmp243 + tmp339 + tmp340 + tmp341;
               const double tmp343 = alpha*(-hDD02*lambdaU2*tmp126 - tmp102*(-tmp143*tmp164 - 3*tmp178 + tmp181) - tmp102*(tmp181 + tmp188 - 2*tmp189 - tmp190) - tmp113*(hDD22*(-tmp191 + tmp192*tmp4) + 4*hDD_dD221*tmp109 + hDD_dDD2211*tmp36 - tmp164*tmp176 - tmp164*tmp177 + tmp183*tmp28 + tmp197 + tmp199) - tmp118*(hDD_dD220*tmp97 + hDD_dDD2200*tmp36 - 2*tmp144 + 4*tmp98) - tmp127*tmp129 + tmp134*tmp39 - tmp142*(tmp106*tmp138 + 2*tmp137 + tmp141) - tmp142*(-3*tmp140 + tmp145 + tmp147*tmp97 + tmp151) - tmp165*(tmp166 + tmp170*tmp97 + tmp174) - tmp165*(-3.0/2.0*tmp139*tmp164 + 4*tmp152*tmp36 + tmp153*tmp154 + tmp158*tmp97 + tmp163) - tmp187*(tmp128*tmp177 + tmp182*tmp183 + tmp184*tmp97 + tmp186) + tmp200*tmp244*tmp245 + tmp215*tmp216 + tmp216*tmp246 + tmp217*tmp218 + tmp232*tmp233 + tmp233*tmp247 + tmp234*tmp235 + tmp235*tmp236 + tmp237*tmp238 + tmp334*(2*tmp239 + tmp243*tmp330 + tmp259*tmp47) + tmp338*(2*tmp224 + tmp227*tmp330 + 2*tmp230) + tmp342*(tmp205*tmp330 + 2*tmp209 + 2*tmp213) + tmp49*(2*tmp251 + tmp252) + tmp49*(2*tmp253 + tmp255) + tmp49*(tmp258*tmp297 + tmp329) + tmp49*(tmp259*tmp321 + tmp328) + tmp54*(2*tmp248 + tmp250) + tmp54*(2*tmp256 + tmp257) + tmp54*(tmp258*tmp275 + tmp279) + tmp54*(tmp259*tmp297 + tmp327) + tmp56*(tmp214*tmp258 + tmp243*tmp249) + tmp56*(tmp231*tmp259 + tmp241*tmp254) + tmp62*(tmp277 + 2*tmp278) + tmp62*(tmp281 + 2*tmp298) + tmp62*(tmp302 + 2*tmp303) + tmp62*(tmp307 + 2*tmp322) + tmp64*(tmp323 + 2*tmp324) + tmp64*(tmp325 + 2*tmp326) + tmp69*(tmp262 + 2*tmp276) + tmp69*(tmp299 + 2*tmp300)) - tmp116 - tmp121 - tmp71*(-tmp115*tmp124 - tmp120*tmp125);
               const double tmp344 = cf_dD0*tmp122;
               const double tmp345 = alpha_dD0*tmp344;
               const double tmp346 = pow(cf_dD0, 2);
               const double tmp347 = alpha*tmp75;
               const double tmp348 = -tmp267 - tmp268 - tmp269;
               const double tmp349 = alpha_dD1*tmp348;
               const double tmp350 = -tmp271 - tmp272 - tmp273;
               const double tmp351 = alpha_dD0*tmp350;
               const double tmp352 = 2*hDD_dD010;
               const double tmp353 = hDD_dD001 - tmp27;
               const double tmp354 = hDD_dDD0001 - tmp2*tmp353;
               const double tmp355 = tmp2*tmp44;
               const double tmp356 = tmp147*tmp2;
               const double tmp357 = 2*hDD_dD011;
               const double tmp358 = hDD_dD000*xx0;
               const double tmp359 = hDD_dD011*xx0;
               const double tmp360 = hDD00*xx0 - hDD11*xx0 + tmp359;
               const double tmp361 = tmp2*tmp360;
               const double tmp362 = tmp358 - 2*tmp361;
               const double tmp363 = hDD_dD010*xx0;
               const double tmp364 = hDD01 + tmp363;
               const double tmp365 = tmp2*tmp364;
               const double tmp366 = tmp105*tmp12;
               const double tmp367 = hDD02*tmp366;
               const double tmp368 = tmp170*tmp2;
               const double tmp369 = -2*tmp368;
               const double tmp370 = tmp184*tmp2;
               const double tmp371 = hDD_dD000*tmp126;
               const double tmp372 = -2*tmp370 + tmp371;
               const double tmp373 = tmp158*tmp2;
               const double tmp374 = tmp169*tmp2;
               const double tmp375 = -2*tmp374;
               const double tmp376 = tmp261*tmp274;
               const double tmp377 = tmp261*tmp296;
               const double tmp378 = tmp274*tmp32;
               const double tmp379 = tmp266*tmp52 + tmp270*tmp60 + tmp378;
               const double tmp380 = tmp205*tmp379;
               const double tmp381 = tmp296*tmp32;
               const double tmp382 = tmp287*tmp52 + tmp292*tmp60 + tmp381;
               const double tmp383 = tmp205*tmp382;
               const double tmp384 = tmp296*tmp379;
               const double tmp385 = tmp274*tmp382;
               const double tmp386 = tmp296*tmp382;
               const double tmp387 = tmp208*tmp301;
               const double tmp388 = tmp212*tmp249;
               const double tmp389 = tmp270*tmp280;
               const double tmp390 = 2*tmp270;
               const double tmp391 = tmp214*tmp266;
               const double tmp392 = 2*tmp266;
               const double tmp393 = tmp214*tmp287;
               const double tmp394 = tmp249*tmp287;
               const double tmp395 = tmp280*tmp292;
               const double tmp396 = tmp292*tmp301;
               const double tmp397 = tmp212*tmp261;
               const double tmp398 = tmp212*tmp275;
               const double tmp399 = tmp212*tmp301;
               const double tmp400 = tmp212*tmp297;
               const double tmp401 = tmp261*tmp287;
               const double tmp402 = tmp275*tmp287;
               const double tmp403 = tmp266*tmp297;
               const double tmp404 = tmp287*tmp301;
               const double tmp405 = tmp287*tmp297;
               const double tmp406 = tmp266*tmp47 + tmp270*tmp35 + tmp274*tmp60;
               const double tmp407 = tmp208*tmp406;
               const double tmp408 = tmp208*tmp382;
               const double tmp409 = tmp311*tmp52 + tmp315*tmp60 + tmp32*tmp320;
               const double tmp410 = tmp208*tmp409;
               const double tmp411 = tmp287*tmp47;
               const double tmp412 = tmp292*tmp35;
               const double tmp413 = tmp296*tmp60 + tmp411 + tmp412;
               const double tmp414 = tmp208*tmp413;
               const double tmp415 = tmp292*tmp406;
               const double tmp416 = tmp292*tmp382;
               const double tmp417 = tmp270*tmp413;
               const double tmp418 = tmp292*tmp409;
               const double tmp419 = tmp292*tmp413;
               const double tmp420 = hDD01*tmp9;
               const double tmp421 = alpha*(hDD01*lambdaU_dD10 + hDD02*lambdaU_dD20 - hDD_dDD0000*tmp118 + lambdaU_dD00*tmp32 - tmp102*(-tmp352 + tmp354) - tmp102*(tmp2*tmp27 + tmp354 - 2*tmp365) - tmp113*(hDD_dDD0011 - tmp357 + tmp362) - tmp142*(-2*tmp146 + tmp2*tmp264) - tmp142*(4*tmp355 - 2*tmp356) - tmp165*(tmp367 + tmp369) - tmp165*(tmp367 - 2*tmp373 + tmp375) - tmp187*(tmp128*tmp353 + tmp372) + tmp216*tmp376 + tmp216*tmp380 + tmp218*tmp274*tmp379 + tmp233*tmp377 + tmp233*tmp383 + tmp235*tmp384 + tmp235*tmp385 + tmp238*tmp386 + tmp245*tmp262 + tmp334*(tmp208*tmp420 + tmp212*tmp330 + 2*tmp260) + tmp338*(tmp287*tmp330 + tmp292*tmp420 + 2*tmp381) + tmp342*(tmp266*tmp330 + tmp270*tmp420 + 2*tmp378) + tmp49*(tmp393 + 2*tmp394) + tmp49*(tmp395 + 2*tmp396) + tmp49*(2*tmp399 + tmp400) + tmp49*(2*tmp410 + tmp414) + tmp54*(2*tmp397 + tmp398) + tmp54*(tmp407 + 2*tmp408) + tmp54*(tmp249*tmp392 + tmp391) + tmp54*(tmp301*tmp390 + tmp389) + tmp56*(tmp217 + 2*tmp388) + tmp56*(tmp299 + 2*tmp387) + tmp62*(2*tmp401 + tmp402) + tmp62*(tmp415 + 2*tmp416) + tmp62*(tmp301*tmp392 + tmp403) + tmp62*(tmp390*tmp409 + tmp417) + tmp64*(2*tmp404 + tmp405) + tmp64*(2*tmp418 + tmp419) + tmp69*(tmp261*tmp392 + tmp266*tmp275) + tmp69*(tmp270*tmp406 + tmp382*tmp390)) - alpha_dDD00 - 2*tmp345 + tmp346*tmp347 - tmp349 - tmp351 - tmp71*(tmp123*(-cf_dDD00 + tmp122*tmp346) - tmp124*tmp348 - tmp125*tmp350);
               const double tmp422 = cf_dD1*tmp122;
               const double tmp423 = alpha_dD1*tmp422;
               const double tmp424 = pow(cf_dD1, 2);
               const double tmp425 = -tmp312 - tmp313 - tmp314;
               const double tmp426 = alpha_dD1*tmp425;
               const double tmp427 = -tmp316 - tmp317 - tmp318;
               const double tmp428 = alpha_dD0*tmp427;
               const double tmp429 = -lambdaU1 + lambdaU_dD01;
               const double tmp430 = lambdaU_dD11*tmp2 + tmp130;
               const double tmp431 = tmp131*tmp2;
               const double tmp432 = tmp22*tmp431;
               const double tmp433 = -lambdaU2*tmp432;
               const double tmp434 = tmp194*tmp2;
               const double tmp435 = lambdaU_dD21*tmp13 + tmp129*tmp434 + tmp433;
               const double tmp436 = tmp127*tmp366;
               const double tmp437 = hDD_dD120*tmp171;
               const double tmp438 = hDD_dDD1101*tmp4;
               const double tmp439 = tmp27*tmp4 + tmp308;
               const double tmp440 = tmp2*tmp439;
               const double tmp441 = -tmp440;
               const double tmp442 = hDD_dD110*tmp51;
               const double tmp443 = tmp2*tmp284;
               const double tmp444 = pow(tmp105, 2);
               const double tmp445 = tmp194*tmp444;
               const double tmp446 = tmp172*tmp4;
               const double tmp447 = tmp445*tmp446;
               const double tmp448 = tmp128*tmp439;
               const double tmp449 = -tmp131*tmp186;
               const double tmp450 = tmp196*tmp47;
               const double tmp451 = -tmp198*tmp47;
               const double tmp452 = tmp306*tmp315;
               const double tmp453 = tmp292*tmp306;
               const double tmp454 = tmp315*tmp35;
               const double tmp455 = tmp311*tmp47 + tmp320*tmp60 + tmp454;
               const double tmp456 = tmp223*tmp455;
               const double tmp457 = tmp223*tmp413;
               const double tmp458 = tmp315*tmp413;
               const double tmp459 = tmp292*tmp455;
               const double tmp460 = tmp227*tmp280;
               const double tmp461 = tmp229*tmp254;
               const double tmp462 = tmp280*tmp296;
               const double tmp463 = tmp296*tmp301;
               const double tmp464 = 2*tmp320;
               const double tmp465 = tmp301*tmp320;
               const double tmp466 = tmp231*tmp311;
               const double tmp467 = 2*tmp311;
               const double tmp468 = tmp231*tmp287;
               const double tmp469 = tmp254*tmp287;
               const double tmp470 = tmp229*tmp280;
               const double tmp471 = tmp229*tmp297;
               const double tmp472 = tmp229*tmp306;
               const double tmp473 = tmp229*tmp321;
               const double tmp474 = tmp297*tmp311;
               const double tmp475 = tmp280*tmp287;
               const double tmp476 = tmp287*tmp306;
               const double tmp477 = tmp287*tmp321;
               const double tmp478 = tmp227*tmp406;
               const double tmp479 = tmp227*tmp382;
               const double tmp480 = tmp227*tmp409;
               const double tmp481 = tmp227*tmp413;
               const double tmp482 = tmp320*tmp382;
               const double tmp483 = tmp296*tmp406;
               const double tmp484 = tmp296*tmp409;
               const double tmp485 = tmp296*tmp413;
               const double tmp486 = alpha*(-tmp102*(tmp352*tmp4 + tmp438 + tmp441) - tmp102*(hDD_dD111*tmp9 + tmp364*tmp9 + tmp420 + tmp438 - 3*tmp440) - tmp113*(hDD_dDD1111*tmp4 + tmp357*tmp4 + tmp360*tmp9 + tmp442) - tmp118*(4*hDD11 + hDD_dD110*tmp9 + hDD_dDD1100*tmp4 - 2*tmp443) - tmp142*(tmp436 - tmp437) - tmp142*(-tmp131*tmp151 + 3*tmp436) - tmp165*(-tmp131*tmp174 + tmp447) - tmp165*(-tmp131*tmp163 + tmp169*tmp9 + tmp447 + tmp450 + tmp451) - tmp187*(tmp28*tmp442 + tmp448 + tmp449) + tmp216*tmp453 + tmp216*tmp457 + tmp218*tmp419 + tmp233*tmp452 + tmp233*tmp456 + tmp235*tmp458 + tmp235*tmp459 + tmp238*tmp315*tmp455 + tmp245*tmp323 + tmp334*(tmp227*tmp420 + 2*tmp304 + 2*tmp305) + tmp338*(tmp320*tmp420 + 2*tmp454 + tmp467*tmp47) + tmp342*(tmp296*tmp420 + 2*tmp411 + 2*tmp412) + tmp35*tmp430 + tmp429*tmp60 + tmp435*tmp47 + tmp49*(2*tmp472 + tmp473) + tmp49*(tmp480 + 2*tmp481) + tmp49*(tmp254*tmp467 + tmp466) + tmp49*(tmp280*tmp464 + tmp465) + tmp54*(2*tmp462 + tmp463) + tmp54*(tmp468 + 2*tmp469) + tmp54*(2*tmp470 + tmp471) + tmp54*(2*tmp478 + tmp479) + tmp56*(tmp237 + 2*tmp461) + tmp56*(tmp325 + 2*tmp460) + tmp62*(2*tmp476 + tmp477) + tmp62*(tmp484 + 2*tmp485) + tmp62*(tmp280*tmp467 + tmp474) + tmp62*(tmp406*tmp464 + tmp482) + tmp64*(tmp306*tmp467 + tmp311*tmp321) + tmp64*(tmp320*tmp409 + tmp413*tmp464) + tmp69*(tmp386 + 2*tmp483) + tmp69*(tmp405 + 2*tmp475)) - alpha_dDD11 + tmp347*tmp424 - 2*tmp423 - tmp426 - tmp428 - tmp71*(tmp123*(-cf_dDD11 + tmp122*tmp424) - tmp124*tmp425 - tmp125*tmp427);
               const double tmp487 = tmp200*tmp249;
               const double tmp488 = tmp241*tmp301 + tmp256;
               const double tmp489 = tmp229*tmp301;
               const double tmp490 = 2*tmp468;
               const double tmp491 = tmp296*tmp297;
               const double tmp492 = tmp463 + tmp491;
               const double tmp493 = tmp223*tmp409;
               const double tmp494 = tmp292*tmp321;
               const double tmp495 = tmp453 + tmp494;
               const double tmp496 = tmp270*tmp297 + tmp408;
               const double tmp497 = tmp274*tmp275;
               const double tmp498 = tmp200*tmp301;
               const double tmp499 = tmp200*tmp261;
               const double tmp500 = tmp231*tmp266;
               const double tmp501 = tmp244*tmp266;
               const double tmp502 = tmp229*tmp261;
               const double tmp503 = 2*tmp393;
               const double tmp504 = tmp229*tmp249;
               const double tmp505 = tmp244*tmp287;
               const double tmp506 = 2*tmp505;
               const double tmp507 = tmp270*tmp306;
               const double tmp508 = tmp270*tmp321 + tmp410;
               const double tmp509 = tmp227*tmp379;
               const double tmp510 = tmp275*tmp296;
               const double tmp511 = tmp377 + tmp510;
               const double tmp512 = tmp223*tmp382;
               const double tmp513 = tmp292*tmp297;
               const double tmp514 = tmp395 + tmp513;
               const double tmp515 = tmp274*tmp301;
               const double tmp516 = tmp274*tmp297;
               const double tmp517 = tmp241*tmp409 + tmp322;
               const double tmp518 = tmp214*tmp296;
               const double tmp519 = tmp249*tmp296 + tmp518;
               const double tmp520 = tmp223*tmp301;
               const double tmp521 = tmp231*tmp292;
               const double tmp522 = tmp254*tmp292 + tmp521;
               const double tmp523 = tmp243*tmp382;
               const double tmp524 = tmp231*tmp270 + tmp387;
               const double tmp525 = tmp241*tmp382 + tmp300;
               const double tmp526 = tmp243*tmp379;
               const double tmp527 = tmp214*tmp274;
               const double tmp528 = tmp162*tmp2;
               const double tmp529 = -tmp132*tmp158 - tmp528;
               const double tmp530 = -tmp198*tmp52 + tmp529;
               const double tmp531 = tmp146*tmp4;
               const double tmp532 = tmp22*tmp9;
               const double tmp533 = tmp173*tmp2;
               const double tmp534 = -tmp533;
               const double tmp535 = -tmp132*tmp170 + tmp534;
               const double tmp536 = hDD_dD021*tmp532 + hDD_dDD0211*tmp179 - tmp52 + tmp531 + tmp535;
               const double tmp537 = (1.0/2.0)*tmp32;
               const double tmp538 = lambdaU2*tmp11;
               const double tmp539 = tmp150*tmp2;
               const double tmp540 = -tmp132*tmp147 + tmp46 - tmp539;
               const double tmp541 = tmp22*xx0;
               const double tmp542 = hDD_dD020*tmp541 + hDD_dDD0201*tmp179 + tmp152 + tmp156;
               const double tmp543 = -hDD_dD020*tmp168 - tmp138*xx0;
               const double tmp544 = tmp128*tmp360 - tmp132*tmp184;
               const double tmp545 = tmp185*tmp2;
               const double tmp546 = -tmp545;
               const double tmp547 = (1.0/2.0)*tmp52;
               const double tmp548 = (1.0/2.0)*lambdaU_dD10;
               const double tmp549 = (1.0/2.0)*lambdaU_dD20;
               const double tmp550 = (1.0/4.0)*lambdaU2;
               const double tmp551 = -hDD01*tmp366*tmp550 + lambdaU_dD00*tmp547 - tmp102*(tmp369 + tmp540 + tmp542) - tmp102*(-tmp368 - tmp373 + tmp542 + tmp543) - tmp118*(hDD_dDD0200*tmp179 + tmp146 + tmp355 - tmp356) + tmp13*tmp39*tmp549 + tmp134*tmp547 - tmp142*(-hDD_dD220*tmp126 + tmp128*tmp363 - tmp370 + tmp371) - tmp142*(hDD00*tmp28 + tmp128*tmp364 - tmp144 + tmp372 + tmp98) - tmp165*(tmp126*tmp353 + tmp188 + tmp544) - tmp165*(hDD00*tmp11*tmp532 + hDD_dD001*tmp126 + tmp128*tmp359 + tmp153*tmp60 - tmp164*tmp184 - tmp189 + tmp546) + tmp167*tmp548 - tmp187*(tmp128*tmp169 + tmp128*tmp170 + tmp137 + tmp141 - tmp145) + tmp334*(tmp214 + tmp249) + tmp338*(tmp297 + tmp301) + tmp342*(tmp261 + tmp275) - tmp537*tmp538;
               const double tmp552 = -tmp202 - tmp204;
               const double tmp553 = alpha_dD0*tmp552;
               const double tmp554 = -tmp206 - tmp207;
               const double tmp555 = alpha_dD1*tmp554;
               const double tmp556 = -tmp553 - tmp555 - tmp71*(-tmp124*tmp554 - tmp125*tmp552);
               const double tmp557 = alpha*(-tmp113*(tmp530 + tmp536) + tmp49*(2*tmp236 + tmp498) + tmp49*(tmp277 + tmp519) + tmp49*(tmp307 + tmp517) + tmp49*(tmp504 + tmp506) + tmp49*(tmp520 + tmp522) + tmp49*(tmp302 + tmp303 + tmp523) + tmp54*(2*tmp217 + tmp499) + tmp54*(tmp299 + tmp525) + tmp54*(tmp388 + 2*tmp501) + tmp54*(tmp254*tmp270 + tmp524) + tmp54*(tmp262 + tmp276 + tmp526) + tmp54*(tmp249*tmp274 + tmp262 + tmp527) + tmp551 + tmp56*(2*tmp246 + tmp487) + tmp56*(tmp257 + tmp488) + tmp56*(tmp248 + tmp250 + tmp279) + tmp62*(tmp399 + 2*tmp500) + tmp62*(tmp502 + tmp503) + tmp62*(tmp507 + tmp508) + tmp62*(tmp509 + tmp511) + tmp62*(tmp512 + tmp514) + tmp62*(tmp383 + tmp515 + tmp516) + tmp64*(tmp479 + tmp492) + tmp64*(tmp489 + tmp490) + tmp64*(tmp493 + tmp495) + tmp69*(tmp389 + tmp496) + tmp69*(2*tmp391 + tmp397) + tmp69*(tmp376 + tmp380 + tmp497)) + tmp556;
               const double tmp558 = tmp200*tmp254;
               const double tmp559 = tmp243*tmp280 + tmp251;
               const double tmp560 = tmp297*tmp320 + tmp481;
               const double tmp561 = tmp315*tmp321;
               const double tmp562 = tmp212*tmp280;
               const double tmp563 = tmp205*tmp406;
               const double tmp564 = tmp200*tmp280;
               const double tmp565 = tmp200*tmp306;
               const double tmp566 = tmp212*tmp306;
               const double tmp567 = tmp212*tmp254;
               const double tmp568 = tmp214*tmp311;
               const double tmp569 = tmp244*tmp311;
               const double tmp570 = tmp208*tmp455;
               const double tmp571 = tmp261*tmp320;
               const double tmp572 = tmp275*tmp320 + tmp478;
               const double tmp573 = tmp280*tmp315;
               const double tmp574 = tmp297*tmp315;
               const double tmp575 = tmp205*tmp413;
               const double tmp576 = tmp243*tmp413 + tmp326;
               const double tmp577 = tmp214*tmp320 + tmp460;
               const double tmp578 = tmp241*tmp455;
               const double tmp579 = tmp231*tmp315;
               const double tmp580 = tmp243*tmp406 + tmp278;
               const double tmp581 = tmp241*tmp413;
               const double tmp582 = tmp205*tmp280;
               const double tmp583 = 2*hDD_dD121*tmp159 + hDD_dDD1211*tmp108 - tmp132*tmp162 - tmp132*tmp173 + tmp138*tmp51 + tmp158*xx0 + tmp170*xx0 - tmp47;
               const double tmp584 = hDD_dD011*tmp36 + (1.0/2.0)*hDD_dD111*tmp106 + tmp109*tmp27 - tmp132*tmp176 + tmp153*tmp34 + tmp184*xx0 + tmp449;
               const double tmp585 = (1.0/2.0)*tmp435;
               const double tmp586 = tmp11*tmp9;
               const double tmp587 = hDD12*tmp532 + hDD_dD120*tmp159 + hDD_dD121*tmp586 + hDD_dDD1201*tmp108;
               const double tmp588 = hDD_dD010*tmp36 + tmp546;
               const double tmp589 = (1.0/2.0)*tmp47;
               const double tmp590 = (1.0/2.0)*tmp60;
               const double tmp591 = -tmp102*(-1.0/2.0*tmp437 - 2*tmp528 + tmp531 + tmp534 + tmp587) - tmp102*(-tmp132*tmp150 + tmp147*xx0 + tmp52 - 3*tmp533 + tmp587) - tmp105*tmp13*tmp35*tmp550 - tmp118*(hDD_dDD1200*tmp108 + tmp138*tmp9 + 4*tmp46 - 2*tmp539) + tmp134*tmp589 - tmp142*(tmp128*tmp283 - 1.0/2.0*tmp190 + tmp588) - tmp142*(hDD01*tmp126 + tmp126*tmp364 + tmp128*tmp284 - tmp132*tmp143 - 3*tmp545) - tmp165*(tmp126*tmp360 - tmp132*tmp177 - tmp132*tmp185 + tmp448) - tmp187*(hDD_dD120*tmp135*tmp51 - tmp12*tmp444*tmp446 + tmp126*tmp169 + tmp128*tmp173 + tmp166) + tmp334*(tmp231 + tmp254) + tmp338*(tmp306 + tmp321) + tmp342*(tmp280 + tmp297) + tmp39*tmp585 + tmp429*tmp547 + tmp430*tmp589 - tmp538*tmp590;
               const double tmp592 = -tmp225 - tmp226;
               const double tmp593 = alpha_dD0*tmp592;
               const double tmp594 = -tmp220 - tmp222;
               const double tmp595 = alpha_dD1*tmp594;
               const double tmp596 = -tmp593 - tmp595 - tmp71*(-tmp124*tmp594 - tmp125*tmp592);
               const double tmp597 = alpha*(-tmp113*(tmp451 + tmp583) - tmp165*(tmp197 + tmp584) + tmp49*(2*tmp237 + tmp565) + tmp49*(tmp325 + tmp576) + tmp49*(tmp461 + 2*tmp569) + tmp49*(tmp249*tmp320 + tmp577) + tmp49*(tmp323 + tmp324 + tmp578) + tmp49*(tmp254*tmp315 + tmp323 + tmp579) + tmp54*(2*tmp234 + tmp564) + tmp54*(tmp277 + tmp580) + tmp54*(tmp307 + tmp522) + tmp54*(tmp506 + tmp567) + tmp54*(tmp519 + tmp582) + tmp54*(tmp281 + tmp298 + tmp581) + tmp56*(2*tmp247 + tmp558) + tmp56*(tmp252 + tmp559) + tmp56*(tmp253 + tmp255 + tmp328) + tmp591 + tmp62*(tmp470 + 2*tmp568) + tmp62*(tmp490 + tmp566) + tmp62*(tmp492 + tmp575) + tmp62*(tmp495 + tmp570) + tmp62*(tmp571 + tmp572) + tmp62*(tmp457 + tmp573 + tmp574) + tmp64*(tmp465 + tmp560) + tmp64*(2*tmp466 + tmp472) + tmp64*(tmp452 + tmp456 + tmp561) + tmp69*(tmp414 + tmp514) + tmp69*(tmp503 + tmp562) + tmp69*(tmp511 + tmp563)) + tmp596;
               const double tmp598 = 2*tmp479;
               const double tmp599 = tmp457 + tmp493;
               const double tmp600 = 2*tmp277;
               const double tmp601 = 2*tmp509;
               const double tmp602 = tmp223*tmp406 + tmp512;
               const double tmp603 = tmp229*tmp275;
               const double tmp604 = tmp281 + tmp520;
               const double tmp605 = tmp200*tmp297;
               const double tmp606 = tmp196*tmp52 + tmp529;
               const double tmp607 = 2*tmp414;
               const double tmp608 = tmp383 + tmp563;
               const double tmp609 = 2*tmp307;
               const double tmp610 = 2*tmp570;
               const double tmp611 = tmp205*tmp409 + tmp575;
               const double tmp612 = tmp212*tmp321;
               const double tmp613 = tmp302 + tmp582;
               const double tmp614 = tmp504 + tmp567;
               const double tmp615 = tmp301*tmp311 + tmp476;
               const double tmp616 = tmp315*tmp409;
               const double tmp617 = tmp274*tmp406;
               const double tmp618 = tmp266*tmp280 + tmp401;
               const double tmp619 = tmp274*tmp280;
               const double tmp620 = tmp320*tmp379;
               const double tmp621 = tmp274*tmp413;
               const double tmp622 = tmp266*tmp306 + tmp404;
               const double tmp623 = tmp261*tmp311 + tmp475;
               const double tmp624 = tmp315*tmp382;
               const double tmp625 = tmp270*tmp455;
               const double tmp626 = tmp489 + tmp566;
               const double tmp627 = tmp301*tmp315;
               const double tmp628 = tmp249*tmp311 + tmp469;
               const double tmp629 = tmp502 + tmp562;
               const double tmp630 = tmp254*tmp266 + tmp394;
               const double tmp631 = -tmp132*tmp169;
               const double tmp632 = -tmp330 + tmp436 + tmp631;
               const double tmp633 = hDD_dDD0101*xx0;
               const double tmp634 = lambdaU_dD00*tmp590 - tmp102*(-hDD_dD110*xx0 + tmp358 - tmp361 + tmp633) - tmp102*(hDD00 + hDD11 + hDD_dD011 + tmp362 - tmp443 + tmp633) - tmp113*(hDD_dD001*xx0 + hDD_dD010*tmp4 - hDD_dD111*xx0 + hDD_dDD0111*xx0 + tmp353*xx0 + tmp441) - tmp118*(hDD01*tmp2 + hDD_dD010 + hDD_dDD0100*xx0 - tmp365) + tmp127*tmp549 - tmp142*(-tmp374 + tmp543) - tmp142*(tmp375 + tmp540) - tmp165*(tmp535 + tmp631) - tmp187*(tmp544 + tmp588) + tmp2*tmp35*tmp548 + tmp334*(tmp280 + tmp301) + tmp338*(tmp409 + tmp413) + tmp342*(tmp382 + tmp406) + tmp429*tmp537 + tmp430*tmp590 + tmp52*tmp585;
               const double tmp635 = -alpha_dD0*tmp422;
               const double tmp636 = -alpha_dD1*tmp344;
               const double tmp637 = -tmp293 - tmp294 - tmp295;
               const double tmp638 = alpha_dD0*tmp637;
               const double tmp639 = -tmp288 - tmp289 - tmp290;
               const double tmp640 = alpha_dD1*tmp639;
               const double tmp641 = -alpha_dDD01 + cf_dD0*cf_dD1*tmp347 + tmp635 + tmp636 - tmp638 - tmp640 - tmp71*(tmp123*(cf_dD0*tmp422 - cf_dDD01) - tmp124*tmp639 - tmp125*tmp637);
               const double tmp642 = alpha*(-tmp165*(tmp530 + tmp632) + tmp49*(2*tmp453 + tmp627) + tmp49*(tmp468 + tmp628) + tmp49*(tmp479 + tmp611) + tmp49*(tmp493 + tmp610) + tmp49*(tmp612 + tmp626) + tmp49*(tmp462 + tmp463 + tmp571) + tmp54*(tmp396 + 2*tmp507) + tmp54*(tmp400 + tmp629) + tmp54*(tmp500 + tmp630) + tmp54*(tmp509 + tmp608) + tmp54*(tmp512 + tmp607) + tmp54*(tmp377 + tmp515 + tmp619) + tmp56*(tmp236 + tmp614) + tmp56*(tmp277 + tmp613) + tmp56*(tmp520 + tmp609) + tmp62*(tmp405 + tmp623) + tmp62*(tmp418 + 2*tmp625) + tmp62*(2*tmp419 + tmp624) + tmp62*(tmp266*tmp321 + tmp622) + tmp62*(tmp386 + tmp483 + tmp620) + tmp62*(tmp274*tmp409 + tmp386 + tmp621) + tmp634 + tmp64*(2*tmp459 + tmp616) + tmp64*(tmp477 + tmp615) + tmp64*(tmp482 + tmp484 + tmp485) + tmp69*(tmp403 + tmp618) + tmp69*(tmp416 + 2*tmp417) + tmp69*(tmp384 + tmp385 + tmp617)) + tmp641;
               const double tmp643 = tmp343*tmp56 + tmp421*tmp69 + tmp486*tmp64 + tmp49*tmp597 + tmp49*(alpha*(-tmp113*(tmp450 + tmp583) - tmp165*(tmp199 + tmp584) + tmp49*(2*tmp323 + tmp579) + tmp49*(tmp324 + 2*tmp578) + tmp49*(tmp325 + tmp577) + tmp49*(tmp243*tmp409 + tmp576) + tmp49*(tmp237 + tmp461 + tmp569) + tmp49*(tmp200*tmp321 + tmp237 + tmp565) + tmp54*(tmp298 + 2*tmp581) + tmp54*(tmp518 + tmp613) + tmp54*(tmp521 + tmp609) + tmp54*(tmp523 + tmp580) + tmp54*(tmp234 + tmp564 + tmp605) + tmp54*(tmp236 + tmp505 + tmp567) + tmp56*(tmp253 + 2*tmp328) + tmp56*(tmp329 + tmp559) + tmp56*(tmp232 + tmp247 + tmp558) + tmp591 + tmp62*(2*tmp457 + tmp574) + tmp62*(tmp479 + tmp572) + tmp62*(tmp491 + tmp611) + tmp62*(tmp494 + tmp610) + tmp62*(tmp468 + tmp566 + tmp612) + tmp62*(tmp470 + tmp471 + tmp568) + tmp64*(2*tmp456 + tmp561) + tmp64*(tmp480 + tmp560) + tmp64*(tmp466 + tmp472 + tmp473) + tmp69*(tmp510 + tmp608) + tmp69*(tmp513 + tmp607) + tmp69*(tmp393 + tmp400 + tmp562)) + tmp596) + tmp54*tmp557 + tmp54*(alpha*(-tmp113*(tmp536 + tmp606) + tmp49*(tmp303 + 2*tmp523) + tmp49*(tmp517 + tmp581) + tmp49*(tmp518 + tmp600) + tmp49*(tmp521 + tmp604) + tmp49*(tmp234 + tmp504 + tmp505) + tmp49*(tmp236 + tmp498 + tmp605) + tmp54*(2*tmp262 + tmp527) + tmp54*(tmp276 + 2*tmp526) + tmp54*(tmp299 + tmp524) + tmp54*(tmp241*tmp406 + tmp525) + tmp54*(tmp217 + tmp388 + tmp501) + tmp54*(tmp200*tmp275 + tmp217 + tmp499) + tmp551 + tmp56*(tmp248 + 2*tmp279) + tmp56*(tmp327 + tmp488) + tmp56*(tmp215 + tmp246 + tmp487) + tmp62*(2*tmp383 + tmp516) + tmp62*(tmp414 + tmp508) + tmp62*(tmp510 + tmp601) + tmp62*(tmp513 + tmp602) + tmp62*(tmp393 + tmp502 + tmp603) + tmp62*(tmp399 + tmp400 + tmp500) + tmp64*(tmp491 + tmp598) + tmp64*(tmp494 + tmp599) + tmp64*(tmp468 + tmp471 + tmp489) + tmp69*(2*tmp380 + tmp497) + tmp69*(tmp407 + tmp496) + tmp69*(tmp391 + tmp397 + tmp398)) + tmp556) + tmp62*tmp642 + tmp62*(alpha*(-tmp165*(tmp606 + tmp632) + tmp49*(tmp462 + 2*tmp571) + tmp49*(tmp471 + tmp626) + tmp49*(tmp568 + tmp628) + tmp49*(tmp570 + tmp599) + tmp49*(tmp575 + tmp598) + tmp49*(tmp453 + tmp573 + tmp627) + tmp54*(2*tmp377 + tmp619) + tmp54*(tmp393 + tmp630) + tmp54*(tmp414 + tmp602) + tmp54*(tmp563 + tmp601) + tmp54*(tmp603 + tmp629) + tmp54*(tmp395 + tmp396 + tmp507) + tmp56*(tmp234 + tmp614) + tmp56*(tmp307 + tmp604) + tmp56*(tmp582 + tmp600) + tmp62*(2*tmp386 + tmp621) + tmp62*(tmp405 + tmp622) + tmp62*(tmp483 + 2*tmp620) + tmp62*(tmp275*tmp311 + tmp623) + tmp62*(tmp418 + tmp419 + tmp625) + tmp62*(tmp315*tmp406 + tmp419 + tmp624) + tmp634 + tmp64*(tmp474 + tmp615) + tmp64*(2*tmp482 + tmp485) + tmp64*(tmp458 + tmp459 + tmp616) + tmp69*(2*tmp384 + tmp617) + tmp69*(tmp402 + tmp618) + tmp69*(tmp415 + tmp416 + tmp417)) + tmp641);
               const double tmp644 = vetU_dD00*xx0;
               const double tmp645 = aDD11*tmp4;
               const double tmp646 = tmp22*vetU2;
               const double tmp647 = -tmp431*tmp646;
               const double tmp648 = tmp13*vetU_dD21 + tmp647;
               const double tmp649 = aDD12*tmp108;
               const double tmp650 = tmp49*tmp645 + tmp50*tmp54 + tmp56*tmp649;
               const double tmp651 = tmp49*tmp649;
               const double tmp652 = tmp64*tmp645;
               const double tmp653 = tmp651 + tmp652 + tmp67;
               const double tmp654 = tmp50*tmp69 + tmp54*tmp649 + tmp62*tmp645;
               const double tmp655 = tmp60*tmp75;
               const double tmp656 = (1.0/3.0)*tmp643;
               const double tmp657 = aDD22*tmp36;
               const double tmp658 = tmp56*tmp657;
               const double tmp659 = tmp651 + tmp658 + tmp66;
               const double tmp660 = tmp49*tmp657 + tmp57*tmp62 + tmp64*tmp649;
               const double tmp661 = tmp54*tmp657 + tmp57*tmp69 + tmp62*tmp649;
               const double tmp662 = tmp52*tmp75;
               const double tmp663 = vetU1*xx0;
               const double tmp664 = aDD11*tmp9;
               const double tmp665 = (2.0/3.0)*tmp4;
               const double tmp666 = tmp25*tmp665;
               const double tmp667 = 2*tmp649;
               const double tmp668 = tmp649*tmp71;
               const double tmp669 = tmp645*tmp71;
               const double tmp670 = tmp35*tmp75;
               const double tmp671 = (1.0/3.0)*tmp4;
               const double tmp672 = tmp46*tmp671;
               const double tmp673 = aDD22*tmp191;
               const double tmp674 = alpha*tmp673;
               const double tmp675 = tmp39*tmp75;
               const double tmp676 = tmp131*tmp5;
               const double tmp677 = lambdaU0*vetU_dD00;
               const double tmp678 = tmp2*vetU_dD01;
               const double tmp679 = lambdaU1*tmp678;
               const double tmp680 = alpha*trK_dD1;
               const double tmp681 = tmp62*tmp680;
               const double tmp682 = tmp69*vetU_dDD000;
               const double tmp683 = alpha*trK_dD0;
               const double tmp684 = tmp683*tmp69;
               const double tmp685 = 2*vetU_dD11;
               const double tmp686 = tmp64*(tmp644 - tmp685 - vetU0 + vetU_dDD011);
               const double tmp687 = tmp126*tmp648;
               const double tmp688 = tmp49*tmp687;
               const double tmp689 = tmp126*tmp16;
               const double tmp690 = tmp56*(-tmp105*vetU1 + tmp126*vetU_dD00 + tmp128*vetU_dD01 - tmp28*vetU0);
               const double tmp691 = tmp8*xx0;
               const double tmp692 = -tmp678 - tmp691 + vetU_dDD001;
               const double tmp693 = (3.0/2.0)*tmp62;
               const double tmp694 = tmp49*(tmp366*vetU2 - 2*tmp646 - tmp687);
               const double tmp695 = tmp2*vetU_dDD111;
               const double tmp696 = tmp131*tmp3;
               const double tmp697 = 4*tmp59;
               const double tmp698 = tmp11*tmp22;
               const double tmp699 = tmp51*tmp698;
               const double tmp700 = (1.0/2.0)*tmp131/tmp29;
               const double tmp701 = -tmp13*tmp180*vetU0 - tmp192*tmp696 + tmp695 + tmp700*(tmp3*(tmp192*tmp29 - 2*tmp30) + tmp685*tmp699) + tmp700*(tmp697*vetU_dD01 + 8*tmp699*vetU0) + vetU_dDD001;
               const double tmp702 = (1.0/4.0)*tmp701;
               const double tmp703 = tmp5*vetU0;
               const double tmp704 = tmp12*tmp6;
               const double tmp705 = tmp5*vetU_dD11;
               const double tmp706 = tmp2*vetU_dDD101 - tmp705;
               const double tmp707 = -tmp180*tmp704 + tmp700*(8*tmp108*tmp23 + 2*tmp29*tmp698*tmp8) + tmp700*(12*tmp36*vetU0 + tmp697*vetU_dD00) - 8*tmp703 + tmp706 + vetU_dDD000;
               const double tmp708 = (1.0/4.0)*tmp707;
               const double tmp709 = tmp13*vetU2;
               const double tmp710 = betU0*tmp709;
               const double tmp711 = betU2*tmp13;
               const double tmp712 = tmp711*vetU0;
               const double tmp713 = tmp12*vetU2;
               const double tmp714 = (3.0/4.0)*tmp713;
               const double tmp715 = tmp130*tmp714;
               const double tmp716 = (3.0/4.0)*vetU0;
               const double tmp717 = lambdaU2*tmp13*tmp716;
               const double tmp718 = betU1*tmp5;
               const double tmp719 = tmp713*tmp718;
               const double tmp720 = betU2*tmp704;
               const double tmp721 = lambdaU1*tmp5;
               const double tmp722 = tmp714*tmp721;
               const double tmp723 = (3.0/4.0)*lambdaU2;
               const double tmp724 = tmp704*tmp723;
               const double tmp725 = tmp676*vetU2;
               const double tmp726 = betU2*tmp725;
               const double tmp727 = tmp723*tmp725;
               const double tmp728 = betU0*vetU0;
               const double tmp729 = lambdaU0*tmp716;
               const double tmp730 = betU0*tmp3;
               const double tmp731 = betU1*tmp2;
               const double tmp732 = tmp731*vetU0;
               const double tmp733 = betU1*tmp6;
               const double tmp734 = (3.0/4.0)*tmp296;
               const double tmp735 = tmp130*vetU1;
               const double tmp736 = tmp2*vetU0;
               const double tmp737 = lambdaU1*tmp736;
               const double tmp738 = (3.0/4.0)*lambdaU1*tmp6;
               const double tmp739 = 3*alpha;
               const double tmp740 = alpha_dD0 + tmp344*tmp739;
               const double tmp741 = pow(tmp53, 2);
               const double tmp742 = pow(tmp42, -2);
               const double tmp743 = tmp741*tmp742;
               const double tmp744 = pow(tmp61, 2);
               const double tmp745 = tmp742*tmp744;
               const double tmp746 = tmp645*tmp745;
               const double tmp747 = aDD00*tmp742;
               const double tmp748 = pow(tmp68, 2)*tmp747;
               const double tmp749 = tmp53*tmp61;
               const double tmp750 = tmp649*tmp742;
               const double tmp751 = 4*tmp750;
               const double tmp752 = tmp53*tmp68;
               const double tmp753 = tmp57*tmp742;
               const double tmp754 = 4*tmp753;
               const double tmp755 = tmp61*tmp68;
               const double tmp756 = tmp50*tmp742;
               const double tmp757 = 4*tmp756;
               const double tmp758 = tmp740*(-tmp673*tmp743 - 2*tmp746 - 2*tmp748 - tmp749*tmp751 - tmp752*tmp754 - tmp755*tmp757);
               const double tmp759 = pow(tmp48, 2);
               const double tmp760 = tmp645*tmp742;
               const double tmp761 = tmp657*tmp742;
               const double tmp762 = tmp10*tmp742;
               const double tmp763 = tmp48*tmp53;
               const double tmp764 = tmp667*tmp742;
               const double tmp765 = tmp48*tmp764;
               const double tmp766 = tmp18*tmp742;
               const double tmp767 = tmp55*tmp766;
               const double tmp768 = tmp53*tmp767 + pow(tmp55, 2)*tmp761 + tmp55*tmp765 + tmp741*tmp747 + tmp759*tmp760 + tmp762*tmp763;
               const double tmp769 = (3.0/2.0)*alpha;
               const double tmp770 = tmp768*tmp769;
               const double tmp771 = tmp742*tmp759;
               const double tmp772 = tmp744*tmp747;
               const double tmp773 = pow(tmp63, 2)*tmp760;
               const double tmp774 = tmp48*tmp61;
               const double tmp775 = tmp61*tmp63;
               const double tmp776 = tmp63*tmp765 + tmp657*tmp771 + tmp762*tmp775 + tmp766*tmp774 + tmp772 + tmp773;
               const double tmp777 = tmp769*tmp776;
               const double tmp778 = tmp657*tmp743 + tmp746 + tmp748 + tmp749*tmp764 + tmp752*tmp766 + tmp755*tmp762;
               const double tmp779 = alpha*tmp778;
               const double tmp780 = (3.0/2.0)*tmp779;
               const double tmp781 = alpha_dD1 + tmp422*tmp739;
               const double tmp782 = tmp673*tmp742;
               const double tmp783 = tmp48*tmp68;
               const double tmp784 = tmp53*tmp63;
               const double tmp785 = tmp760*tmp775;
               const double tmp786 = tmp747*tmp755;
               const double tmp787 = tmp63*tmp68;
               const double tmp788 = -tmp10*tmp745 - tmp749*tmp766 - tmp762*tmp787 - tmp763*tmp782 - tmp764*tmp774 - tmp764*tmp784 - tmp766*tmp783 - 2*tmp785 - 2*tmp786;
               const double tmp789 = tmp781*tmp788;
               const double tmp790 = tmp55*tmp761;
               const double tmp791 = tmp48*tmp756;
               const double tmp792 = tmp53*tmp747;
               const double tmp793 = tmp61*tmp792;
               const double tmp794 = tmp48*tmp760;
               const double tmp795 = tmp63*tmp794;
               const double tmp796 = tmp55*tmp753;
               const double tmp797 = tmp53*tmp756;
               const double tmp798 = tmp55*tmp750;
               const double tmp799 = tmp48*tmp790 + tmp61*tmp791 + tmp61*tmp796 + tmp63*tmp797 + tmp63*tmp798 + tmp649*tmp771 + tmp753*tmp763 + tmp793 + tmp795;
               const double tmp800 = tmp739*tmp799;
               const double tmp801 = tmp61*tmp794;
               const double tmp802 = tmp68*tmp792;
               const double tmp803 = tmp53*tmp790 + tmp57*tmp743 + tmp61*tmp797 + tmp61*tmp798 + tmp68*tmp791 + tmp68*tmp796 + tmp750*tmp763 + tmp801 + tmp802;
               const double tmp804 = tmp739*tmp803;
               const double tmp805 = tmp50*tmp745 + tmp749*tmp753 + tmp750*tmp774 + tmp750*tmp784 + tmp753*tmp783 + tmp756*tmp787 + tmp761*tmp763 + tmp785 + tmp786;
               const double tmp806 = tmp739*tmp805;
               const double tmp807 = (2.0/3.0)*tmp56;
               const double tmp808 = (2.0/3.0)*tmp69;
               const double tmp809 = (2.0/3.0)*tmp64;
               const double tmp810 = tmp25*(tmp243*tmp807 + tmp274*tmp808 + tmp320*tmp809 + (4.0/3.0)*tmp339 + (4.0/3.0)*tmp340 + (4.0/3.0)*tmp341);
               const double tmp811 = lambdaU1*tmp705;
               const double tmp812 = lambdaU0*tmp8;
               const double tmp813 = tmp62*tmp683;
               const double tmp814 = tmp64*tmp680;
               const double tmp815 = tmp16*tmp54;
               const double tmp816 = tmp105*tmp815;
               const double tmp817 = tmp2*vetU_dD00 - tmp703;
               const double tmp818 = tmp706 + tmp817;
               const double tmp819 = tmp64*(2*tmp678 + tmp691 + tmp695);
               const double tmp820 = (1.0/4.0)*tmp444;
               const double tmp821 = tmp56*(tmp126*tmp8 + tmp128*tmp19 + tmp28*tmp3 - tmp696*tmp820);
               const double tmp822 = 2/tmp51;
               const double tmp823 = tmp69*(tmp2*vetU_dDD100 + tmp20*tmp8 - 2*tmp5*vetU_dD10 + tmp822*vetU1);
               const double tmp824 = tmp2*vetU2;
               const double tmp825 = tmp128*tmp648;
               const double tmp826 = tmp49*(-tmp11*tmp824 - tmp153*tmp709 + (1.0/4.0)*tmp445*tmp824 - tmp825);
               const double tmp827 = (3.0/4.0)*tmp291;
               const double tmp828 = tmp781*(-tmp48*tmp63*tmp751 - tmp673*tmp771 - tmp754*tmp774 - tmp757*tmp775 - 2*tmp772 - 2*tmp773);
               const double tmp829 = tmp740*tmp788;
               const double tmp830 = tmp25*(tmp241*tmp807 + tmp270*tmp808 + tmp315*tmp809 + (4.0/3.0)*tmp335 + (4.0/3.0)*tmp336 + (4.0/3.0)*tmp337);
               const double tmp831 = lambdaU0*tmp16;
               const double tmp832 = tmp133*tmp648;
               const double tmp833 = tmp49*tmp680;
               const double tmp834 = tmp54*tmp683;
               const double tmp835 = tmp54*(tmp132*tmp8 + tmp817);
               const double tmp836 = tmp132*tmp19 + tmp678;
               const double tmp837 = tmp49*(-tmp3 + tmp836 - tmp3*tmp820/tmp182);
               const double tmp838 = tmp49*(tmp198*tmp3 + tmp836);
               const double tmp839 = tmp56*(tmp689 + tmp825);
               const double tmp840 = tmp69*(tmp13*vetU_dDD200 - 2*tmp14*vetU_dD20 + tmp16*tmp20 + tmp713*tmp822);
               const double tmp841 = tmp13*vetU_dDD201 + tmp132*tmp16 - tmp14*vetU_dD21 - tmp432*vetU_dD20 + tmp646*tmp676;
               const double tmp842 = tmp64*(tmp13*vetU_dDD211 - tmp131*tmp20*tmp22*vetU_dD21 + tmp16*xx0 + tmp164*tmp648 + tmp198*tmp709 + tmp709 + vetU2*(tmp13 + tmp192*tmp434) + tmp820*tmp824/pow(tmp11, 5));
               const double tmp843 = (3.0/4.0)*tmp287;
               const double tmp844 = tmp55*tmp782;
               const double tmp845 = tmp55*tmp764;
               const double tmp846 = tmp781*(-tmp48*tmp844 - tmp61*tmp767 - tmp63*tmp845 - tmp667*tmp771 - tmp762*tmp774 - tmp762*tmp784 - tmp763*tmp766 - 2*tmp793 - 2*tmp795);
               const double tmp847 = tmp740*(-tmp18*tmp743 - tmp53*tmp844 - tmp61*tmp845 - tmp68*tmp767 - tmp749*tmp762 - tmp762*tmp783 - tmp763*tmp764 - 2*tmp801 - 2*tmp802);
               const double tmp848 = tmp25*(tmp200*tmp807 + tmp266*tmp808 + tmp311*tmp809 + (4.0/3.0)*tmp331 + (4.0/3.0)*tmp332 + (4.0/3.0)*tmp333);
               const double tmp849 = alpha*(tmp10*tmp62 + tmp18*tmp54 + 2*tmp651 + tmp652 + tmp658 + tmp70) - tmp19 - tmp21 - tmp24 - vetU_dD00;
               const double tmp850 = (2.0/3.0)*tmp849;
               const double tmp851 = tmp62*uu_dD1;
               const double tmp852 = alpha*vv;
               const double tmp853 = 16*M_PI*tmp852;
               const double tmp854 = tmp69*uu_dD0;
               const double tmp855 = (1.0/3.0)*tmp701;
               const double tmp856 = (1.0/3.0)*tmp707;
               const double tmp857 = alpha*tmp768;
               const double tmp858 = tmp71*tmp776;
               const double tmp859 = 4*alpha;
               const double tmp860 = tmp799*tmp859;
               const double tmp861 = tmp803*tmp859;
               const double tmp862 = tmp805*tmp859;
               const double tmp863 = tmp62*uu_dD0;
               const double tmp864 = tmp64*uu_dD1;
               const double tmp865 = 2*tmp74;
               const double tmp866 = tmp56*tmp74;
               const double tmp867 = alpha_dDD01 + tmp638 + tmp640;
               const double tmp868 = 2*vetU0;
               const double tmp869 = tmp709*tmp868;
               const double tmp870 = 2*tmp6*tmp713;
               const double tmp871 = tmp676*pow(vetU2, 2);
               const double tmp872 = pow(vetU0, 2);
               const double tmp873 = tmp3*tmp868;
               const double tmp874 = tmp5*pow(vetU1, 2);
               const double tmp875 = 1.0*cf;
               const double tmp876 = cf_dD0*tmp875;
               const double tmp877 = cf_dD1*tmp875;
               const double tmp878 = tmp93*uu_dD1;
               const double tmp879 = alpha*tmp88;
               const double tmp880 = tmp88*uu_dD1;
               const double tmp881 = alpha*tmp90;
               const double tmp882 = tmp90*uu_dD0;
               const double tmp883 = tmp71*tmp74;
               const double tmp884 = tmp883*uu_dD1;
               const double tmp885 = tmp883*uu_dD0;
               const double tmp886 = alpha*tmp866;
               rhs_gfs[IDX4(ADD00GF, i0, i1, i2)] = aDD00*tmp0 + aDD00*tmp1 - aDD00*tmp26 + aDD_dupD000*vetU0 + aDD_dupD001*tmp3 + tmp10*tmp8 + tmp16*tmp18 - tmp58*(aDD00*tmp54 + tmp49*tmp50 + tmp56*tmp57) - tmp65*(aDD00*tmp62 + tmp49*tmp57 + tmp50*tmp64) - tmp72*(tmp66 + tmp67 + tmp70) + tmp74*(tmp421 - tmp643*((1.0/3.0)*hDD00 + 1.0/3.0)) - tmp96*(-tmp32*tmp82 + tmp73 + tmp83*tmp92 - tmp83*tmp95);
               rhs_gfs[IDX4(ADD01GF, i0, i1, i2)] = tmp2*(aDD00*vetU_dD01 + aDD01*tmp644 + aDD01*vetU_dD11 + aDD_dupD011*vetU1 + tmp1*tmp50 + tmp16*tmp649 - tmp26*tmp50 + tmp57*tmp648 - tmp58*tmp650 + tmp645*tmp8 - tmp65*tmp653 - tmp654*tmp72 + tmp74*(-tmp60*tmp656 + tmp642) - tmp96*(-tmp60*tmp82 + tmp655*tmp92 - tmp655*tmp95 + tmp85) + vetU0*(aDD01 + aDD_dupD010*xx0));
               rhs_gfs[IDX4(ADD02GF, i0, i1, i2)] = tmp13*(tmp1*tmp57 + tmp16*tmp657 + tmp17*tmp644 - tmp26*tmp57 + tmp3*(aDD02*tmp541 + aDD_dupD021*tmp179) - tmp58*tmp659 + tmp649*tmp8 - tmp65*tmp660 - tmp661*tmp72 + tmp74*(-tmp52*tmp656 + tmp557) - tmp96*(-tmp52*tmp82 + tmp662*tmp92 - tmp662*tmp95) + vetU0*(aDD_dupD020*tmp179 + tmp17));
               rhs_gfs[IDX4(ADD11GF, i0, i1, i2)] = tmp5*(-aDD11*tmp666 + aDD_dupD111*tmp663 + tmp1*tmp645 + tmp10*vetU_dD01 + tmp648*tmp667 - tmp65*tmp654 - tmp650*tmp668 - tmp653*tmp669 + tmp664*vetU_dD11 + tmp74*(tmp486 - tmp643*((1.0/3.0)*tmp34 + tmp671)) - tmp96*(-tmp35*tmp82 + tmp670*tmp92 - tmp670*tmp95 + tmp87) + vetU0*(aDD_dupD110*tmp4 + tmp664));
               rhs_gfs[IDX4(ADD12GF, i0, i1, i2)] = tmp14*(-aDD12*tmp11*tmp666 + aDD12*tmp179*vetU_dD11 + tmp1*tmp649 + tmp3*(aDD12*tmp159 + aDD_dupD121*tmp108) + tmp57*vetU_dD01 + tmp648*tmp657 - tmp65*tmp661 - tmp659*tmp668 - tmp660*tmp669 + tmp74*(tmp597 - tmp643*tmp672) - tmp96*(tmp47*tmp75*tmp92 - tmp47*tmp82 - tmp672*tmp75*tmp94) + vetU0*(aDD12*tmp586 + aDD_dupD120*tmp108));
               rhs_gfs[IDX4(ADD22GF, i0, i1, i2)] = tmp676*(tmp1*tmp657 - tmp26*tmp657 + tmp3*(aDD22*tmp110 + aDD_dupD221*tmp36) - tmp58*tmp661 - tmp659*tmp674 - tmp660*tmp668 + tmp74*(tmp343 - tmp643*((1.0/3.0)*tmp36 + (1.0/3.0)*tmp38)) - tmp96*(-tmp39*tmp82 + tmp675*tmp92 - tmp675*tmp95) + vetU0*(aDD22*tmp97 + aDD_dupD220*tmp36));
               rhs_gfs[IDX4(ALPHAGF, i0, i1, i2)] = alpha_dupD0*vetU0 + alpha_dupD1*tmp3 - tmp71*trK;
               rhs_gfs[IDX4(BETU0GF, i0, i1, i2)] = -betU0*eta + betU_dupD00*vetU0 + betU_dupD01*tmp3 + tmp205*tmp710 + tmp205*tmp712 - tmp205*tmp715 - tmp205*tmp717 + tmp205*tmp804 + tmp227*tmp719 + tmp227*tmp720 - tmp227*tmp722 - tmp227*tmp724 + tmp227*tmp800 + tmp242*tmp726 - tmp242*tmp727 + tmp243*tmp770 + tmp274*tmp728 - tmp274*tmp729 + tmp274*tmp780 + tmp296*tmp730 + tmp296*tmp732 + tmp296*tmp806 + tmp319*tmp733 - tmp319*tmp738 + tmp320*tmp777 - 3.0/2.0*tmp54*tmp689 + tmp62*tmp702 - 3.0/4.0*tmp677 - 3.0/4.0*tmp679 - tmp681 + (3.0/4.0)*tmp682 - tmp684 + (3.0/4.0)*tmp686 - 3.0/4.0*tmp688 + tmp69*tmp708 + (3.0/4.0)*tmp690 + tmp692*tmp693 + (3.0/4.0)*tmp694 - tmp734*tmp735 - tmp734*tmp737 + (3.0/4.0)*tmp758 + (3.0/4.0)*tmp789 + (3.0/4.0)*tmp810;
               rhs_gfs[IDX4(BETU1GF, i0, i1, i2)] = xx0*(betU_dupD11*tmp6 - eta*tmp731 - 3.0/8.0*tmp105*tmp49*tmp648 + tmp208*tmp710 + tmp208*tmp712 - tmp208*tmp715 - tmp208*tmp717 + tmp208*tmp804 + tmp223*tmp719 + tmp223*tmp720 - tmp223*tmp722 - tmp223*tmp724 + tmp223*tmp800 + tmp240*tmp726 - tmp240*tmp727 + tmp241*tmp770 + tmp270*tmp728 - tmp270*tmp729 + tmp270*tmp780 + tmp291*tmp730 + tmp291*tmp732 + tmp292*tmp806 + tmp315*tmp733 - tmp315*tmp738 + tmp315*tmp777 + tmp62*tmp708 + tmp64*tmp702 + tmp693*tmp818 - tmp735*tmp827 - tmp737*tmp827 - 3.0/4.0*tmp811 - 3.0/4.0*tmp812 - tmp813 - tmp814 - 3.0/4.0*tmp816 + (3.0/4.0)*tmp819 + (3.0/4.0)*tmp821 + (3.0/4.0)*tmp823 + (3.0/4.0)*tmp826 + (3.0/4.0)*tmp828 + (3.0/4.0)*tmp829 + (3.0/4.0)*tmp830 + vetU0*(betU_dupD10*tmp2 - tmp718));
               rhs_gfs[IDX4(BETU2GF, i0, i1, i2)] = tmp179*(-eta*tmp711 + tmp200*tmp726 - tmp200*tmp727 + tmp200*tmp770 + tmp211*tmp710 + tmp211*tmp712 - tmp211*tmp715 - tmp211*tmp717 + tmp212*tmp804 + tmp228*tmp719 + tmp228*tmp720 - tmp228*tmp722 - tmp228*tmp724 + tmp229*tmp800 + tmp266*tmp728 - tmp266*tmp729 + tmp266*tmp780 + tmp287*tmp730 + tmp287*tmp732 + tmp287*tmp806 + tmp3*(-betU2*tmp432 + betU_dupD21*tmp13) + tmp311*tmp733 - tmp311*tmp738 + tmp311*tmp777 + tmp49*tmp702 + tmp54*tmp708 + tmp693*tmp841 - tmp735*tmp843 - tmp737*tmp843 - 3.0/4.0*tmp831 - 3.0/4.0*tmp832 - tmp833 - tmp834 + (3.0/2.0)*tmp835 + (3.0/4.0)*tmp837 + (3.0/4.0)*tmp838 + (3.0/4.0)*tmp839 + (3.0/4.0)*tmp840 + (3.0/4.0)*tmp842 + (3.0/4.0)*tmp846 + (3.0/4.0)*tmp847 + (3.0/4.0)*tmp848 + vetU0*(-betU2*tmp14 + betU_dupD20*tmp13));
               rhs_gfs[IDX4(CFGF, i0, i1, i2)] = -2*cf*(-cf_dupD0*tmp123*vetU0 - cf_dupD1*tmp123*tmp3 - 1.0/6.0*tmp1 + (1.0/6.0)*tmp19 + (1.0/6.0)*tmp24 + (1.0/3.0)*tmp736 + (1.0/6.0)*vetU_dD00);
               rhs_gfs[IDX4(HDD00GF, i0, i1, i2)] = hDD_dupD000*vetU0 + hDD_dupD001*tmp3 + tmp0*tmp32 + tmp16*tmp330 + tmp420*tmp8 - tmp72 + tmp849*((2.0/3.0)*hDD00 + 2.0/3.0);
               rhs_gfs[IDX4(HDD01GF, i0, i1, i2)] = tmp2*(hDD01*tmp644 + hDD01*vetU_dD11 + hDD_dupD011*vetU1 + tmp16*tmp47 + tmp32*vetU_dD01 + tmp35*tmp8 + tmp52*tmp648 + tmp60*tmp850 - tmp65 + vetU0*(hDD01 + hDD_dupD010*xx0));
               rhs_gfs[IDX4(HDD02GF, i0, i1, i2)] = tmp13*(tmp16*tmp39 + tmp3*(hDD_dupD021*tmp179 + tmp155) + tmp44*tmp644 + tmp47*tmp8 + tmp52*tmp850 - tmp58 + vetU0*(hDD_dupD020*tmp179 + tmp44));
               rhs_gfs[IDX4(HDD11GF, i0, i1, i2)] = tmp5*(hDD_dupD111*tmp663 + tmp154*tmp648 + 2*tmp19*tmp35 + tmp420*vetU_dD01 - tmp669 + tmp849*((2.0/3.0)*tmp34 + tmp665) + vetU0*(hDD_dupD110*tmp4 + tmp282 + tmp9));
               rhs_gfs[IDX4(HDD12GF, i0, i1, i2)] = tmp14*(tmp167*vetU_dD11 + tmp3*(hDD_dupD121*tmp108 + tmp160) + tmp39*tmp648 + tmp46*tmp665*tmp849 + tmp52*vetU_dD01 - tmp668 + vetU0*(hDD_dupD120*tmp108 + tmp148));
               rhs_gfs[IDX4(HDD22GF, i0, i1, i2)] = tmp676*(tmp3*(hDD_dupD221*tmp36 + tmp106 + tmp111) - tmp674 + tmp849*((2.0/3.0)*tmp36 + (2.0/3.0)*tmp38) + vetU0*(hDD_dupD220*tmp36 + tmp97 + tmp99));
               rhs_gfs[IDX4(LAMBDAU0GF, i0, i1, i2)] = lambdaU_dupD00*vetU0 + lambdaU_dupD01*tmp3 + tmp205*tmp861 + tmp227*tmp860 + tmp258*tmp857 + tmp274*tmp71*tmp778 + tmp296*tmp862 + tmp320*tmp858 + tmp62*tmp855 - tmp677 - tmp679 - 4.0/3.0*tmp681 + tmp682 - 4.0/3.0*tmp684 + tmp686 - tmp688 + tmp69*tmp856 + tmp690 + tmp692*tmp86 + tmp694 + tmp758 + tmp789 + tmp810 - tmp815*tmp97 - tmp851*tmp853 - tmp853*tmp854;
               rhs_gfs[IDX4(LAMBDAU1GF, i0, i1, i2)] = xx0*(lambdaU_dupD11*tmp6 + tmp208*tmp861 + tmp223*tmp860 + tmp259*tmp857 + tmp292*tmp862 + tmp315*tmp858 + tmp390*tmp779 - tmp49*tmp825 + tmp62*tmp856 + tmp64*tmp855 - tmp811 - tmp812 - 4.0/3.0*tmp813 - 4.0/3.0*tmp814 - tmp816 + tmp818*tmp86 + tmp819 + tmp821 + tmp823 + tmp826 + tmp828 + tmp829 + tmp830 - tmp853*tmp863 - tmp853*tmp864 + vetU0*(lambdaU_dupD10*tmp2 - tmp721));
               rhs_gfs[IDX4(LAMBDAU2GF, i0, i1, i2)] = tmp179*(tmp200*tmp71*tmp768 + tmp212*tmp861 + tmp229*tmp860 + tmp287*tmp862 + tmp3*(lambdaU_dupD21*tmp13 + tmp433) + tmp311*tmp858 + tmp392*tmp779 - tmp49*tmp853*uu_dD1 + tmp49*tmp855 - tmp54*tmp853*uu_dD0 + tmp54*tmp856 - tmp831 - tmp832 - 4.0/3.0*tmp833 - 4.0/3.0*tmp834 + 2*tmp835 + tmp837 + tmp838 + tmp839 + tmp840 + tmp841*tmp86 + tmp842 + tmp846 + tmp847 + tmp848 + vetU0*(-lambdaU2*tmp14 + lambdaU_dupD20*tmp13));
               rhs_gfs[IDX4(TRKGF, i0, i1, i2)] = M_PI*tmp859*(-1.0*tmp78 - 2.0*tmp81 + 2.0*tmp84) + aDD00*tmp779 + alpha*tmp645*tmp776 + (1.0/3.0)*alpha*pow(trK, 2) + tmp3*trK_dupD1 - tmp49*tmp865*(tmp593 + tmp595) - tmp54*tmp865*(tmp553 + tmp555) + tmp58*tmp803 + tmp65*tmp805 + tmp657*tmp857 + tmp668*tmp799 - tmp866*(tmp116 + tmp121) - tmp88*(alpha_dDD11 - tmp423 + tmp426 + tmp428) - tmp90*(alpha_dDD00 - tmp345 + tmp349 + tmp351) - tmp93*(tmp635 + tmp867) - tmp93*(tmp636 + tmp867) + trK_dupD0*vetU0;
               rhs_gfs[IDX4(VETU0GF, i0, i1, i2)] = betU0 + tmp205*tmp869 + tmp227*tmp870 + tmp242*tmp871 + tmp274*tmp872 + tmp296*tmp873 + tmp3*vetU_dupD01 + tmp319*tmp874 + vetU0*vetU_dupD00;
               rhs_gfs[IDX4(VETU1GF, i0, i1, i2)] = xx0*(tmp208*tmp869 + tmp223*tmp870 + tmp240*tmp871 + tmp270*tmp872 + tmp291*tmp873 + tmp315*tmp874 + tmp6*vetU_dupD11 + tmp731 + vetU0*(tmp2*vetU_dupD10 + tmp7));
               rhs_gfs[IDX4(VETU2GF, i0, i1, i2)] = tmp179*(tmp200*tmp871 + tmp211*tmp869 + tmp228*tmp870 + tmp266*tmp872 + tmp287*tmp873 + tmp3*(tmp13*vetU_dupD21 + tmp647) + tmp311*tmp874 + tmp711 + vetU0*(tmp13*vetU_dupD20 + tmp15));
               rhs_gfs[IDX4(VVGF, i0, i1, i2)] = alpha*tmp274*tmp882 + alpha*tmp315*tmp880 + alpha*(fa*tmp80*sin(tmp79) + tmp77*uu) - alpha_dD0*tmp878 - alpha_dD0*tmp882 - alpha_dD1*tmp880 - alpha_dD1*tmp93*uu_dD0 + tmp240*tmp886*uu_dD1 + tmp242*tmp886*uu_dD0 + tmp270*tmp881*uu_dD1 + tmp291*tmp71*tmp878 + tmp3*vv_dD1 + tmp319*tmp879*uu_dD0 + tmp335*tmp884 + tmp336*tmp884 + tmp339*tmp885 + tmp340*tmp885 + tmp341*tmp885 - tmp71*tmp93*uu_dDD01 + tmp851*tmp876 + tmp852*trK + tmp854*tmp876 + tmp863*tmp877 + tmp864*tmp877 - tmp879*uu_dDD11 - tmp881*uu_dDD00 + vetU0*vv_dD0;
               rhs_gfs[IDX4(UUGF, i0, i1, i2)] = tmp3*uu_dupD1 - tmp852 + uu_dupD0*vetU0;
            }
            
            
        } // END LOOP: for(int i0=NGHOSTS; i0<NGHOSTS+Nxx[0]; i0++)
    } // END LOOP: for(int i1=NGHOSTS; i1<NGHOSTS+Nxx[1]; i1++)
} // END LOOP: for(int i2=NGHOSTS; i2<NGHOSTS+Nxx[2]; i2++)
